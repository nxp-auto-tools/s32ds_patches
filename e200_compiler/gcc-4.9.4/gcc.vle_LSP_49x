diff --git a/gcc/config/rs6000/lsp.md b/gcc/config/rs6000/lsp.md
new file mode 100644
index 0000000..bfdd66c
--- /dev/null
+++ b/gcc/config/rs6000/lsp.md
@@ -0,0 +1,6714 @@
+;; e200 LSP description
+;; Copyright (C) 2015 Free Software Foundation, Inc.
+;; Contributed by Marcel Achim (rb2501c@freescale.com)
+
+;; This file is part of GCC.
+
+;; GCC is free software; you can redistribute it and/or modify it
+;; under the terms of the GNU General Public License as published
+;; by the Free Software Foundation; either version 3, or (at your
+;; option) any later version.
+
+;; GCC is distributed in the hope that it will be useful, but WITHOUT
+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
+;; License for more details.
+
+;; You should have received a copy of the GNU General Public License
+;; along with GCC; see the file COPYING3.  If not see
+;; <http://www.gnu.org/licenses/>.
+
+;; LSP SIMD instructions
+
+(define_insn "lsp_zbrminc"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2200))]
+    "TARGET_LSP"
+    "zbrminc %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zcircinc"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2201))]
+    "TARGET_LSP"
+    "zcircinc %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvabsh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2202))]
+    "TARGET_LSP"
+    "zvabsh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvabshs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2203))]
+    "TARGET_LSP"
+    "zvabshs %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zabsw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (abs:SI (match_operand:SI 1 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2204)]
+    "TARGET_LSP"
+    "zabsw %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zabsws"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (abs:SI (match_operand:SI 1 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2205)]
+    "TARGET_LSP"
+    "zabsws %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddd"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2206))]
+    "TARGET_LSP"
+    "zaddd %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zadddss"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2207))]
+    "TARGET_LSP"
+    "zadddss %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zadddus"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2208))]
+    "TARGET_LSP"
+    "zadddus %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (plus:SI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2212)]
+    "TARGET_LSP"
+    "zvaddh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddhss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (plus:SI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2211)]
+    "TARGET_LSP"
+    "zvaddhss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddhus"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (plus:SI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2213)]
+    "TARGET_LSP"
+    "zvaddhus %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddhx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (plus:SI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2214)]
+    "TARGET_LSP"
+    "zvaddhx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddhxss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (plus:SI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2215)]
+    "TARGET_LSP"
+    "zvaddhxss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddih"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (plus:SI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "immediate_operand" "i")))
+     (unspec [(const_int 0)] 2216)]
+    "TARGET_LSP"
+    "zvaddih %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddsubfh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2217))]
+    "TARGET_LSP"
+    "zvaddsubfh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddsubfhss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2218))]
+    "TARGET_LSP"
+    "zvaddsubfhss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddsubfhx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2219))]
+    "TARGET_LSP"
+    "zvaddsubfhx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddsubfhxss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2220))]
+    "TARGET_LSP"
+    "zvaddsubfhxss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddhesw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (plus:SI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2221)]
+    "TARGET_LSP"
+    "zaddhesw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddheuw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2222))]
+    "TARGET_LSP"
+    "zaddheuw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddhosw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+           (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                       (match_operand:SI 2 "gpc_reg_operand" "r")] 2223))]
+    "TARGET_LSP"
+    "zaddhosw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddhouw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2224))]
+    "TARGET_LSP"
+    "zaddhouw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddw"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2225))]
+    "TARGET_LSP"
+    "zvaddw %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddsubfw"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2226))]
+    "TARGET_LSP"
+    "zvaddsubfw %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddsubfwss"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2227))]
+    "TARGET_LSP"
+    "zvaddsubfwss %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddwgsf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (plus:DI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2209)]
+    "TARGET_LSP"
+    "zaddwgsf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddwgsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (plus:DI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2210)]
+    "TARGET_LSP"
+    "zaddwgsi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddwgui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (plus:DI (match_operand:SI 1 "gpc_reg_operand" "r")
+                   (match_operand:SI 2 "gpc_reg_operand" "r")))
+     (unspec [(const_int 0)] 2211)]
+    "TARGET_LSP"
+    "zaddwgui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddwss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2228))]
+    "TARGET_LSP"
+    "zaddwss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddwss"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2229))]
+    "TARGET_LSP"
+    "zvaddwss %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zaddwus"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2230))]
+    "TARGET_LSP"
+    "zaddwus %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvaddwus"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2231))]
+    "TARGET_LSP"
+    "zvaddwus %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvcmpeqh"
+  [(set (match_operand:CC 0 "cc_reg_operand" "=y")
+        (unspec:CC [(match_operand:SI 1 "gpc_reg_operand" "r")
+                    (match_operand:SI 2 "gpc_reg_operand" "r")] 2232))]
+    "TARGET_LSP"
+    "zvcmpeqh %0, %1, %2"
+    [(set_attr "type" "veccmp")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvcmpgths"
+  [(set (match_operand:CC 0 "cc_reg_operand" "=y")
+        (unspec:CC [(match_operand:SI 1 "gpc_reg_operand" "r")
+                    (match_operand:SI 2 "gpc_reg_operand" "r")] 2233))]
+    "TARGET_LSP"
+    "zvcmpgths %0, %1, %2"
+    [(set_attr "type" "veccmp")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvcmpgthu"
+  [(set (match_operand:CC 0 "cc_reg_operand" "=y")
+        (unspec:CC [(match_operand:SI 1 "gpc_reg_operand" "r")
+                    (match_operand:SI 2 "gpc_reg_operand" "r")] 2234))]
+    "TARGET_LSP"
+    "zvcmpgthu %0, %1, %2"
+    [(set_attr "type" "veccmp")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvcmplths"
+  [(set (match_operand:CC 0 "cc_reg_operand" "=y")
+        (unspec:CC [(match_operand:SI 1 "gpc_reg_operand" "r")
+                    (match_operand:SI 2 "gpc_reg_operand" "r")] 2235))]
+    "TARGET_LSP"
+    "zvcmplths %0, %1, %2"
+    [(set_attr "type" "veccmp")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvcmplthu"
+  [(set (match_operand:CC 0 "cc_reg_operand" "=y")
+        (unspec:CC [(match_operand:SI 1 "gpc_reg_operand" "r")
+                    (match_operand:SI 2 "gpc_reg_operand" "r")] 2888))]
+    "TARGET_LSP"
+    "zvcmplthu %0, %1, %2"
+    [(set_attr "type" "veccmp")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvcntlsh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2236))]
+    "TARGET_LSP"
+    "zvcntlsh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zcntlsw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2237))]
+    "TARGET_LSP"
+    "zcntlsw %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvcntlzh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2238))]
+    "TARGET_LSP"
+    "zvcntlzh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zdivwsf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2239))]
+    "TARGET_LSP"
+    "zdivwsf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmergehih"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2240))]
+    "TARGET_LSP"
+    "zvmergehih %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmergehiloh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2241))]
+    "TARGET_LSP"
+    "zvmergehiloh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmergeloh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2242))]
+    "TARGET_LSP"
+    "zvmergeloh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmergelohih"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2243))]
+    "TARGET_LSP"
+    "zvmergelohih %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvnegh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2244))]
+    "TARGET_LSP"
+    "zvnegh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvnegho"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2245))]
+    "TARGET_LSP"
+    "zvnegho %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvneghos"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2246))]
+    "TARGET_LSP"
+    "zvneghos %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvneghs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2247))]
+    "TARGET_LSP"
+    "zvneghs %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_znegws"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2248))]
+    "TARGET_LSP"
+    "znegws %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvpkshgwshfrs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2249))]
+    "TARGET_LSP"
+    "zvpkshgwshfrs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zpkswgshfrs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2250))]
+    "TARGET_LSP"
+    "zpkswgshfrs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zpkswgswfrs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2251))]
+    "TARGET_LSP"
+    "zpkswgswfrs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvpkswshfrs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2252))]
+    "TARGET_LSP"
+    "zvpkswshfrs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvpkswshs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2253))]
+    "TARGET_LSP"
+    "zvpkswshs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvpkswuhs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2254))]
+    "TARGET_LSP"
+    "zvpkswuhs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvpkuwuhs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2255))]
+    "TARGET_LSP"
+    "zvpkuwuhs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvrlh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2256))]
+    "TARGET_LSP"
+    "zvrlh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvrlhi"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "immediate_operand" "i")] 2257))]
+    "TARGET_LSP"
+    "zvrlhi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zrndwh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2258))]
+    "TARGET_LSP"
+    "zrndwh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zrndwhss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2259))]
+    "TARGET_LSP"
+    "zrndwhss %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsatsdsw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2261))]
+    "TARGET_LSP"
+    "zsatsdsw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsatsduw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2262))]
+    "TARGET_LSP"
+    "zsatsduw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsatshuh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2263))]
+    "TARGET_LSP"
+    "zvsatshuh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsatswsh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2264))]
+    "TARGET_LSP"
+    "zsatswsh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsatswuh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2265))]
+    "TARGET_LSP"
+    "zsatswuh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsatswuw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2266))]
+    "TARGET_LSP"
+    "zsatswuw %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsatuduw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2267))]
+    "TARGET_LSP"
+    "zsatuduw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsatuhsh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2268))]
+    "TARGET_LSP"
+    "zvsatuhsh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsatuwsw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2269))]
+    "TARGET_LSP"
+    "zsatuwsw %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsatuwsh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2270))]
+    "TARGET_LSP"
+    "zsatuwsh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsatuwuh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2271))]
+    "TARGET_LSP"
+    "zsatuwuh %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvselh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2272))]
+    "TARGET_LSP"
+    "zvselh %0, %1, %2"
+    [(set_attr "type" "veccmp")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvselh_dot"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:CC 3 "cc_reg_cr0_operand" "x")] 2272))]
+    "TARGET_LSP"
+    "zvselh %0, %1, %2"
+    [(set_attr "type" "veccmp")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvslh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2273))]
+    "TARGET_LSP"
+    "zvslh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvslhi"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "immediate_operand" "i")] 2274))]
+    "TARGET_LSP"
+    "zvslhi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvslhss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2275))]
+    "TARGET_LSP"
+    "zvslhss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvslhiss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "immediate_operand" "i")] 2276))]
+    "TARGET_LSP"
+    "zvslhiss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvslhus"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2277))]
+    "TARGET_LSP"
+    "zvslhus %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvslhius"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "immediate_operand" "i")] 2278))]
+    "TARGET_LSP"
+    "zvslhius %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zslwss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2279))]
+    "TARGET_LSP"
+    "zslwss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zslwiss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "immediate_operand" "i")] 2280))]
+    "TARGET_LSP"
+    "zslwiss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zslwus"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2281))]
+    "TARGET_LSP"
+    "zslwus %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zslwius"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "immediate_operand" "i")] 2282))]
+    "TARGET_LSP"
+    "zslwius %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsplatfih"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "immediate_operand" "i")] 2283))]
+    "TARGET_LSP"
+    "zvsplatfih %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsplatih"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "immediate_operand" "i")] 2284))]
+    "TARGET_LSP"
+    "zvsplatih %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsrhis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "immediate_operand" "i")] 2285))]
+    "TARGET_LSP"
+    "zvsrhis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsrhiu"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "immediate_operand" "i")] 2286))]
+    "TARGET_LSP"
+    "zvsrhiu %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsrhs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2287))]
+    "TARGET_LSP"
+    "zvsrhs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsrhu"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2288))]
+    "TARGET_LSP"
+    "zvsrhu %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfaddh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2289))]
+    "TARGET_LSP"
+    "zvsubfaddh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfaddhss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2290))]
+    "TARGET_LSP"
+    "zvsubfaddhss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfaddhx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2291))]
+    "TARGET_LSP"
+    "zvsubfaddhx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfaddhxss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2292))]
+    "TARGET_LSP"
+    "zvsubfaddhxss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfd"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2293))]
+    "TARGET_LSP"
+    "zsubfd %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfdss"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2294))]
+    "TARGET_LSP"
+    "zsubfdss %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfdus"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2295))]
+    "TARGET_LSP"
+    "zsubfdus %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2296))]
+    "TARGET_LSP"
+    "zvsubfh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfhesw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2297))]
+    "TARGET_LSP"
+    "zsubfhesw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfheuw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2298))]
+    "TARGET_LSP"
+    "zsubfheuw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfhosw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2299))]
+    "TARGET_LSP"
+    "zsubfhosw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfhouw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2300))]
+    "TARGET_LSP"
+    "zsubfhouw %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfhss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2301))]
+    "TARGET_LSP"
+    "zvsubfhss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfhus"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2302))]
+    "TARGET_LSP"
+    "zvsubfhus %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfhx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2303))]
+    "TARGET_LSP"
+    "zvsubfhx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfhxss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2304))]
+    "TARGET_LSP"
+    "zvsubfhxss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfw"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2305))]
+    "TARGET_LSP"
+    "zvsubfw %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfaddw"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2306))]
+    "TARGET_LSP"
+    "zvsubfaddw %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfaddwss"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2307))]
+    "TARGET_LSP"
+    "zvsubfaddwss %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfwgsf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2308))]
+    "TARGET_LSP"
+    "zsubfwgsf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfwgsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2309))]
+    "TARGET_LSP"
+    "zsubfwgsi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfwgui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2310))]
+    "TARGET_LSP"
+    "zsubfwgui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfwss"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2311))]
+    "TARGET_LSP"
+    "zsubfwss %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfwss"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2312))]
+    "TARGET_LSP"
+    "zvsubfwss %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsubfwus"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2313))]
+    "TARGET_LSP"
+    "zsubfwus %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubfwus"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2314))]
+    "TARGET_LSP"
+    "zvsubfwus %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvsubifh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "immediate_operand" "i")] 2315))]
+    "TARGET_LSP"
+    "zvsubifh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvunpkhgwsf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2316))]
+    "TARGET_LSP"
+    "zvunpkhgwsf %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvunpkhsf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2317))]
+    "TARGET_LSP"
+    "zvunpkhsf %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvunpkhsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2318))]
+    "TARGET_LSP"
+    "zvunpkhsi %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvunpkhui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2319))]
+    "TARGET_LSP"
+    "zvunpkhui %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zunpkwgsf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")] 2320))]
+    "TARGET_LSP"
+    "zunpkwgsf %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zxtrw"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "immediate_operand" "i")] 2321))]
+    "TARGET_LSP"
+    "zxtrw %0, %1, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+
+
+(define_insn "lsp_zldd"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+     (unspec:SI [(const_int 0)] 2322)]
+    "TARGET_LSP"
+    "zldd %0, %2*8(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlddu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))
+     (unspec:SI [(const_int 0)] 2323)]
+    "TARGET_LSP"
+    "zlddu %0, %2*8(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlddx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+     (unspec:SI [(const_int 0)] 2324)]
+    "TARGET_LSP"
+    "zlddx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlddmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+     (unspec:SI [(const_int 0)] 2325)
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3325))]
+    "TARGET_LSP"
+    "zlddmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zldh"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+     (unspec:SI [(const_int 0)] 2326)]
+    "TARGET_LSP"
+    "zldh %0, %2*8(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zldhu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))
+     (unspec:SI [(const_int 0)] 2327)]
+    "TARGET_LSP"
+    "zldhu %0, %2*8(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zldhx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+     (unspec:SI [(const_int 0)] 2328)]
+    "TARGET_LSP"
+    "zldhx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zldhmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+     (unspec:SI [(const_int 0)] 2329)
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3329))]
+    "TARGET_LSP"
+    "zldhmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zldw"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+     (unspec:SI [(const_int 0)] 2330)]
+    "TARGET_LSP"
+    "zldw %0, %2*8(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zldwu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))
+     (unspec:SI [(const_int 0)] 2331)]
+    "TARGET_LSP"
+    "zldwu %0, %2*8(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zldwx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+     (unspec:SI [(const_int 0)] 2332)]
+    "TARGET_LSP"
+    "zldwx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zldwmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (mem:DI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+     (unspec:SI [(const_int 0)] 2333)
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3333))]
+    "TARGET_LSP"
+    "zldwmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhgwsf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2334))]
+    "TARGET_LSP"
+    "zlhgwsf %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhgwsfu"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2335))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlhgwsfu %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhgwsfx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2336))]
+    "TARGET_LSP"
+    "zlhgwsfx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhgwsfmx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2337))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3337))]
+    "TARGET_LSP"
+    "zlhgwsfmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhe"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2338))]
+    "TARGET_LSP"
+    "zlhhe %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhheu"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2339))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlhheu %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhex"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2392))]
+    "TARGET_LSP"
+    "zlhhex %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhemx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2393))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3393))]
+    "TARGET_LSP"
+    "zlhhemx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhos"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2340))]
+    "TARGET_LSP"
+    "zlhhos %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhosu"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2341))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlhhosu %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhosx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2342))]
+    "TARGET_LSP"
+    "zlhhosx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhosmx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2343))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3343))]
+    "TARGET_LSP"
+    "zlhhosmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhou"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2344))]
+    "TARGET_LSP"
+    "zlhhou %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhouu"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2345))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlhhouu %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhoux"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2346))]
+    "TARGET_LSP"
+    "zlhhoux %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhoumx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2347))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3347))]
+    "TARGET_LSP"
+    "zlhhoumx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhsplat"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2348))]
+    "TARGET_LSP"
+    "zlhhsplat %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhsplatu"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2349))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlhhsplatu %0, %2*2(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhsplatx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2350))]
+    "TARGET_LSP"
+    "zlhhsplatx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlhhsplatmx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(mem:HI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2351))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3351))]
+    "TARGET_LSP"
+    "zlhhsplatmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwgsfd"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2352))]
+    "TARGET_LSP"
+    "zlwgsfd %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwgsfdu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2353))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlwgsfdu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwgsfdx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2354))]
+    "TARGET_LSP"
+    "zlwgsfdx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwgsfdmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2355))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3355))]
+    "TARGET_LSP"
+    "zlwgsfdmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+      (unspec [(const_int 0)] 2356)]
+    "TARGET_LSP"
+    "zlwh %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhu"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))
+      (unspec [(const_int 0)] 2357)]
+    "TARGET_LSP"
+    "zlwhu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+      (unspec [(const_int 0)] 2358)]
+    "TARGET_LSP"
+    "zlwhx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhmx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3359))
+     (unspec [(const_int 0)] 2359)]
+    "TARGET_LSP"
+    "zlwhmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhed"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2360))]
+    "TARGET_LSP"
+    "zlwhed %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhedu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2361))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlwhedu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhedx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2362))]
+    "TARGET_LSP"
+    "zlwhedx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhedmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2363))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3363))]
+    "TARGET_LSP"
+    "zlwhedmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhgwsfd"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2364))]
+    "TARGET_LSP"
+    "zlwhgwsfd %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhgwsfdu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2365))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlwhgwsfdu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhgwsfdx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2366))]
+    "TARGET_LSP"
+    "zlwhgwsfdx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhgwsfdmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2367))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3367))]
+    "TARGET_LSP"
+    "zlwhgwsfdmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhosd"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2368))]
+    "TARGET_LSP"
+    "zlwhosd %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhosdu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2369))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlwhosdu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhosdx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2370))]
+    "TARGET_LSP"
+    "zlwhosdx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhosdmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2371))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3371))]
+    "TARGET_LSP"
+    "zlwhosdmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhoud"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2372))]
+    "TARGET_LSP"
+    "zlwhoud %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhoudu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2373))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlwhoudu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhoudx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2374))]
+    "TARGET_LSP"
+    "zlwhoudx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhoudmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2375))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3375))]
+    "TARGET_LSP"
+    "zlwhoudmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhsplatd"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2376))]
+    "TARGET_LSP"
+    "zlwhsplatd %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhsplatdu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2377))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlwhsplatdu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhsplatdx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2378))]
+    "TARGET_LSP"
+    "zlwhsplatdx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhsplatdmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2379))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3379))]
+    "TARGET_LSP"
+    "zlwhsplatdmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhsplatwd"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2380))]
+    "TARGET_LSP"
+    "zlwhsplatwd %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhsplatwdu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2381))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlwhsplatwdu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhsplatwdx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2382))]
+    "TARGET_LSP"
+    "zlwhsplatwdx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwhsplatwdmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2383))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3383))]
+    "TARGET_LSP"
+    "zlwhsplatwdmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlww"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+      (unspec [(const_int 0)] 2384)]
+    "TARGET_LSP"
+    "zlww %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwwu"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "immediate_operand" "i"))))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))
+      (unspec [(const_int 0)] 2385)]
+    "TARGET_LSP"
+    "zlwwu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwwx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+      (unspec [(const_int 0)] 2386)]
+    "TARGET_LSP"
+    "zlwwx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwwmx"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                           (match_operand:SI 2 "gpc_reg_operand" "r"))))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3387))
+     (unspec [(const_int 0)] 2387)]
+    "TARGET_LSP"
+    "zlwwmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwwosd"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2388))]
+    "TARGET_LSP"
+    "zlwwosd %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwwosdu"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "immediate_operand" "i")))] 2389))
+     (set (match_dup 1)
+          (plus:SI (match_dup 1) (match_dup 2)))]
+    "TARGET_LSP"
+    "zlwwosdu %0, %2*4(%1)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwwosdx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2390))]
+    "TARGET_LSP"
+    "zlwwosdx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zlwwosdmx"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(mem:SI (plus:SI (match_operand:SI 1 "gpc_reg_operand" "+b")
+                                       (match_operand:SI 2 "gpc_reg_operand" "r")))] 2391))
+     (set (match_dup 1)
+          (unspec:SI [(const_int 0)] 3391))]
+    "TARGET_LSP"
+    "zlwwosdmx %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+
+
+(define_insn "lsp_zstdd"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2394)]
+    "TARGET_LSP"
+    "zstdd %2, %1*8(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstddu"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (plus:SI (match_dup 0) (match_dup 1)))
+     (unspec [(const_int 0)] 2395)]
+    "TARGET_LSP"
+    "zstddu %2, %1*8(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstddx"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2396)]
+    "TARGET_LSP"
+    "zstddx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+
+(define_insn "lsp_zstddmx"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (unspec:SI [(const_int 0)] 3397))
+     (unspec [(const_int 0)] 2397)]
+    "TARGET_LSP"
+    "zstddmx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstdh"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2398)]
+    "TARGET_LSP"
+    "zstdh %2, %1*8(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstdhu"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (plus:SI (match_dup 0) (match_dup 1)))
+     (unspec [(const_int 0)] 2399)]
+    "TARGET_LSP"
+    "zstdhu %2, %1*8(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstdhx"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2400)]
+    "TARGET_LSP"
+    "zstdhx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstdhmx"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (unspec:SI [(const_int 0)] 3401))
+     (unspec [(const_int 0)] 2401)]
+    "TARGET_LSP"
+    "zstdhmx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstdw"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2402)]
+    "TARGET_LSP"
+    "zstdw %2, %1*8(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstdwu"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (plus:SI (match_dup 0) (match_dup 1)))
+     (unspec [(const_int 0)] 2403)]
+    "TARGET_LSP"
+    "zstdwu %2, %1*8(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstdwx"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2404)]
+    "TARGET_LSP"
+    "zstdwx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstdwmx"
+    [(set (mem:DI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+                  (match_operand:DI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (unspec:SI [(const_int 0)] 3405))
+     (unspec [(const_int 0)] 2405)]
+    "TARGET_LSP"
+    "zstdwmx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsthe"
+    [(set (mem:HI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (unspec:HI [(match_operand:SI 2 "gpc_reg_operand" "r")] 2406))]
+    "TARGET_LSP"
+    "zsthe %2, %1*2(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstheu"
+    [(set (mem:HI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (unspec:HI [(match_operand:SI 2 "gpc_reg_operand" "r")] 2407))
+     (set (match_dup 0)
+          (plus:SI (match_dup 0) (match_dup 1)))]
+    "TARGET_LSP"
+    "zstheu %2, %1*2(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsthex"
+    [(set (mem:HI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (unspec:HI [(match_operand:SI 2 "gpc_reg_operand" "r")] 2408))]
+    "TARGET_LSP"
+    "zsthex %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsthemx"
+    [(set (mem:HI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (unspec:HI [(match_operand:SI 2 "gpc_reg_operand" "r")] 2409))
+     (set (match_dup 0)
+          (unspec:SI [(const_int 0)] 3409))]
+    "TARGET_LSP"
+    "zsthemx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstho"
+    [(set (mem:HI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (unspec:HI [(match_operand:SI 2 "gpc_reg_operand" "r")] 2410))]
+    "TARGET_LSP"
+    "zstho %2, %1*2(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsthou"
+    [(set (mem:HI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (unspec:HI [(match_operand:SI 2 "gpc_reg_operand" "r")] 2411))
+     (set (match_dup 0)
+          (plus:SI (match_dup 0) (match_dup 1)))]
+    "TARGET_LSP"
+    "zsthou %2, %1*2(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsthox"
+    [(set (mem:HI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (unspec:HI [(match_operand:SI 2 "gpc_reg_operand" "r")] 2412))]
+    "TARGET_LSP"
+    "zsthox %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zsthomx"
+    [(set (mem:HI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (unspec:HI [(match_operand:SI 2 "gpc_reg_operand" "r")] 2413))
+     (set (match_dup 0)
+          (unspec:SI [(const_int 0)] 3413))]
+    "TARGET_LSP"
+    "zsthomx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwh"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:SI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2414)]
+    "TARGET_LSP"
+    "zstwh %2, %1*4(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhu"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:SI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (plus:SI (match_dup 0) (match_dup 1)))
+     (unspec [(const_int 0)] 2415)]
+    "TARGET_LSP"
+    "zstwhu %2, %1*4(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhx"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                  (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (match_operand:SI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2416)]
+    "TARGET_LSP"
+    "zstwhx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhmx"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (match_operand:SI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (unspec:SI [(const_int 0)] 3417))
+     (unspec [(const_int 0)] 2417)]
+    "TARGET_LSP"
+    "zstwhmx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhed"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (unspec:SI [(match_operand:DI 2 "gpc_reg_operand" "r")] 2418))]
+    "TARGET_LSP"
+    "zstwhed %2, %1*4(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhedu"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (unspec:SI [(match_operand:DI 2 "gpc_reg_operand" "r")] 2419))
+     (set (match_dup 0)
+          (plus:SI (match_dup 0) (match_dup 1)))]
+    "TARGET_LSP"
+    "zstwhedu %2, %1*4(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhedx"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (unspec:SI [(match_operand:DI 2 "gpc_reg_operand" "r")] 2420))]
+    "TARGET_LSP"
+    "zstwhedx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhedmx"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (unspec:SI [(match_operand:DI 2 "gpc_reg_operand" "r")] 2421))
+     (set (match_dup 0)
+          (unspec:SI [(const_int 0)] 3421))]
+    "TARGET_LSP"
+    "zstwhedmx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhod"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (unspec:SI [(match_operand:DI 2 "gpc_reg_operand" "r")] 2422))]
+    "TARGET_LSP"
+    "zstwhod %2, %1*4(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhodu"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (unspec:SI [(match_operand:DI 2 "gpc_reg_operand" "r")] 2423))
+     (set (match_dup 0)
+          (plus:SI (match_dup 0) (match_dup 1)))]
+    "TARGET_LSP"
+    "zstwhodu %2, %1*4(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhodx"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (unspec:SI [(match_operand:DI 2 "gpc_reg_operand" "r")] 2424))]
+    "TARGET_LSP"
+    "zstwhodx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwhodmx"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (unspec:SI [(match_operand:DI 2 "gpc_reg_operand" "r")] 2425))
+     (set (match_dup 0)
+          (unspec:SI [(const_int 0)] 3425))]
+    "TARGET_LSP"
+    "zstwhodmx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstww"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:SI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2426)]
+    "TARGET_LSP"
+    "zstww %2, %1*4(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwwu"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "immediate_operand" "i")))
+          (match_operand:SI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (plus:SI (match_dup 0) (match_dup 1)))
+     (unspec [(const_int 0)] 2427)]
+    "TARGET_LSP"
+    "zstwwu %2, %1*4(%0)"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwwx"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (match_operand:SI 2 "gpc_reg_operand" "r"))
+     (unspec [(const_int 0)] 2428)]
+    "TARGET_LSP"
+    "zstwwx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zstwwmx"
+    [(set (mem:SI (plus:SI (match_operand:SI 0 "gpc_reg_operand" "+b")
+                           (match_operand:SI 1 "gpc_reg_operand" "r")))
+          (match_operand:SI 2 "gpc_reg_operand" "r"))
+     (set (match_dup 0)
+          (unspec:SI [(const_int 0)] 3429))
+     (unspec [(const_int 0)] 2429)]
+    "TARGET_LSP"
+    "zstwwmx %2, %0, %1"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+
+
+(define_insn "lsp_zmhegsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2431))]
+    "TARGET_LSP"
+    "zmhegsi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegsmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2432))]
+    "TARGET_LSP"
+    "zmhegsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegsui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2433))]
+    "TARGET_LSP"
+    "zmhegsui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2434))]
+    "TARGET_LSP"
+    "zmhegui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2435))]
+    "TARGET_LSP"
+    "zmheogsi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogsmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2436))]
+    "TARGET_LSP"
+    "zmheogsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogsui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2437))]
+    "TARGET_LSP"
+    "zmheogsui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2438))]
+    "TARGET_LSP"
+    "zmheogui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2439))]
+    "TARGET_LSP"
+    "zmhogsi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogsmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2440))]
+    "TARGET_LSP"
+    "zmhogsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogsui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2441))]
+    "TARGET_LSP"
+    "zmhogsui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2442))]
+    "TARGET_LSP"
+    "zmhogui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegsiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2443))]
+    "TARGET_LSP"
+    "zmhegsiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegsmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2444))]
+    "TARGET_LSP"
+    "zmhegsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegsuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2445))]
+    "TARGET_LSP"
+    "zmhegsuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheguiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2446))]
+    "TARGET_LSP"
+    "zmheguiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogsiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2447))]
+    "TARGET_LSP"
+    "zmheogsiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogsmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2448))]
+    "TARGET_LSP"
+    "zmheogsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogsuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2449))]
+    "TARGET_LSP"
+    "zmheogsuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheoguiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2450))]
+    "TARGET_LSP"
+    "zmheoguiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogsiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2451))]
+    "TARGET_LSP"
+    "zmhogsiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogsmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2452))]
+    "TARGET_LSP"
+    "zmhogsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogsuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2453))]
+    "TARGET_LSP"
+    "zmhogsuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhoguiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2454))]
+    "TARGET_LSP"
+    "zmhoguiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegsian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2455))]
+    "TARGET_LSP"
+    "zmhegsian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegsmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2456))]
+    "TARGET_LSP"
+    "zmhegsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegsuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2457))]
+    "TARGET_LSP"
+    "zmhegsuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheguian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2458))]
+    "TARGET_LSP"
+    "zmheguian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogsian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2459))]
+    "TARGET_LSP"
+    "zmheogsian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogsmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2460))]
+    "TARGET_LSP"
+    "zmheogsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogsuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2461))]
+    "TARGET_LSP"
+    "zmheogsuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheoguian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2462))]
+    "TARGET_LSP"
+    "zmheoguian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogsian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2463))]
+    "TARGET_LSP"
+    "zmhogsian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogsmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2464))]
+    "TARGET_LSP"
+    "zmhogsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogsuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2465))]
+    "TARGET_LSP"
+    "zmhogsuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhoguian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2466))]
+    "TARGET_LSP"
+    "zmhoguian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegwsmf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2467))]
+    "TARGET_LSP"
+    "zmhegwsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogwsmf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2468))]
+    "TARGET_LSP"
+    "zmheogwsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogwsmf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2469))]
+    "TARGET_LSP"
+    "zmhogwsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegwsmfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2470))]
+    "TARGET_LSP"
+    "zmhegwsmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogwsmfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2471))]
+    "TARGET_LSP"
+    "zmheogwsmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogwsmfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2472))]
+    "TARGET_LSP"
+    "zmhogwsmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegwsmfaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2473))]
+    "TARGET_LSP"
+    "zmhegwsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogwsmfaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2474))]
+    "TARGET_LSP"
+    "zmheogwsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogwsmfaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2475))]
+    "TARGET_LSP"
+    "zmhogwsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegwsmfan"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2476))]
+    "TARGET_LSP"
+    "zmhegwsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogwsmfan"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2477))]
+    "TARGET_LSP"
+    "zmheogwsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogwsmfan"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2478))]
+    "TARGET_LSP"
+    "zmhogwsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegwsmfraa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2479))]
+    "TARGET_LSP"
+    "zmhegwsmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogwsmfraa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2480))]
+    "TARGET_LSP"
+    "zmheogwsmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogwsmfraa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2481))]
+    "TARGET_LSP"
+    "zmhogwsmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhegwsmfran"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2482))]
+    "TARGET_LSP"
+    "zmhegwsmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheogwsmfran"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2483))]
+    "TARGET_LSP"
+    "zmheogwsmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhogwsmfran"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2484))]
+    "TARGET_LSP"
+    "zmhogwsmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2485))]
+    "TARGET_LSP"
+    "zmhesf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2486))]
+    "TARGET_LSP"
+    "zmheosf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2487))]
+    "TARGET_LSP"
+    "zmhosf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2488))]
+    "TARGET_LSP"
+    "zmhesfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2489))]
+    "TARGET_LSP"
+    "zmheosfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2490))]
+    "TARGET_LSP"
+    "zmhosfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesfaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2491))]
+    "TARGET_LSP"
+    "zmhesfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosfaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2492))]
+    "TARGET_LSP"
+    "zmheosfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosfaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2493))]
+    "TARGET_LSP"
+    "zmhosfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesfans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2494))]
+    "TARGET_LSP"
+    "zmhesfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosfans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2495))]
+    "TARGET_LSP"
+    "zmheosfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosfans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2496))]
+    "TARGET_LSP"
+    "zmhosfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesfraas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2497))]
+    "TARGET_LSP"
+    "zmhesfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosfraas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2498))]
+    "TARGET_LSP"
+    "zmheosfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosfraas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2499))]
+    "TARGET_LSP"
+    "zmhosfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesfrans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2500))]
+    "TARGET_LSP"
+    "zmhesfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosfrans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2501))]
+    "TARGET_LSP"
+    "zmheosfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosfrans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2502))]
+    "TARGET_LSP"
+    "zmhosfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesi"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2503))]
+    "TARGET_LSP"
+    "zmhesi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosi"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2504))]
+    "TARGET_LSP"
+    "zmheosi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosi"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2505))]
+    "TARGET_LSP"
+    "zmhosi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2506))]
+    "TARGET_LSP"
+    "zmhesui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2507))]
+    "TARGET_LSP"
+    "zmheosui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2508))]
+    "TARGET_LSP"
+    "zmhosui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2509))]
+    "TARGET_LSP"
+    "zmheui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheoui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2510))]
+    "TARGET_LSP"
+    "zmheoui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhoui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2511))]
+    "TARGET_LSP"
+    "zmhoui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2512))]
+    "TARGET_LSP"
+    "zmhesiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2513))]
+    "TARGET_LSP"
+    "zmheosiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2514))]
+    "TARGET_LSP"
+    "zmhosiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2515))]
+    "TARGET_LSP"
+    "zmhesian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2516))]
+    "TARGET_LSP"
+    "zmheosian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2517))]
+    "TARGET_LSP"
+    "zmhosian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesuiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2518))]
+    "TARGET_LSP"
+    "zmhesuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosuiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2519))]
+    "TARGET_LSP"
+    "zmheosuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosuiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2520))]
+    "TARGET_LSP"
+    "zmhosuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesuian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2521))]
+    "TARGET_LSP"
+    "zmhesuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosuian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2522))]
+    "TARGET_LSP"
+    "zmheosuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosuian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2523))]
+    "TARGET_LSP"
+    "zmhosuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheuiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2524))]
+    "TARGET_LSP"
+    "zmheuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheouiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2525))]
+    "TARGET_LSP"
+    "zmheouiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhouiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2526))]
+    "TARGET_LSP"
+    "zmhouiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheuian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2527))]
+    "TARGET_LSP"
+    "zmheuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheouian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2528))]
+    "TARGET_LSP"
+    "zmheouian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhouian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2529))]
+    "TARGET_LSP"
+    "zmhouian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2530))]
+    "TARGET_LSP"
+    "zmhesiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2531))]
+    "TARGET_LSP"
+    "zmheosiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2532))]
+    "TARGET_LSP"
+    "zmhosiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2533))]
+    "TARGET_LSP"
+    "zmhesians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2534))]
+    "TARGET_LSP"
+    "zmheosians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2535))]
+    "TARGET_LSP"
+    "zmhosians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesuiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2536))]
+    "TARGET_LSP"
+    "zmhesuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosuiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2537))]
+    "TARGET_LSP"
+    "zmheosuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosuiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2538))]
+    "TARGET_LSP"
+    "zmhosuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhesuians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2539))]
+    "TARGET_LSP"
+    "zmhesuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheosuians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2540))]
+    "TARGET_LSP"
+    "zmheosuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhosuians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2541))]
+    "TARGET_LSP"
+    "zmhosuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheuiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2542))]
+    "TARGET_LSP"
+    "zmheuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheouiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2543))]
+    "TARGET_LSP"
+    "zmheouiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhouiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2544))]
+    "TARGET_LSP"
+    "zmhouiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheuians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2545))]
+    "TARGET_LSP"
+    "zmheuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmheouians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2546))]
+    "TARGET_LSP"
+    "zmheouians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmhouians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2547))]
+    "TARGET_LSP"
+    "zmhouians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsfh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2548))]
+    "TARGET_LSP"
+    "zvmhsfh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsfrh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2549))]
+    "TARGET_LSP"
+    "zvmhsfrh %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsfaahs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2550))]
+    "TARGET_LSP"
+    "zvmhsfaahs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsfanhs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2551))]
+    "TARGET_LSP"
+    "zvmhsfanhs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsfraahs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2552))]
+    "TARGET_LSP"
+    "zvmhsfraahs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsfranhs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2553))]
+    "TARGET_LSP"
+    "zvmhsfranhs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsih"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2554))]
+    "TARGET_LSP"
+    "zvmhuih %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsuih"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2555))]
+    "TARGET_LSP"
+    "zvmhuih %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuih"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2556))]
+    "TARGET_LSP"
+    "zvmhuih %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsihs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2557))]
+    "TARGET_LSP"
+    "zvmhsihs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsuihs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2558))]
+    "TARGET_LSP"
+    "zvmhsuihs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuihs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2559))]
+    "TARGET_LSP"
+    "zvmhuihs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsiaah"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2560))]
+    "TARGET_LSP"
+    "zvmhuiaah %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsuiaah"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2561))]
+    "TARGET_LSP"
+    "zvmhuiaah %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuiaah"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2562))]
+    "TARGET_LSP"
+    "zvmhuiaah %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsianh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2563))]
+    "TARGET_LSP"
+    "zvmhuianh %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsuianh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2564))]
+    "TARGET_LSP"
+    "zvmhuianh %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuianh"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2565))]
+    "TARGET_LSP"
+    "zvmhuianh %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsiaahs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2566))]
+    "TARGET_LSP"
+    "zvmhsiaahs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsuiaahs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2567))]
+    "TARGET_LSP"
+    "zvmhsuiaahs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuiaahs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2568))]
+    "TARGET_LSP"
+    "zvmhuiaahs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsianhs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2569))]
+    "TARGET_LSP"
+    "zvmhsianhs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhsuianhs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2570))]
+    "TARGET_LSP"
+    "zvmhsuianhs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuianhs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2571))]
+    "TARGET_LSP"
+    "zvmhuianhs %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2572))]
+    "TARGET_LSP"
+    "zmwgsi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2573))]
+    "TARGET_LSP"
+    "zmwgsui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2574))]
+    "TARGET_LSP"
+    "zmwgui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2575))]
+    "TARGET_LSP"
+    "zmwgsiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2576))]
+    "TARGET_LSP"
+    "zmwgsian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2577))]
+    "TARGET_LSP"
+    "zmwgsuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2578))]
+    "TARGET_LSP"
+    "zmwgsuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwguiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2579))]
+    "TARGET_LSP"
+    "zmwguiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwguian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2580))]
+    "TARGET_LSP"
+    "zmwguian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2581))]
+    "TARGET_LSP"
+    "zmwgsiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2582))]
+    "TARGET_LSP"
+    "zmwgsians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsuiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2583))]
+    "TARGET_LSP"
+    "zmwgsuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsuians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2584))]
+    "TARGET_LSP"
+    "zmwgsuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwguiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2585))]
+    "TARGET_LSP"
+    "zmwguiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwguians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2586))]
+    "TARGET_LSP"
+    "zmwguians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2587))]
+    "TARGET_LSP"
+    "zmwgsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsmfr"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2588))]
+    "TARGET_LSP"
+    "zmwgsmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2589))]
+    "TARGET_LSP"
+    "zmwgsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2590))]
+    "TARGET_LSP"
+    "zmwgsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsmfraa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2591))]
+    "TARGET_LSP"
+    "zmwgsmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwgsmfran"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2592))]
+    "TARGET_LSP"
+    "zmwgsmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2593))]
+    "TARGET_LSP"
+    "zmwlsis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsuis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2594))]
+    "TARGET_LSP"
+    "zmwlsuis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwluis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2595))]
+    "TARGET_LSP"
+    "zmwluis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2596))]
+    "TARGET_LSP"
+    "zmwluiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsuiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2597))]
+    "TARGET_LSP"
+    "zmwluiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwluiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2598))]
+    "TARGET_LSP"
+    "zmwluiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2599))]
+    "TARGET_LSP"
+    "zmwluian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsuian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2600))]
+    "TARGET_LSP"
+    "zmwluian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwluian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2601))]
+    "TARGET_LSP"
+    "zmwluian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2602))]
+    "TARGET_LSP"
+    "zmwlsiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2603))]
+    "TARGET_LSP"
+    "zmwlsians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsuiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2604))]
+    "TARGET_LSP"
+    "zmwlsuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwlsuians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2605))]
+    "TARGET_LSP"
+    "zmwlsuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwluiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2606))]
+    "TARGET_LSP"
+    "zmwluiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwluians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2607))]
+    "TARGET_LSP"
+    "zmwluians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwsf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2608))]
+    "TARGET_LSP"
+    "zmwsf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwsfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2609))]
+    "TARGET_LSP"
+    "zmwsfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwsfaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2610))]
+    "TARGET_LSP"
+    "zmwsfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwsfans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2611))]
+    "TARGET_LSP"
+    "zmwsfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwsfraas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2612))]
+    "TARGET_LSP"
+    "zmwsfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zmwsfrans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2613))]
+    "TARGET_LSP"
+    "zmwsfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulgwsmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2614))]
+    "TARGET_LSP"
+    "zvmhulgwsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllgwsmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2615))]
+    "TARGET_LSP"
+    "zvmhllgwsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuugwsmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2616))]
+    "TARGET_LSP"
+    "zvmhuugwsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlgwsmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2617))]
+    "TARGET_LSP"
+    "zvmhxlgwsmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulgwsmfr"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2618))]
+    "TARGET_LSP"
+    "zvmhulgwsmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllgwsmfr"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2619))]
+    "TARGET_LSP"
+    "zvmhllgwsmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuugwsmfr"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2620))]
+    "TARGET_LSP"
+    "zvmhuugwsmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlgwsmfr"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2621))]
+    "TARGET_LSP"
+    "zvmhxlgwsmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulgwsmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2622))]
+    "TARGET_LSP"
+    "zvmhulgwsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllgwsmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2623))]
+    "TARGET_LSP"
+    "zvmhllgwsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuugwsmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2624))]
+    "TARGET_LSP"
+    "zvmhuugwsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlgwsmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2625))]
+    "TARGET_LSP"
+    "zvmhxlgwsmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulgwsmfraa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2626))]
+    "TARGET_LSP"
+    "zvmhulgwsmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllgwsmfraa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2627))]
+    "TARGET_LSP"
+    "zvmhllgwsmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuugwsmfraa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2628))]
+    "TARGET_LSP"
+    "zvmhuugwsmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlgwsmfraa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2629))]
+    "TARGET_LSP"
+    "zvmhxlgwsmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulgwsmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2630))]
+    "TARGET_LSP"
+    "zvmhulgwsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllgwsmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2631))]
+    "TARGET_LSP"
+    "zvmhllgwsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuugwsmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2632))]
+    "TARGET_LSP"
+    "zvmhuugwsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlgwsmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2633))]
+    "TARGET_LSP"
+    "zvmhxlgwsmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulgwsmfran"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2634))]
+    "TARGET_LSP"
+    "zvmhulgwsmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllgwsmfran"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2635))]
+    "TARGET_LSP"
+    "zvmhllgwsmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuugwsmfran"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2636))]
+    "TARGET_LSP"
+    "zvmhuugwsmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlgwsmfran"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2637))]
+    "TARGET_LSP"
+    "zvmhxlgwsmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulgwsmfanp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2638))]
+    "TARGET_LSP"
+    "zvmhulgwsmfanp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllgwsmfanp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2639))]
+    "TARGET_LSP"
+    "zvmhllgwsmfanp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuugwsmfanp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2640))]
+    "TARGET_LSP"
+    "zvmhuugwsmfanp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlgwsmfanp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2641))]
+    "TARGET_LSP"
+    "zvmhxlgwsmfanp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulgwsmfranp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2642))]
+    "TARGET_LSP"
+    "zvmhulgwsmfranp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllgwsmfranp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2643))]
+    "TARGET_LSP"
+    "zvmhllgwsmfranp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuugwsmfranp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2644))]
+    "TARGET_LSP"
+    "zvmhuugwsmfranp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlgwsmfranp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2645))]
+    "TARGET_LSP"
+    "zvmhxlgwsmfranp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+     (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                 (match_operand:SI 2 "gpc_reg_operand" "r")] 2646))]
+    "TARGET_LSP"
+    "zvmhulsf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+     (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                 (match_operand:SI 2 "gpc_reg_operand" "r")] 2647))]
+    "TARGET_LSP"
+    "zvmhllsf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+     (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                 (match_operand:SI 2 "gpc_reg_operand" "r")] 2648))]
+    "TARGET_LSP"
+    "zvmhuusf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+     (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                 (match_operand:SI 2 "gpc_reg_operand" "r")] 2649))]
+    "TARGET_LSP"
+    "zvmhxlsf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsfr"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+     (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                 (match_operand:SI 2 "gpc_reg_operand" "r")] 2650))]
+    "TARGET_LSP"
+    "zvmhulsfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsfr"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+     (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                 (match_operand:SI 2 "gpc_reg_operand" "r")] 2651))]
+    "TARGET_LSP"
+    "zvmhllsfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusfr"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+     (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                 (match_operand:SI 2 "gpc_reg_operand" "r")] 2652))]
+    "TARGET_LSP"
+    "zvmhuusfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsfr"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+     (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                 (match_operand:SI 2 "gpc_reg_operand" "r")] 2653))]
+    "TARGET_LSP"
+    "zvmhxlsfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsfaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2654))]
+    "TARGET_LSP"
+    "zvmhulsfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsfaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2655))]
+    "TARGET_LSP"
+    "zvmhllsfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusfaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2656))]
+    "TARGET_LSP"
+    "zvmhuusfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsfaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2657))]
+    "TARGET_LSP"
+    "zvmhxlsfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsfans"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2658))]
+    "TARGET_LSP"
+    "zvmhulsfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsfans"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2659))]
+    "TARGET_LSP"
+    "zvmhllsfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusfans"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2660))]
+    "TARGET_LSP"
+    "zvmhuusfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsfans"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2661))]
+    "TARGET_LSP"
+    "zvmhxlsfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsfanps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2662))]
+    "TARGET_LSP"
+    "zvmhulsfanps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsfanps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2663))]
+    "TARGET_LSP"
+    "zvmhllsfanps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusfanps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2664))]
+    "TARGET_LSP"
+    "zvmhuusfanps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsfanps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2665))]
+    "TARGET_LSP"
+    "zvmhxlsfanps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsfraas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2666))]
+    "TARGET_LSP"
+    "zvmhulsfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsfraas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2667))]
+    "TARGET_LSP"
+    "zvmhllsfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusfraas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2668))]
+    "TARGET_LSP"
+    "zvmhuusfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsfraas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2669))]
+    "TARGET_LSP"
+    "zvmhxlsfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsfrans"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2670))]
+    "TARGET_LSP"
+    "zvmhulsfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsfrans"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2671))]
+    "TARGET_LSP"
+    "zvmhllsfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusfrans"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2672))]
+    "TARGET_LSP"
+    "zvmhuusfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsfrans"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2673))]
+    "TARGET_LSP"
+    "zvmhxlsfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsfranps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2674))]
+    "TARGET_LSP"
+    "zvmhulsfranps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsfranps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2675))]
+    "TARGET_LSP"
+    "zvmhllsfranps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusfranps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2676))]
+    "TARGET_LSP"
+    "zvmhuusfranps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsfranps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2677))]
+    "TARGET_LSP"
+    "zvmhxlsfranps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2678))]
+    "TARGET_LSP"
+    "zvmhulsi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2679))]
+    "TARGET_LSP"
+    "zvmhllsi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2680))]
+    "TARGET_LSP"
+    "zvmhuusi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2681))]
+    "TARGET_LSP"
+    "zvmhxlsi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2682))]
+    "TARGET_LSP"
+    "zvmhulsui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2683))]
+    "TARGET_LSP"
+    "zvmhllsui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2684))]
+    "TARGET_LSP"
+    "zvmhuusui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2685))]
+    "TARGET_LSP"
+    "zvmhxlsui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhului"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2686))]
+    "TARGET_LSP"
+    "zvmhului %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2687))]
+    "TARGET_LSP"
+    "zvmhllui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuuui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2688))]
+    "TARGET_LSP"
+    "zvmhuuui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2689))]
+    "TARGET_LSP"
+    "zvmhxlui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2690))]
+    "TARGET_LSP"
+    "zvmhulsiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2691))]
+    "TARGET_LSP"
+    "zvmhllsiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2692))]
+    "TARGET_LSP"
+    "zvmhuusiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2693))]
+    "TARGET_LSP"
+    "zvmhxlsiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2694))]
+    "TARGET_LSP"
+    "zvmhulsian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2695))]
+    "TARGET_LSP"
+    "zvmhllsian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2696))]
+    "TARGET_LSP"
+    "zvmhuusian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2697))]
+    "TARGET_LSP"
+    "zvmhxlsian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2698))]
+    "TARGET_LSP"
+    "zvmhulsianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2699))]
+    "TARGET_LSP"
+    "zvmhllsianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2700))]
+    "TARGET_LSP"
+    "zvmhuusianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2701))]
+    "TARGET_LSP"
+    "zvmhxlsianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2702))]
+    "TARGET_LSP"
+    "zvmhulsuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2703))]
+    "TARGET_LSP"
+    "zvmhllsuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2704))]
+    "TARGET_LSP"
+    "zvmhuusuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2705))]
+    "TARGET_LSP"
+    "zvmhxlsuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2706))]
+    "TARGET_LSP"
+    "zvmhulsuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2707))]
+    "TARGET_LSP"
+    "zvmhllsuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2708))]
+    "TARGET_LSP"
+    "zvmhuusuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2709))]
+    "TARGET_LSP"
+    "zvmhxlsuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsuianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2710))]
+    "TARGET_LSP"
+    "zvmhulsuianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsuianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2711))]
+    "TARGET_LSP"
+    "zvmhllsuianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusuianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2712))]
+    "TARGET_LSP"
+    "zvmhuusuianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsuianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2713))]
+    "TARGET_LSP"
+    "zvmhxlsuianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuluiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2714))]
+    "TARGET_LSP"
+    "zvmhuluiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhlluiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2715))]
+    "TARGET_LSP"
+    "zvmhlluiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuuuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2716))]
+    "TARGET_LSP"
+    "zvmhuuuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxluiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2717))]
+    "TARGET_LSP"
+    "zvmhxluiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuluian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2718))]
+    "TARGET_LSP"
+    "zvmhuluian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhlluian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2719))]
+    "TARGET_LSP"
+    "zvmhlluian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuuuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2720))]
+    "TARGET_LSP"
+    "zvmhuuuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxluian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2721))]
+    "TARGET_LSP"
+    "zvmhxluian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuluianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2722))]
+    "TARGET_LSP"
+    "zvmhuluianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhlluianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2723))]
+    "TARGET_LSP"
+    "zvmhlluianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuuuianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2724))]
+    "TARGET_LSP"
+    "zvmhuuuianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxluianp"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2725))]
+    "TARGET_LSP"
+    "zvmhxluianp %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2726))]
+    "TARGET_LSP"
+    "zvmhulsiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2727))]
+    "TARGET_LSP"
+    "zvmhllsiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2728))]
+    "TARGET_LSP"
+    "zvmhuusiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2729))]
+    "TARGET_LSP"
+    "zvmhxlsiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2730))]
+    "TARGET_LSP"
+    "zvmhulsians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2731))]
+    "TARGET_LSP"
+    "zvmhllsians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2732))]
+    "TARGET_LSP"
+    "zvmhuusians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2733))]
+    "TARGET_LSP"
+    "zvmhxlsians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2734))]
+    "TARGET_LSP"
+    "zvmhulsianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2735))]
+    "TARGET_LSP"
+    "zvmhllsianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2736))]
+    "TARGET_LSP"
+    "zvmhuusianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2737))]
+    "TARGET_LSP"
+    "zvmhxlsianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsuiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2738))]
+    "TARGET_LSP"
+    "zvmhulsuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsuiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2739))]
+    "TARGET_LSP"
+    "zvmhllsuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusuiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2740))]
+    "TARGET_LSP"
+    "zvmhuusuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsuiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2741))]
+    "TARGET_LSP"
+    "zvmhxlsuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsuians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2742))]
+    "TARGET_LSP"
+    "zvmhulsuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsuians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2743))]
+    "TARGET_LSP"
+    "zvmhllsuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusuians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2744))]
+    "TARGET_LSP"
+    "zvmhuusuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsuians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2745))]
+    "TARGET_LSP"
+    "zvmhxlsuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhulsuianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2746))]
+    "TARGET_LSP"
+    "zvmhulsuianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhllsuianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2747))]
+    "TARGET_LSP"
+    "zvmhllsuianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuusuianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2748))]
+    "TARGET_LSP"
+    "zvmhuusuianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxlsuianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2749))]
+    "TARGET_LSP"
+    "zvmhxlsuianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuluiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2750))]
+    "TARGET_LSP"
+    "zvmhuluiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhlluiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2751))]
+    "TARGET_LSP"
+    "zvmhlluiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuuuiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2752))]
+    "TARGET_LSP"
+    "zvmhuuuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxluiaas"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2753))]
+    "TARGET_LSP"
+    "zvmhxluiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuluians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2754))]
+    "TARGET_LSP"
+    "zvmhuluians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhlluians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2755))]
+    "TARGET_LSP"
+    "zvmhlluians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuuuians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2756))]
+    "TARGET_LSP"
+    "zvmhuuuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxluians"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2757))]
+    "TARGET_LSP"
+    "zvmhxluians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuluianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2758))]
+    "TARGET_LSP"
+    "zvmhuluianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhlluianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2759))]
+    "TARGET_LSP"
+    "zvmhlluianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhuuuianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2760))]
+    "TARGET_LSP"
+    "zvmhuuuianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvmhxluianps"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2761))]
+    "TARGET_LSP"
+    "zvmhxluianps %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgaui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2762))]
+    "TARGET_LSP"
+    "zvdotphgaui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgaui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2763))]
+    "TARGET_LSP"
+    "zvdotphxgaui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgasi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2764))]
+    "TARGET_LSP"
+    "zvdotphgasi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgasi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2765))]
+    "TARGET_LSP"
+    "zvdotphxgasi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgasui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2766))]
+    "TARGET_LSP"
+    "zvdotphgasui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgasui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2767))]
+    "TARGET_LSP"
+    "zvdotphxgasui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgasmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2768))]
+    "TARGET_LSP"
+    "zvdotphgasmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgasmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2769))]
+    "TARGET_LSP"
+    "zvdotphxgasmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgauiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2770))]
+    "TARGET_LSP"
+    "zvdotphgauiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgauiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2771))]
+    "TARGET_LSP"
+    "zvdotphxgauiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgasiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2772))]
+    "TARGET_LSP"
+    "zvdotphgasiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgasiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2773))]
+    "TARGET_LSP"
+    "zvdotphxgasiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgasuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2774))]
+    "TARGET_LSP"
+    "zvdotphgasuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgasuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2775))]
+    "TARGET_LSP"
+    "zvdotphxgasuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgasmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2776))]
+    "TARGET_LSP"
+    "zvdotphgasmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgasmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2777))]
+    "TARGET_LSP"
+    "zvdotphxgasmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgauian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2778))]
+    "TARGET_LSP"
+    "zvdotphgauian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgauian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2779))]
+    "TARGET_LSP"
+    "zvdotphxgauian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgasian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2780))]
+    "TARGET_LSP"
+    "zvdotphgasian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgasian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2781))]
+    "TARGET_LSP"
+    "zvdotphxgasian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgasuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2782))]
+    "TARGET_LSP"
+    "zvdotphgasuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgasuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2783))]
+    "TARGET_LSP"
+    "zvdotphxgasuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgasmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2784))]
+    "TARGET_LSP"
+    "zvdotphgasmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgasmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2785))]
+    "TARGET_LSP"
+    "zvdotphxgasmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgsui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2786))]
+    "TARGET_LSP"
+    "zvdotphgsui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgssi"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2787))]
+    "TARGET_LSP"
+    "zvdotphgssi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgssui"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2788))]
+    "TARGET_LSP"
+    "zvdotphgssui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgssmf"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2789))]
+    "TARGET_LSP"
+    "zvdotphgssmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgsuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2790))]
+    "TARGET_LSP"
+    "zvdotphgsuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgssiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2791))]
+    "TARGET_LSP"
+    "zvdotphgssiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgssuiaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2792))]
+    "TARGET_LSP"
+    "zvdotphgssuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgssmfaa"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2793))]
+    "TARGET_LSP"
+    "zvdotphgssmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgsuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2794))]
+    "TARGET_LSP"
+    "zvdotphgsuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgssian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2795))]
+    "TARGET_LSP"
+    "zvdotphgssian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgssuian"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2796))]
+    "TARGET_LSP"
+    "zvdotphgssuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgssmfan"
+    [(set (match_operand:DI 0 "gpc_reg_operand" "=r")
+          (unspec:DI [(match_operand:DI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2797))]
+    "TARGET_LSP"
+    "zvdotphgssmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasfs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2798))]
+    "TARGET_LSP"
+    "zvdotphasfs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasfs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2799))]
+    "TARGET_LSP"
+    "zvdotphxasfs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasfrs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2800))]
+    "TARGET_LSP"
+    "zvdotphasfrs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasfrs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2801))]
+    "TARGET_LSP"
+    "zvdotphxasfrs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasfaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2802))]
+    "TARGET_LSP"
+    "zvdotphasfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasfaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2803))]
+    "TARGET_LSP"
+    "zvdotphxasfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasfans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2804))]
+    "TARGET_LSP"
+    "zvdotphasfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasfans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2805))]
+    "TARGET_LSP"
+    "zvdotphxasfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasfraas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2806))]
+    "TARGET_LSP"
+    "zvdotphasfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasfraas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2807))]
+    "TARGET_LSP"
+    "zvdotphxasfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasfrans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2808))]
+    "TARGET_LSP"
+    "zvdotphasfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasfrans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2809))]
+    "TARGET_LSP"
+    "zvdotphxasfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphaui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2810))]
+    "TARGET_LSP"
+    "zvdotphaui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxaui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2811))]
+    "TARGET_LSP"
+    "zvdotphxaui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasi"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2812))]
+    "TARGET_LSP"
+    "zvdotphasi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasi"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2813))]
+    "TARGET_LSP"
+    "zvdotphxasi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2814))]
+    "TARGET_LSP"
+    "zvdotphasui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2815))]
+    "TARGET_LSP"
+    "zvdotphxasui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphauiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2816))]
+    "TARGET_LSP"
+    "zvdotphauiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxauiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2817))]
+    "TARGET_LSP"
+    "zvdotphxauiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2818))]
+    "TARGET_LSP"
+    "zvdotphasiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2819))]
+    "TARGET_LSP"
+    "zvdotphxasiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasuiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2820))]
+    "TARGET_LSP"
+    "zvdotphasuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasuiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2821))]
+    "TARGET_LSP"
+    "zvdotphxasuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphauian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2822))]
+    "TARGET_LSP"
+    "zvdotphauian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxauian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2823))]
+    "TARGET_LSP"
+    "zvdotphxauian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2824))]
+    "TARGET_LSP"
+    "zvdotphasian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2825))]
+    "TARGET_LSP"
+    "zvdotphxasian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasuian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2826))]
+    "TARGET_LSP"
+    "zvdotphasuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasuian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2827))]
+    "TARGET_LSP"
+    "zvdotphxasuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphauis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2828))]
+    "TARGET_LSP"
+    "zvdotphauis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxauis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2829))]
+    "TARGET_LSP"
+    "zvdotphxauis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2830))]
+    "TARGET_LSP"
+    "zvdotphasis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2831))]
+    "TARGET_LSP"
+    "zvdotphxasis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasuis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2832))]
+    "TARGET_LSP"
+    "zvdotphasuis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasuis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2833))]
+    "TARGET_LSP"
+    "zvdotphxasuis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphauiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2834))]
+    "TARGET_LSP"
+    "zvdotphauiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxauiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2835))]
+    "TARGET_LSP"
+    "zvdotphxauiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2836))]
+    "TARGET_LSP"
+    "zvdotphasiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2837))]
+    "TARGET_LSP"
+    "zvdotphxasiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasuiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2838))]
+    "TARGET_LSP"
+    "zvdotphasuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasuiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2839))]
+    "TARGET_LSP"
+    "zvdotphxasuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphauians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2840))]
+    "TARGET_LSP"
+    "zvdotphauians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxauians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2841))]
+    "TARGET_LSP"
+    "zvdotphxauians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2842))]
+    "TARGET_LSP"
+    "zvdotphasians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2843))]
+    "TARGET_LSP"
+    "zvdotphxasians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphasuians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2844))]
+    "TARGET_LSP"
+    "zvdotphasuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxasuians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2845))]
+    "TARGET_LSP"
+    "zvdotphxasuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssfs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2846))]
+    "TARGET_LSP"
+    "zvdotphssfs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssfrs"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2847))]
+    "TARGET_LSP"
+    "zvdotphssfrs %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssfaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2848))]
+    "TARGET_LSP"
+    "zvdotphssfaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssfans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2849))]
+    "TARGET_LSP"
+    "zvdotphssfans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssfraas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2850))]
+    "TARGET_LSP"
+    "zvdotphssfraas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssfrans"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2851))]
+    "TARGET_LSP"
+    "zvdotphssfrans %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphsui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2852))]
+    "TARGET_LSP"
+    "zvdotphsui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssi"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2853))]
+    "TARGET_LSP"
+    "zvdotphssi %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssui"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2854))]
+    "TARGET_LSP"
+    "zvdotphssui %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphsuiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2855))]
+    "TARGET_LSP"
+    "zvdotphsuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2856))]
+    "TARGET_LSP"
+    "zvdotphssiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssuiaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2857))]
+    "TARGET_LSP"
+    "zvdotphssuiaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphsuian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2858))]
+    "TARGET_LSP"
+    "zvdotphsuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2859))]
+    "TARGET_LSP"
+    "zvdotphssian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssuian"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2860))]
+    "TARGET_LSP"
+    "zvdotphssuian %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphsuis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2861))]
+    "TARGET_LSP"
+    "zvdotphsuis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2862))]
+    "TARGET_LSP"
+    "zvdotphssis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssuis"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2863))]
+    "TARGET_LSP"
+    "zvdotphssuis %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphsuiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2864))]
+    "TARGET_LSP"
+    "zvdotphsuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2865))]
+    "TARGET_LSP"
+    "zvdotphssiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssuiaas"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2866))]
+    "TARGET_LSP"
+    "zvdotphssuiaas %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphsuians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2867))]
+    "TARGET_LSP"
+    "zvdotphsuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2868))]
+    "TARGET_LSP"
+    "zvdotphssians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphssuians"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2869))]
+    "TARGET_LSP"
+    "zvdotphssuians %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwasmf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2870))]
+    "TARGET_LSP"
+    "zvdotphgwasmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgwasmf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2871))]
+    "TARGET_LSP"
+    "zvdotphxgwasmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwasmfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2872))]
+    "TARGET_LSP"
+    "zvdotphgwasmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgwasmfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2873))]
+    "TARGET_LSP"
+    "zvdotphxgwasmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwasmfaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2874))]
+    "TARGET_LSP"
+    "zvdotphgwasmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgwasmfaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2875))]
+    "TARGET_LSP"
+    "zvdotphxgwasmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwasmfan"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2876))]
+    "TARGET_LSP"
+    "zvdotphgwasmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgwasmfan"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2877))]
+    "TARGET_LSP"
+    "zvdotphxgwasmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwasmfraa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2878))]
+    "TARGET_LSP"
+    "zvdotphgwasmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgwasmfraa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2879))]
+    "TARGET_LSP"
+    "zvdotphxgwasmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwasmfran"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2880))]
+    "TARGET_LSP"
+    "zvdotphgwasmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphxgwasmfran"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2881))]
+    "TARGET_LSP"
+    "zvdotphxgwasmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwssmf"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2882))]
+    "TARGET_LSP"
+    "zvdotphgwssmf %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwssmfr"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "r")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")] 2883))]
+    "TARGET_LSP"
+    "zvdotphgwssmfr %0, %1, %2"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwssmfaa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2884))]
+    "TARGET_LSP"
+    "zvdotphgwssmfaa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwssmfan"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2885))]
+    "TARGET_LSP"
+    "zvdotphgwssmfan %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwssmfraa"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2886))]
+    "TARGET_LSP"
+    "zvdotphgwssmfraa %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
+
+(define_insn "lsp_zvdotphgwssmfran"
+    [(set (match_operand:SI 0 "gpc_reg_operand" "=r")
+          (unspec:SI [(match_operand:SI 1 "gpc_reg_operand" "0")
+                      (match_operand:SI 2 "gpc_reg_operand" "r")
+                      (match_operand:SI 3 "gpc_reg_operand" "r")] 2887))]
+    "TARGET_LSP"
+    "zvdotphgwssmfran %0, %2, %3"
+    [(set_attr "type" "vecsimple")
+     (set_attr "length" "4")])
diff --git a/gcc/config/rs6000/rs6000-builtin.def b/gcc/config/rs6000/rs6000-builtin.def
index e9e9050..5e93e4d 100644
--- a/gcc/config/rs6000/rs6000-builtin.def
+++ b/gcc/config/rs6000/rs6000-builtin.def
@@ -30,10 +30,12 @@
    RS6000_BUILTIN_A -- ABS builtins
    RS6000_BUILTIN_D -- DST builtins
    RS6000_BUILTIN_E -- SPE EVSEL builtins.
+   RS6000_BUILTIN_EL -- LSP EVSEL builtins.
    RS6000_BUILTIN_H -- HTM builtins
    RS6000_BUILTIN_P -- Altivec, VSX, ISA 2.07 vector predicate builtins
    RS6000_BUILTIN_Q -- Paired floating point VSX predicate builtins
    RS6000_BUILTIN_S -- SPE predicate builtins
+   RS6000_BUILTIN_SL -- LSP predicate builtins
    RS6000_BUILTIN_X -- special builtins
 
    Each of the above macros takes 4 arguments:
@@ -67,6 +69,10 @@
   #error "RS6000_BUILTIN_E is not defined."
 #endif
 
+#ifndef RS6000_BUILTIN_EL
+  #error "RS6000_BUILTIN_EL is not defined."
+#endif
+
 #ifndef RS6000_BUILTIN_H
   #error "RS6000_BUILTIN_H is not defined."
 #endif
@@ -83,6 +89,10 @@
   #error "RS6000_BUILTIN_S is not defined."
 #endif
 
+#ifndef RS6000_BUILTIN_SL
+  #error "RS6000_BUILTIN_SL is not defined."
+#endif
+
 #ifndef RS6000_BUILTIN_X
   #error "RS6000_BUILTIN_X is not defined."
 #endif
@@ -683,6 +693,56 @@
                    (RS6000_BTC_OVERLOADED              /* ATTR */      \
                     | RS6000_BTC_SPECIAL),                             \
                    CODE_FOR_nothing)                   /* ICODE */
+
+/* LSP convenience macros.  */
+#define BU_LSP_1(ENUM, NAME, ATTR, ICODE)				\
+  RS6000_BUILTIN_1 (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
+		    "__builtin_lsp_" NAME,		/* NAME */	\
+		    RS6000_BTM_LSP,			/* MASK */	\
+		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
+		     | RS6000_BTC_UNARY),				\
+		    CODE_FOR_ ## ICODE)			/* ICODE */
+
+#define BU_LSP_2(ENUM, NAME, ATTR, ICODE)				\
+  RS6000_BUILTIN_2 (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
+		    "__builtin_lsp_" NAME,		/* NAME */	\
+		    RS6000_BTM_LSP,			/* MASK */	\
+		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
+		     | RS6000_BTC_BINARY),				\
+		    CODE_FOR_ ## ICODE)			/* ICODE */
+
+#define BU_LSP_3(ENUM, NAME, ATTR, ICODE)				\
+  RS6000_BUILTIN_3 (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
+		    "__builtin_lsp_" NAME,		/* NAME */	\
+		    RS6000_BTM_LSP,			/* MASK */	\
+		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
+		     | RS6000_BTC_TERNARY),				\
+		    CODE_FOR_ ## ICODE)			/* ICODE */
+
+#define BU_LSP_E(ENUM, NAME, ATTR, ICODE)				\
+  RS6000_BUILTIN_EL (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
+		    "__builtin_lsp_" NAME,		/* NAME */	\
+		    RS6000_BTM_LSP,			/* MASK */	\
+		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
+		     | RS6000_BTC_EVSEL),				\
+		    CODE_FOR_ ## ICODE)			/* ICODE */
+
+#define BU_LSP_P(ENUM, NAME, ATTR, ICODE)				\
+  RS6000_BUILTIN_SL (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
+		    "__builtin_lsp_" NAME,		/* NAME */	\
+		    RS6000_BTM_LSP,			/* MASK */	\
+		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
+		     | RS6000_BTC_PREDICATE),				\
+		    CODE_FOR_ ## ICODE)			/* ICODE */		    
+    
+#define BU_LSP_X(ENUM, NAME, ATTR, ICODE)				\
+  RS6000_BUILTIN_X (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
+    		    "__builtin_lsp_" NAME,		/* NAME */	\
+		    RS6000_BTM_LSP,			/* MASK */	\
+		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
+		     | RS6000_BTC_SPECIAL),				\
+		    CODE_FOR_ ## ICODE)			/* ICODE */
+
 #endif
 
 /* Insure 0 is not a legitimate index.  */
@@ -2144,3 +2204,710 @@ RS6000_BUILTIN_X (RS6000_BUILTIN_MTFSF, "__builtin_mtfsf",
 /* Darwin CfString builtin.  */
 BU_SPECIAL_X (RS6000_BUILTIN_CFSTRING, "__builtin_cfstring", RS6000_BTM_ALWAYS,
 	      RS6000_BTC_MISC)
+
+/* e200 LSP support */
+/* Listed in manual order */
+BU_LSP_2(ZBRMINC,           "zbrminc",            MISC,lsp_zbrminc)            /* VD, VA, VB */
+BU_LSP_2(ZCIRCINC,          "zcircinc",           MISC,lsp_zcircinc)           /* VD, VA, VB */
+BU_LSP_1(ZVABSH,            "zvabsh",             MISC,lsp_zvabsh)             /* VD, VA */
+BU_LSP_1(ZVABSHS,           "zvabshs",            MISC,lsp_zvabshs)            /* VD, VA */
+BU_LSP_1(ZABSW,             "zabsw",              MISC,lsp_zabsw)              /* VD, VA */
+BU_LSP_1(ZABSWS,            "zabsws",             MISC,lsp_zabsws)             /* VD, VA */
+BU_LSP_3(ZADDD,             "zaddd",              MISC,lsp_zaddd)              /* VD, VA, VB */
+BU_LSP_3(ZADDDSS,           "zadddss",            MISC,lsp_zadddss)            /* VD, VA, VB */
+BU_LSP_3(ZADDDUS,           "zadddus",            MISC,lsp_zadddus)            /* VD, VA, VB */
+BU_LSP_2(ZVADDH,            "zvaddh",             MISC,lsp_zvaddh)             /* VD, VA, VB */
+BU_LSP_2(ZVADDHSS,          "zvaddhss",           MISC,lsp_zvaddhss)           /* VD, VA, VB */
+BU_LSP_2(ZVADDHUS,          "zvaddhus",           MISC,lsp_zvaddhus)           /* VD, VA, VB */
+BU_LSP_2(ZVADDHX,           "zvaddhx",            MISC,lsp_zvaddhx)            /* VD, VA, VB */
+BU_LSP_2(ZVADDHXSS,         "zvaddhxss",          MISC,lsp_zvaddhxss)          /* VD, VA, VB */
+BU_LSP_2(ZVADDIH,           "zvaddih",            MISC,lsp_zvaddih)            /* VD, VA, UIMM */
+BU_LSP_2(ZVADDSUBFH,        "zvaddsubfh",         MISC,lsp_zvaddsubfh)         /* VD, VA, VB */
+BU_LSP_2(ZVADDSUBFHSS,      "zvaddsubfhss",       MISC,lsp_zvaddsubfhss)       /* VD, VA, VB */
+BU_LSP_2(ZVADDSUBFHX,       "zvaddsubfhx",        MISC,lsp_zvaddsubfhx)        /* VD, VA, VB */
+BU_LSP_2(ZVADDSUBFHXSS,     "zvaddsubfhxss",      MISC,lsp_zvaddsubfhxss)      /* VD, VA, VB */
+BU_LSP_2(ZADDHESW,          "zaddhesw",           MISC,lsp_zaddhesw)           /* VD, VA, VB */
+BU_LSP_2(ZADDHEUW,          "zaddheuw",           MISC,lsp_zaddheuw)           /* VD, VA, VB */
+BU_LSP_2(ZADDHOSW,          "zaddhosw",           MISC,lsp_zaddhosw)           /* VD, VA, VB */
+BU_LSP_2(ZADDHOUW,          "zaddhouw",           MISC,lsp_zaddhouw)           /* VD, VA, VB */
+BU_LSP_3(ZVADDW,            "zvaddw",             MISC,lsp_zvaddw)             /* VD, VA, VB */
+BU_LSP_3(ZVADDSUBFW,        "zvaddsubfw",         MISC,lsp_zvaddsubfw)         /* VD, VA, VB */
+BU_LSP_3(ZVADDSUBFWSS,      "zvaddsubfwss",       MISC,lsp_zvaddsubfwss)       /* VD, VA, VB */
+BU_LSP_2(ZADDWGSF,          "zaddwgsf",           MISC,lsp_zaddwgsf)           /* VD, VA, VB */
+BU_LSP_2(ZADDWGSI,          "zaddwgsi",           MISC,lsp_zaddwgsi)           /* VD, VA, VB */
+BU_LSP_2(ZADDWGUI,          "zaddwgui",           MISC,lsp_zaddwgui)           /* VD, VA, VB */
+BU_LSP_2(ZADDWSS,           "zaddwss",            MISC,lsp_zaddwss)            /* VD, VA, VB */
+BU_LSP_3(ZVADDWSS,          "zvaddwss",           MISC,lsp_zvaddwss)           /* VD, VA, VB */
+BU_LSP_2(ZADDWUS,           "zaddwus",            MISC,lsp_zaddwus)            /* VD, VA, VB */
+BU_LSP_3(ZVADDWUS,          "zvaddwus",           MISC,lsp_zvaddwus)           /* VD, VA, VB */
+
+
+/* LSP predicate builtins.  */
+BU_LSP_P(ZVCMPEQH,		"zvcmpeqh",		MISC,	lsp_zvcmpeqh)
+BU_LSP_P(ZVCMPGTHS,		"zvcmpgths",		MISC,	lsp_zvcmpgths)
+BU_LSP_P(ZVCMPGTHU,		"zvcmpgthu",		MISC,	lsp_zvcmpgthu)
+BU_LSP_P(ZVCMPLTHS,		"zvcmplths",		MISC,	lsp_zvcmplths)
+BU_LSP_P(ZVCMPLTHU,		"zvcmplthu",		MISC,	lsp_zvcmplthu)
+
+/* LSP evsel builtins.  */
+BU_LSP_E(ZVSEL_ZVCMPEQH,	"zvselect_eqh",		MISC,	lsp_zvcmpeqh)
+BU_LSP_E(ZVSEL_ZVCMPGTHS,	"zvselect_gths",	MISC,	lsp_zvcmpgths)
+BU_LSP_E(ZVSEL_ZVCMPGTHU,	"zvselect_gthu",	MISC,	lsp_zvcmpgthu)
+BU_LSP_E(ZVSEL_ZVCMPLTHS,	"zvselect_lths",	MISC,	lsp_zvcmplths)
+BU_LSP_E(ZVSEL_ZVCMPLTHU,	"zvselect_lthu",	MISC,	lsp_zvcmplthu)
+
+
+BU_LSP_1(ZVCNTLSH,          "zvcntlsh",           MISC,lsp_zvcntlsh)           /* VD, VA */
+BU_LSP_1(ZCNTLSW,           "zcntlsw",            MISC,lsp_zcntlsw)            /* VD, VA */
+BU_LSP_1(ZVCNTLZH,          "zvcntlzh",           MISC,lsp_zvcntlzh)           /* VD, VA */
+BU_LSP_2(ZDIVWSF,           "zdivwsf",            MISC,lsp_zdivwsf)            /* VD, VA, VB */
+BU_LSP_2(ZVMERGEHIH,        "zvmergehih",         MISC,lsp_zvmergehih)         /* VD, VA, VB */
+BU_LSP_2(ZVMERGEHILOH,      "zvmergehiloh",       MISC,lsp_zvmergehiloh)       /* VD, VA, VB */
+BU_LSP_2(ZVMERGELOH,        "zvmergeloh",         MISC,lsp_zvmergeloh)         /* VD, VA, VB */
+BU_LSP_2(ZVMERGELOHIH,      "zvmergelohih",       MISC,lsp_zvmergelohih)       /* VD, VA, VB */
+BU_LSP_1(ZVNEGH,            "zvnegh",             MISC,lsp_zvnegh)             /* VD, VA */
+BU_LSP_1(ZVNEGHO,           "zvnegho",            MISC,lsp_zvnegho)            /* VD, VA */
+BU_LSP_1(ZVNEGHOS,          "zvneghos",           MISC,lsp_zvneghos)           /* VD, VA */
+BU_LSP_1(ZVNEGHS,           "zvneghs",            MISC,lsp_zvneghs)            /* VD, VA */
+BU_LSP_1(ZNEGWS,            "znegws",             MISC,lsp_znegws)             /* VD, VA */
+BU_LSP_2(ZVPKSHGWSHFRS,     "zvpkshgwshfrs",      MISC,lsp_zvpkshgwshfrs)      /* VD, VA, VB */
+BU_LSP_2(ZPKSWGSHFRS,       "zpkswgshfrs",        MISC,lsp_zpkswgshfrs)        /* VD, VA, VB */
+BU_LSP_2(ZPKSWGSWFRS,       "zpkswgswfrs",        MISC,lsp_zpkswgswfrs)        /* VD, VA, VB */
+BU_LSP_2(ZVPKSWSHFRS,       "zvpkswshfrs",        MISC,lsp_zvpkswshfrs)        /* VD, VA, VB */
+BU_LSP_2(ZVPKSWSHS,         "zvpkswshs",          MISC,lsp_zvpkswshs)          /* VD, VA, VB */
+BU_LSP_2(ZVPKSWUHS,         "zvpkswuhs",          MISC,lsp_zvpkswuhs)          /* VD, VA, VB */
+BU_LSP_2(ZVPKUWUHS,         "zvpkuwuhs",          MISC,lsp_zvpkuwuhs)          /* VD, VA, VB */
+BU_LSP_2(ZVRLH,             "zvrlh",              MISC,lsp_zvrlh)              /* VD, VA, VB */
+BU_LSP_2(ZVRLHI,            "zvrlhi",             MISC,lsp_zvrlhi)             /* VD, VA, UIMM */
+BU_LSP_1(ZRNDWH,            "zrndwh",             MISC,lsp_zrndwh)             /* VD, VA */
+BU_LSP_1(ZRNDWHSS,          "zrndwhss",           MISC,lsp_zrndwhss)           /* VD, VA */
+BU_LSP_2(ZSATSDSW,          "zsatsdsw",           MISC,lsp_zsatsdsw)           /* VD, VA, VB */
+BU_LSP_2(ZSATSDUW,          "zsatsduw",           MISC,lsp_zsatsduw)           /* VD, VA, VB */
+BU_LSP_1(ZVSATSHUH,         "zvsatshuh",          MISC,lsp_zvsatshuh)          /* VD, VA */
+BU_LSP_1(ZSATSWSH,          "zsatswsh",           MISC,lsp_zsatswsh)           /* VD, VA */
+BU_LSP_1(ZSATSWUH,          "zsatswuh",           MISC,lsp_zsatswuh)           /* VD, VA */
+BU_LSP_1(ZSATSWUW,          "zsatswuw",           MISC,lsp_zsatswuw)           /* VD, VA */
+BU_LSP_2(ZSATUDUW,          "zsatuduw",           MISC,lsp_zsatuduw)           /* VD, VA, VB */
+BU_LSP_1(ZVSATUHSH,         "zvsatuhsh",          MISC,lsp_zvsatuhsh)          /* VD, VA */
+BU_LSP_1(ZSATUWSW,          "zsatuwsw",           MISC,lsp_zsatuwsw)           /* VD, VA */
+BU_LSP_1(ZSATUWSH,          "zsatuwsh",           MISC,lsp_zsatuwsh)           /* VD, VA */
+BU_LSP_1(ZSATUWUH,          "zsatuwuh",           MISC,lsp_zsatuwuh)           /* VD, VA */
+BU_LSP_2(ZVSELH,            "zvselh",             MISC,lsp_zvselh)             /* VD, VA, VB */
+BU_LSP_2(ZVSLH,             "zvslh",              MISC,lsp_zvslh)              /* VD, VA, VB */
+BU_LSP_2(ZVSLHI,            "zvslhi",             MISC,lsp_zvslhi)             /* VD, VA, UIMM */
+BU_LSP_2(ZVSLHSS,           "zvslhss",            MISC,lsp_zvslhss)            /* VD, VA, VB */
+BU_LSP_2(ZVSLHISS,          "zvslhiss",           MISC,lsp_zvslhiss)           /* VD, VA, UIMM */
+BU_LSP_2(ZVSLHUS,           "zvslhus",            MISC,lsp_zvslhus)            /* VD, VA, VB */
+BU_LSP_2(ZVSLHIUS,          "zvslhius",           MISC,lsp_zvslhius)           /* VD, VA, UIMM */
+BU_LSP_2(ZSLWSS,            "zslwss",             MISC,lsp_zslwss)             /* VD, VA, VB */
+BU_LSP_2(ZSLWISS,           "zslwiss",            MISC,lsp_zslwiss)            /* VD, VA, UIMM */
+BU_LSP_2(ZSLWUS,            "zslwus",             MISC,lsp_zslwus)             /* VD, VA, VB */
+BU_LSP_2(ZSLWIUS,           "zslwius",            MISC,lsp_zslwius)            /* VD, VA, UIMM */
+BU_LSP_1(ZVSPLATFIH,        "zvsplatfih",         MISC,lsp_zvsplatfih)         /* VD, SIMM */
+BU_LSP_1(ZVSPLATIH,         "zvsplatih",          MISC,lsp_zvsplatih)          /* VD, SIMM */
+BU_LSP_2(ZVSRHIS,           "zvsrhis",            MISC,lsp_zvsrhis)            /* VD, VA, UIMM */
+BU_LSP_2(ZVSRHIU,           "zvsrhiu",            MISC,lsp_zvsrhiu)            /* VD, VA, UIMM */
+BU_LSP_2(ZVSRHS,            "zvsrhs",             MISC,lsp_zvsrhs)             /* VD, VA, VB */
+BU_LSP_2(ZVSRHU,            "zvsrhu",             MISC,lsp_zvsrhu)             /* VD, VA, VB */
+BU_LSP_2(ZVSUBFADDH,        "zvsubfaddh",         MISC,lsp_zvsubfaddh)         /* VD, VA, VB */
+BU_LSP_2(ZVSUBFADDHSS,      "zvsubfaddhss",       MISC,lsp_zvsubfaddhss)       /* VD, VA, VB */
+BU_LSP_2(ZVSUBFADDHX,       "zvsubfaddhx",        MISC,lsp_zvsubfaddhx)        /* VD, VA, VB */
+BU_LSP_2(ZVSUBFADDHXSS,     "zvsubfaddhxss",      MISC,lsp_zvsubfaddhxss)      /* VD, VA, VB */
+BU_LSP_3(ZSUBFD,            "zsubfd",             MISC,lsp_zsubfd)             /* VD, VA, VB */
+BU_LSP_3(ZSUBFDSS,          "zsubfdss",           MISC,lsp_zsubfdss)           /* VD, VA, VB */
+BU_LSP_3(ZSUBFDUS,          "zsubfdus",           MISC,lsp_zsubfdus)           /* VD, VA, VB */
+BU_LSP_2(ZVSUBFH,           "zvsubfh",            MISC,lsp_zvsubfh)            /* VD, VA, VB */
+BU_LSP_2(ZSUBFHESW,         "zsubfhesw",          MISC,lsp_zsubfhesw)          /* VD, VA, VB */
+BU_LSP_2(ZSUBFHEUW,         "zsubfheuw",          MISC,lsp_zsubfheuw)          /* VD, VA, VB */
+BU_LSP_2(ZSUBFHOSW,         "zsubfhosw",          MISC,lsp_zsubfhosw)          /* VD, VA, VB */
+BU_LSP_2(ZSUBFHOUW,         "zsubfhouw",          MISC,lsp_zsubfhouw)          /* VD, VA, VB */
+BU_LSP_2(ZVSUBFHSS,         "zvsubfhss",          MISC,lsp_zvsubfhss)          /* VD, VA, VB */
+BU_LSP_2(ZVSUBFHUS,         "zvsubfhus",          MISC,lsp_zvsubfhus)          /* VD, VA, VB */
+BU_LSP_2(ZVSUBFHX,          "zvsubfhx",           MISC,lsp_zvsubfhx)           /* VD, VA, VB */
+BU_LSP_2(ZVSUBFHXSS,        "zvsubfhxss",         MISC,lsp_zvsubfhxss)         /* VD, VA, VB */
+BU_LSP_3(ZVSUBFW,           "zvsubfw",            MISC,lsp_zvsubfw)            /* VD, VA, VB */
+BU_LSP_3(ZVSUBFADDW,        "zvsubfaddw",         MISC,lsp_zvsubfaddw)         /* VD, VA, VB */
+BU_LSP_3(ZVSUBFADDWSS,      "zvsubfaddwss",       MISC,lsp_zvsubfaddwss)       /* VD, VA, VB */
+BU_LSP_2(ZSUBFWGSF,         "zsubfwgsf",          MISC,lsp_zsubfwgsf)          /* VD, VA, VB */
+BU_LSP_2(ZSUBFWGSI,         "zsubfwgsi",          MISC,lsp_zsubfwgsi)          /* VD, VA, VB */
+BU_LSP_2(ZSUBFWGUI,         "zsubfwgui",          MISC,lsp_zsubfwgui)          /* VD, VA, VB */
+BU_LSP_2(ZSUBFWSS,          "zsubfwss",           MISC,lsp_zsubfwss)           /* VD, VA, VB */
+BU_LSP_3(ZVSUBFWSS,         "zvsubfwss",          MISC,lsp_zvsubfwss)          /* VD, VA, VB */
+BU_LSP_2(ZSUBFWUS,          "zsubfwus",           MISC,lsp_zsubfwus)           /* VD, VA, VB */
+BU_LSP_3(ZVSUBFWUS,         "zvsubfwus",          MISC,lsp_zvsubfwus)          /* VD, VA, VB */
+BU_LSP_2(ZVSUBIFH,          "zvsubifh",           MISC,lsp_zvsubifh)           /* VD, VA, UIMM */
+BU_LSP_1(ZVUNPKHGWSF,       "zvunpkhgwsf",        MISC,lsp_zvunpkhgwsf)        /* VD, VA */
+BU_LSP_1(ZVUNPKHSF,         "zvunpkhsf",          MISC,lsp_zvunpkhsf)          /* VD, VA */
+BU_LSP_1(ZVUNPKHSI,         "zvunpkhsi",          MISC,lsp_zvunpkhsi)          /* VD, VA */
+BU_LSP_1(ZVUNPKHUI,         "zvunpkhui",          MISC,lsp_zvunpkhui)          /* VD, VA */
+BU_LSP_1(ZUNPKWGSF,         "zunpkwgsf",          MISC,lsp_zunpkwgsf)          /* VD, VA */
+BU_LSP_3(ZXTRW,             "zxtrw",              MISC,lsp_zxtrw)              /* VD, VA, VB, VX_OFF */
+
+// Load update/modify are implemented with macros
+BU_LSP_2(ZLDD,              "zldd",               MISC,lsp_zldd)               /* VD, VA, UIMM */
+BU_LSP_2(ZLDDX,             "zlddx",              MISC,lsp_zlddx)              /* VD, VA, VB */
+BU_LSP_2(ZLDH,              "zldh",               MISC,lsp_zldh)               /* VD, VA, UIMM */
+BU_LSP_2(ZLDHX,             "zldhx",              MISC,lsp_zldhx)              /* VD, VA, VB */
+BU_LSP_2(ZLDW,              "zldw",               MISC,lsp_zldw)               /* VD, VA, UIMM */
+BU_LSP_2(ZLDWX,             "zldwx",              MISC,lsp_zldwx)              /* VD, VA, VB */
+BU_LSP_2(ZLHGWSF,           "zlhgwsf",            MISC,lsp_zlhgwsf)            /* VD, VA, UIMM */
+BU_LSP_2(ZLHGWSFX,          "zlhgwsfx",           MISC,lsp_zlhgwsfx)           /* VD, VA, VB */
+BU_LSP_2(ZLHHE,             "zlhhe",              MISC,lsp_zlhhe)              /* VA, VS, UIMM */
+BU_LSP_2(ZLHHEX,            "zlhhex",             MISC,lsp_zlhhex)             /* VA, VB, VS */
+BU_LSP_2(ZLHHOS,            "zlhhos",             MISC,lsp_zlhhos)             /* VA, VS, UIMM */
+BU_LSP_2(ZLHHOSX,           "zlhhosx",            MISC,lsp_zlhhosx)            /* VA, VB, VS */
+BU_LSP_2(ZLHHOU,            "zlhhou",             MISC,lsp_zlhhou)             /* VA, VS, UIMM */
+BU_LSP_2(ZLHHOUX,           "zlhhoux",            MISC,lsp_zlhhoux)            /* VA, VB, VS */
+BU_LSP_2(ZLHHSPLAT,         "zlhhsplat",          MISC,lsp_zlhhsplat)          /* VD, VA, UIMM */
+BU_LSP_2(ZLHHSPLATX,        "zlhhsplatx",         MISC,lsp_zlhhsplatx)         /* VD, VA, VB */
+BU_LSP_2(ZLWGSFD,           "zlwgsfd",            MISC,lsp_zlwgsfd)            /* VD, VA, UIMM */
+BU_LSP_2(ZLWGSFDX,          "zlwgsfdx",           MISC,lsp_zlwgsfdx)           /* VD, VA, VB */
+BU_LSP_2(ZLWH,              "zlwh",               MISC,lsp_zlwh)               /* VD, VA, UIMM */
+BU_LSP_2(ZLWHX,             "zlwhx",              MISC,lsp_zlwhx)              /* VD, VA, VB */
+BU_LSP_2(ZLWHED,            "zlwhed",             MISC,lsp_zlwhed)             /* VD, VA, UIMM */
+BU_LSP_2(ZLWHEDX,           "zlwhedx",            MISC,lsp_zlwhedx)            /* VD, VA, VB */
+BU_LSP_2(ZLWHGWSFD,         "zlwhgwsfd",          MISC,lsp_zlwhgwsfd)          /* VD, VA, UIMM */
+BU_LSP_2(ZLWHGWSFDX,        "zlwhgwsfdx",         MISC,lsp_zlwhgwsfdx)         /* VD, VA, VB */
+BU_LSP_2(ZLWHOSD,           "zlwhosd",            MISC,lsp_zlwhosd)            /* VD, VA, UIMM */
+BU_LSP_2(ZLWHOSDX,          "zlwhosdx",           MISC,lsp_zlwhosdx)           /* VD, VA, VB */
+BU_LSP_2(ZLWHOUD,           "zlwhoud",            MISC,lsp_zlwhoud)            /* VD, VA, UIMM */
+BU_LSP_2(ZLWHOUDX,          "zlwhoudx",           MISC,lsp_zlwhoudx)           /* VD, VA, VB */
+BU_LSP_2(ZLWHSPLATD,        "zlwhsplatd",         MISC,lsp_zlwhsplatd)         /* VD, VA, UIMM */
+BU_LSP_2(ZLWHSPLATDX,       "zlwhsplatdx",        MISC,lsp_zlwhsplatdx)        /* VD, VA, VB */
+BU_LSP_2(ZLWHSPLATWD,       "zlwhsplatwd",        MISC,lsp_zlwhsplatwd)        /* VD, VA, UIMM */
+BU_LSP_2(ZLWHSPLATWDX,      "zlwhsplatwdx",       MISC,lsp_zlwhsplatwdx)       /* VD, VA, VB */
+BU_LSP_2(ZLWW,              "zlww",               MISC,lsp_zlww)               /* VD, VA, UIMM */
+BU_LSP_2(ZLWWX,             "zlwwx",              MISC,lsp_zlwwx)              /* VD, VA, VB */
+BU_LSP_2(ZLWWOSD,           "zlwwosd",            MISC,lsp_zlwwosd)            /* VD, VA, UIMM */
+BU_LSP_2(ZLWWOSDX,          "zlwwosdx",           MISC,lsp_zlwwosdx)           /* VD, VA, VB */
+
+// Store update/modify are implemented with macros
+BU_LSP_X(ZSTDD,             "zstdd",              MISC,lsp_zstdd)              /* VA, VS, UIMM */
+BU_LSP_X(ZSTDDX,            "zstddx",             MISC,lsp_zstddx)             /* VA, VB, VS */
+BU_LSP_X(ZSTDH,             "zstdh",              MISC,lsp_zstdh)              /* VA, VS, UIMM */
+BU_LSP_X(ZSTDHX,            "zstdhx",             MISC,lsp_zstdhx)             /* VA, VB, VS */
+BU_LSP_X(ZSTDW,             "zstdw",              MISC,lsp_zstdw)              /* VA, VS, UIMM */
+BU_LSP_X(ZSTDWX,            "zstdwx",             MISC,lsp_zstdwx)             /* VA, VB, VS */
+BU_LSP_X(ZSTHE,             "zsthe",              MISC,lsp_zsthe)              /* VA, VS, UIMM */
+BU_LSP_X(ZSTHEX,            "zsthex",             MISC,lsp_zsthex)             /* VA, VB, VS */
+BU_LSP_X(ZSTHO,             "zstho",              MISC,lsp_zstho)              /* VA, VS, UIMM */
+BU_LSP_X(ZSTHOX,            "zsthox",             MISC,lsp_zsthox)             /* VA, VB, VS */
+BU_LSP_X(ZSTWH,             "zstwh",              MISC,lsp_zstwh)              /* VA, VS, UIMM */
+BU_LSP_X(ZSTWHX,            "zstwhx",             MISC,lsp_zstwhx)             /* VA, VB, VS */
+BU_LSP_X(ZSTWHED,           "zstwhed",            MISC,lsp_zstwhed)            /* VA, VS, UIMM */
+BU_LSP_X(ZSTWHEDX,          "zstwhedx",           MISC,lsp_zstwhedx)           /* VA, VB, VS */
+BU_LSP_X(ZSTWHOD,           "zstwhod",            MISC,lsp_zstwhod)            /* VD, VA, UIMM */
+BU_LSP_X(ZSTWHODX,          "zstwhodx",           MISC,lsp_zstwhodx)           /* VD, VA, VB */
+BU_LSP_X(ZSTWW,             "zstww",              MISC,lsp_zstww)              /* VA, VS, UIMM */
+BU_LSP_X(ZSTWWX,            "zstwwx",             MISC,lsp_zstwwx)             /* VA, VB, VS */
+
+BU_LSP_2(ZMHEGSI,           "zmhegsi",            MISC,lsp_zmhegsi)            /* VD, VA, VB */
+BU_LSP_2(ZMHEGSMF,          "zmhegsmf",           MISC,lsp_zmhegsmf)           /* VD, VA, VB */
+BU_LSP_2(ZMHEGSUI,          "zmhegsui",           MISC,lsp_zmhegsui)           /* VD, VA, VB */
+BU_LSP_2(ZMHEGUI,           "zmhegui",            MISC,lsp_zmhegui)            /* VD, VA, VB */
+BU_LSP_2(ZMHEOGSI,          "zmheogsi",           MISC,lsp_zmheogsi)           /* VD, VA, VB */
+BU_LSP_2(ZMHEOGSMF,         "zmheogsmf",          MISC,lsp_zmheogsmf)          /* VD, VA, VB */
+BU_LSP_2(ZMHEOGSUI,         "zmheogsui",          MISC,lsp_zmheogsui)          /* VD, VA, VB */
+BU_LSP_2(ZMHEOGUI,          "zmheogui",           MISC,lsp_zmheogui)           /* VD, VA, VB */
+BU_LSP_2(ZMHOGSI,           "zmhogsi",            MISC,lsp_zmhogsi)            /* VD, VA, VB */
+BU_LSP_2(ZMHOGSMF,          "zmhogsmf",           MISC,lsp_zmhogsmf)           /* VD, VA, VB */
+BU_LSP_2(ZMHOGSUI,          "zmhogsui",           MISC,lsp_zmhogsui)           /* VD, VA, VB */
+BU_LSP_2(ZMHOGUI,           "zmhogui",            MISC,lsp_zmhogui)            /* VD, VA, VB */
+
+BU_LSP_3(ZMHEGSIAA,         "zmhegsiaa",          MISC,lsp_zmhegsiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMHEGSMFAA,        "zmhegsmfaa",         MISC,lsp_zmhegsmfaa)         /* VD, VA, VB */
+BU_LSP_3(ZMHEGSUIAA,        "zmhegsuiaa",         MISC,lsp_zmhegsuiaa)         /* VD, VA, VB */
+BU_LSP_3(ZMHEGUIAA,         "zmheguiaa",          MISC,lsp_zmheguiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOGSIAA,        "zmheogsiaa",         MISC,lsp_zmheogsiaa)         /* VD, VA, VB */
+BU_LSP_3(ZMHEOGSMFAA,       "zmheogsmfaa",        MISC,lsp_zmheogsmfaa)        /* VD, VA, VB */
+BU_LSP_3(ZMHEOGSUIAA,       "zmheogsuiaa",        MISC,lsp_zmheogsuiaa)        /* VD, VA, VB */
+BU_LSP_3(ZMHEOGUIAA,        "zmheoguiaa",         MISC,lsp_zmheoguiaa)         /* VD, VA, VB */
+BU_LSP_3(ZMHOGSIAA,         "zmhogsiaa",          MISC,lsp_zmhogsiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMHOGSMFAA,        "zmhogsmfaa",         MISC,lsp_zmhogsmfaa)         /* VD, VA, VB */
+BU_LSP_3(ZMHOGSUIAA,        "zmhogsuiaa",         MISC,lsp_zmhogsuiaa)         /* VD, VA, VB */
+BU_LSP_3(ZMHOGUIAA,         "zmhoguiaa",          MISC,lsp_zmhoguiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMHEGSIAN,         "zmhegsian",          MISC,lsp_zmhegsian)          /* VD, VA, VB */
+BU_LSP_3(ZMHEGSMFAN,        "zmhegsmfan",         MISC,lsp_zmhegsmfan)         /* VD, VA, VB */
+BU_LSP_3(ZMHEGSUIAN,        "zmhegsuian",         MISC,lsp_zmhegsuian)         /* VD, VA, VB */
+BU_LSP_3(ZMHEGUIAN,         "zmheguian",          MISC,lsp_zmheguian)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOGSIAN,        "zmheogsian",         MISC,lsp_zmheogsian)         /* VD, VA, VB */
+BU_LSP_3(ZMHEOGSMFAN,       "zmheogsmfan",        MISC,lsp_zmheogsmfan)        /* VD, VA, VB */
+BU_LSP_3(ZMHEOGSUIAN,       "zmheogsuian",        MISC,lsp_zmheogsuian)        /* VD, VA, VB */
+BU_LSP_3(ZMHEOGUIAN,        "zmheoguian",         MISC,lsp_zmheoguian)         /* VD, VA, VB */
+BU_LSP_3(ZMHOGSIAN,         "zmhogsian",          MISC,lsp_zmhogsian)          /* VD, VA, VB */
+BU_LSP_3(ZMHOGSMFAN,        "zmhogsmfan",         MISC,lsp_zmhogsmfan)         /* VD, VA, VB */
+BU_LSP_3(ZMHOGSUIAN,        "zmhogsuian",         MISC,lsp_zmhogsuian)         /* VD, VA, VB */
+BU_LSP_3(ZMHOGUIAN,         "zmhoguian",          MISC,lsp_zmhoguian)          /* VD, VA, VB */
+
+BU_LSP_2(ZMHEGWSMF,         "zmhegwsmf",          MISC,lsp_zmhegwsmf)          /* VD, VA, VB */
+BU_LSP_2(ZMHEOGWSMF,        "zmheogwsmf",         MISC,lsp_zmheogwsmf)         /* VD, VA, VB */
+BU_LSP_2(ZMHOGWSMF,         "zmhogwsmf",          MISC,lsp_zmhogwsmf)          /* VD, VA, VB */
+BU_LSP_2(ZMHEGWSMFR,        "zmhegwsmfr",         MISC,lsp_zmhegwsmfr)         /* VD, VA, VB */
+BU_LSP_2(ZMHEOGWSMFR,       "zmheogwsmfr",        MISC,lsp_zmheogwsmfr)        /* VD, VA, VB */
+BU_LSP_2(ZMHOGWSMFR,        "zmhogwsmfr",         MISC,lsp_zmhogwsmfr)         /* VD, VA, VB */
+
+BU_LSP_3(ZMHEGWSMFAA,       "zmhegwsmfaa",        MISC,lsp_zmhegwsmfaa)        /* VD, VA, VB */
+BU_LSP_3(ZMHEOGWSMFAA,      "zmheogwsmfaa",       MISC,lsp_zmheogwsmfaa)       /* VD, VA, VB */
+BU_LSP_3(ZMHOGWSMFAA,       "zmhogwsmfaa",        MISC,lsp_zmhogwsmfaa)        /* VD, VA, VB */
+BU_LSP_3(ZMHEGWSMFAN,       "zmhegwsmfan",        MISC,lsp_zmhegwsmfan)        /* VD, VA, VB */
+BU_LSP_3(ZMHEOGWSMFAN,      "zmheogwsmfan",       MISC,lsp_zmheogwsmfan)       /* VD, VA, VB */
+BU_LSP_3(ZMHOGWSMFAN,       "zmhogwsmfan",        MISC,lsp_zmhogwsmfan)        /* VD, VA, VB */
+BU_LSP_3(ZMHEGWSMFRAA,      "zmhegwsmfraa",       MISC,lsp_zmhegwsmfraa)       /* VD, VA, VB */
+BU_LSP_3(ZMHEOGWSMFRAA,     "zmheogwsmfraa",      MISC,lsp_zmheogwsmfraa)      /* VD, VA, VB */
+BU_LSP_3(ZMHOGWSMFRAA,      "zmhogwsmfraa",       MISC,lsp_zmhogwsmfraa)       /* VD, VA, VB */
+BU_LSP_3(ZMHOGWSMFRAN,      "zmhogwsmfran",       MISC,lsp_zmhogwsmfran)       /* VD, VA, VB */
+BU_LSP_3(ZMHEOGWSMFRAN,     "zmheogwsmfran",      MISC,lsp_zmheogwsmfran)      /* VD, VA, VB */
+BU_LSP_3(ZMHEGWSMFRAN,      "zmhegwsmfran",       MISC,lsp_zmhegwsmfran)       /* VD, VA, VB */
+
+BU_LSP_2(ZMHESF,            "zmhesf",             MISC,lsp_zmhesf)             /* VD, VA, VB */
+BU_LSP_2(ZMHEOSF,           "zmheosf",            MISC,lsp_zmheosf)            /* VD, VA, VB */
+BU_LSP_2(ZMHOSF,            "zmhosf",             MISC,lsp_zmhosf)             /* VD, VA, VB */
+BU_LSP_2(ZMHESFR,           "zmhesfr",            MISC,lsp_zmhesfr)            /* VD, VA, VB */
+BU_LSP_2(ZMHEOSFR,          "zmheosfr",           MISC,lsp_zmheosfr)           /* VD, VA, VB */
+BU_LSP_2(ZMHOSFR,           "zmhosfr",            MISC,lsp_zmhosfr)            /* VD, VA, VB */
+
+BU_LSP_3(ZMHESFAAS,         "zmhesfaas",          MISC,lsp_zmhesfaas)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOSFAAS,        "zmheosfaas",         MISC,lsp_zmheosfaas)         /* VD, VA, VB */
+BU_LSP_3(ZMHOSFAAS,         "zmhosfaas",          MISC,lsp_zmhosfaas)          /* VD, VA, VB */
+BU_LSP_3(ZMHESFANS,         "zmhesfans",          MISC,lsp_zmhesfans)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOSFANS,        "zmheosfans",         MISC,lsp_zmheosfans)         /* VD, VA, VB */
+BU_LSP_3(ZMHOSFANS,         "zmhosfans",          MISC,lsp_zmhosfans)          /* VD, VA, VB */
+BU_LSP_3(ZMHESFRAAS,        "zmhesfraas",         MISC,lsp_zmhesfraas)         /* VD, VA, VB */
+BU_LSP_3(ZMHEOSFRAAS,       "zmheosfraas",        MISC,lsp_zmheosfraas)        /* VD, VA, VB */
+BU_LSP_3(ZMHOSFRAAS,        "zmhosfraas",         MISC,lsp_zmhosfraas)         /* VD, VA, VB */
+BU_LSP_3(ZMHESFRANS,        "zmhesfrans",         MISC,lsp_zmhesfrans)         /* VD, VA, VB */
+BU_LSP_3(ZMHEOSFRANS,       "zmheosfrans",        MISC,lsp_zmheosfrans)        /* VD, VA, VB */
+BU_LSP_3(ZMHOSFRANS,        "zmhosfrans",         MISC,lsp_zmhosfrans)         /* VD, VA, VB */
+
+BU_LSP_2(ZMHESI,            "zmhesi",             MISC,lsp_zmhesi)             /* VD, VA, VB */
+BU_LSP_2(ZMHEOSI,           "zmheosi",            MISC,lsp_zmheosi)            /* VD, VA, VB */
+BU_LSP_2(ZMHOSI,            "zmhosi",             MISC,lsp_zmhosi)             /* VD, VA, VB */
+BU_LSP_2(ZMHESUI,           "zmhesui",            MISC,lsp_zmhesui)            /* VD, VA, VB */
+BU_LSP_2(ZMHEOSUI,          "zmheosui",           MISC,lsp_zmheosui)           /* VD, VA, VB */
+BU_LSP_2(ZMHOSUI,           "zmhosui",            MISC,lsp_zmhosui)            /* VD, VA, VB */
+BU_LSP_2(ZMHEUI,            "zmheui",             MISC,lsp_zmheui)             /* VD, VA, VB */
+BU_LSP_2(ZMHEOUI,           "zmheoui",            MISC,lsp_zmheoui)            /* VD, VA, VB */
+BU_LSP_2(ZMHOUI,            "zmhoui",             MISC,lsp_zmhoui)             /* VD, VA, VB */
+
+BU_LSP_3(ZMHESIAA,          "zmhesiaa",           MISC,lsp_zmhesiaa)           /* VD, VA, VB */
+BU_LSP_3(ZMHEOSIAA,         "zmheosiaa",          MISC,lsp_zmheosiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMHOSIAA,          "zmhosiaa",           MISC,lsp_zmhosiaa)           /* VD, VA, VB */
+BU_LSP_3(ZMHESIAN,          "zmhesian",           MISC,lsp_zmhesian)           /* VD, VA, VB */
+BU_LSP_3(ZMHEOSIAN,         "zmheosian",          MISC,lsp_zmheosian)          /* VD, VA, VB */
+BU_LSP_3(ZMHOSIAN,          "zmhosian",           MISC,lsp_zmhosian)           /* VD, VA, VB */
+BU_LSP_3(ZMHESUIAA,         "zmhesuiaa",          MISC,lsp_zmhesuiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOSUIAA,        "zmheosuiaa",         MISC,lsp_zmheosuiaa)         /* VD, VA, VB */
+BU_LSP_3(ZMHOSUIAA,         "zmhosuiaa",          MISC,lsp_zmhosuiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMHESUIAN,         "zmhesuian",          MISC,lsp_zmhesuian)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOSUIAN,        "zmheosuian",         MISC,lsp_zmheosuian)         /* VD, VA, VB */
+BU_LSP_3(ZMHOSUIAN,         "zmhosuian",          MISC,lsp_zmhosuian)          /* VD, VA, VB */
+BU_LSP_3(ZMHEUIAA,          "zmheuiaa",           MISC,lsp_zmheuiaa)           /* VD, VA, VB */
+BU_LSP_3(ZMHEOUIAA,         "zmheouiaa",          MISC,lsp_zmheouiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMHOUIAA,          "zmhouiaa",           MISC,lsp_zmhouiaa)           /* VD, VA, VB */
+BU_LSP_3(ZMHEUIAN,          "zmheuian",           MISC,lsp_zmheuian)           /* VD, VA, VB */
+BU_LSP_3(ZMHEOUIAN,         "zmheouian",          MISC,lsp_zmheouian)          /* VD, VA, VB */
+BU_LSP_3(ZMHOUIAN,          "zmhouian",           MISC,lsp_zmhouian)           /* VD, VA, VB */
+
+BU_LSP_3(ZMHESIAAS,         "zmhesiaas",          MISC,lsp_zmhesiaas)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOSIAAS,        "zmheosiaas",         MISC,lsp_zmheosiaas)         /* VD, VA, VB */
+BU_LSP_3(ZMHOSIAAS,         "zmhosiaas",          MISC,lsp_zmhosiaas)          /* VD, VA, VB */
+BU_LSP_3(ZMHESIANS,         "zmhesians",          MISC,lsp_zmhesians)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOSIANS,        "zmheosians",         MISC,lsp_zmheosians)         /* VD, VA, VB */
+BU_LSP_3(ZMHOSIANS,         "zmhosians",          MISC,lsp_zmhosians)          /* VD, VA, VB */
+BU_LSP_3(ZMHESUIAAS,        "zmhesuiaas",         MISC,lsp_zmhesuiaas)         /* VD, VA, VB */
+BU_LSP_3(ZMHEOSUIAAS,       "zmheosuiaas",        MISC,lsp_zmheosuiaas)        /* VD, VA, VB */
+BU_LSP_3(ZMHOSUIAAS,        "zmhosuiaas",         MISC,lsp_zmhosuiaas)         /* VD, VA, VB */
+BU_LSP_3(ZMHESUIANS,        "zmhesuians",         MISC,lsp_zmhesuians)         /* VD, VA, VB */
+BU_LSP_3(ZMHEOSUIANS,       "zmheosuians",        MISC,lsp_zmheosuians)        /* VD, VA, VB */
+BU_LSP_3(ZMHOSUIANS,        "zmhosuians",         MISC,lsp_zmhosuians)         /* VD, VA, VB */
+BU_LSP_3(ZMHEUIAAS,         "zmheuiaas",          MISC,lsp_zmheuiaas)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOUIAAS,        "zmheouiaas",         MISC,lsp_zmheouiaas)         /* VD, VA, VB */
+BU_LSP_3(ZMHOUIAAS,         "zmhouiaas",          MISC,lsp_zmhouiaas)          /* VD, VA, VB */
+BU_LSP_3(ZMHEUIANS,         "zmheuians",          MISC,lsp_zmheuians)          /* VD, VA, VB */
+BU_LSP_3(ZMHEOUIANS,        "zmheouians",         MISC,lsp_zmheouians)         /* VD, VA, VB */
+BU_LSP_3(ZMHOUIANS,         "zmhouians",          MISC,lsp_zmhouians)          /* VD, VA, VB */
+
+BU_LSP_2(ZVMHSFH,           "zvmhsfh",            MISC,lsp_zvmhsfh)            /* VD, VA, VB */
+BU_LSP_2(ZVMHSFRH,          "zvmhsfrh",           MISC,lsp_zvmhsfrh)           /* VD, VA, VB */
+BU_LSP_3(ZVMHSFAAHS,        "zvmhsfaahs",         MISC,lsp_zvmhsfaahs)         /* VD, VA, VB */
+BU_LSP_3(ZVMHSFANHS,        "zvmhsfanhs",         MISC,lsp_zvmhsfanhs)         /* VD, VA, VB */
+BU_LSP_3(ZVMHSFRAAHS,       "zvmhsfraahs",        MISC,lsp_zvmhsfraahs)        /* VD, VA, VB */
+BU_LSP_3(ZVMHSFRANHS,       "zvmhsfranhs",        MISC,lsp_zvmhsfranhs)        /* VD, VA, VB */
+
+BU_LSP_2(ZVMHSIH,           "zvmhsih",            MISC,lsp_zvmhsih)            /* VD, VA, VB */
+BU_LSP_2(ZVMHSUIH,          "zvmhsuih",           MISC,lsp_zvmhsuih)           /* VD, VA, VB */
+BU_LSP_2(ZVMHUIH,           "zvmhuih",            MISC,lsp_zvmhuih)            /* VD, VA, VB */
+
+BU_LSP_2(ZVMHSIHS,          "zvmhsihs",           MISC,lsp_zvmhsihs)           /* VD, VA, VB */
+BU_LSP_2(ZVMHSUIHS,         "zvmhsuihs",          MISC,lsp_zvmhsuihs)          /* VD, VA, VB */
+BU_LSP_2(ZVMHUIHS,          "zvmhuihs",           MISC,lsp_zvmhuihs)           /* VD, VA, VB */
+
+BU_LSP_3(ZVMHSIAAH,         "zvmhsiaah",          MISC,lsp_zvmhsiaah)          /* VD, VA, VB */
+BU_LSP_3(ZVMHSUIAAH,        "zvmhsuiaah",         MISC,lsp_zvmhsuiaah)         /* VD, VA, VB */
+BU_LSP_3(ZVMHUIAAH,         "zvmhuiaah",          MISC,lsp_zvmhuiaah)          /* VD, VA, VB */
+BU_LSP_3(ZVMHSIANH,         "zvmhsianh",          MISC,lsp_zvmhsianh)          /* VD, VA, VB */
+BU_LSP_3(ZVMHSUIANH,        "zvmhsuianh",         MISC,lsp_zvmhsuianh)         /* VD, VA, VB */
+BU_LSP_3(ZVMHUIANH,         "zvmhuianh",          MISC,lsp_zvmhuianh)          /* VD, VA, VB */
+
+BU_LSP_3(ZVMHSIAAHS,        "zvmhsiaahs",         MISC,lsp_zvmhsiaahs)         /* VD, VA, VB */
+BU_LSP_3(ZVMHSUIAAHS,       "zvmhsuiaahs",        MISC,lsp_zvmhsuiaahs)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUIAAHS,        "zvmhuiaahs",         MISC,lsp_zvmhuiaahs)         /* VD, VA, VB */
+BU_LSP_3(ZVMHSIANHS,        "zvmhsianhs",         MISC,lsp_zvmhsianhs)         /* VD, VA, VB */
+BU_LSP_3(ZVMHSUIANHS,       "zvmhsuianhs",        MISC,lsp_zvmhsuianhs)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUIANHS,        "zvmhuianhs",         MISC,lsp_zvmhuianhs)         /* VD, VA, VB */
+
+BU_LSP_2(ZMWGSI,            "zmwgsi",             MISC,lsp_zmwgsi)             /* VD, VA, VB */
+BU_LSP_2(ZMWGSUI,           "zmwgsui",            MISC,lsp_zmwgsui)            /* VD, VA, VB */
+BU_LSP_2(ZMWGUI,            "zmwgui",             MISC,lsp_zmwgui)             /* VD, VA, VB */
+
+BU_LSP_3(ZMWGSIAA,          "zmwgsiaa",           MISC,lsp_zmwgsiaa)           /* VD, VA, VB */
+BU_LSP_3(ZMWGSIAN,          "zmwgsian",           MISC,lsp_zmwgsian)           /* VD, VA, VB */
+BU_LSP_3(ZMWGSUIAA,         "zmwgsuiaa",          MISC,lsp_zmwgsuiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMWGSUIAN,         "zmwgsuian",          MISC,lsp_zmwgsuian)          /* VD, VA, VB */
+BU_LSP_3(ZMWGUIAA,          "zmwguiaa",           MISC,lsp_zmwguiaa)           /* VD, VA, VB */
+BU_LSP_3(ZMWGUIAN,          "zmwguian",           MISC,lsp_zmwguian)           /* VD, VA, VB */
+
+BU_LSP_3(ZMWGSIAAS,         "zmwgsiaas",          MISC,lsp_zmwgsiaas)          /* VD, VA, VB */
+BU_LSP_3(ZMWGSIANS,         "zmwgsians",          MISC,lsp_zmwgsians)          /* VD, VA, VB */
+BU_LSP_3(ZMWGSUIAAS,        "zmwgsuiaas",         MISC,lsp_zmwgsuiaas)         /* VD, VA, VB */
+BU_LSP_3(ZMWGSUIANS,        "zmwgsuians",         MISC,lsp_zmwgsuians)         /* VD, VA, VB */
+BU_LSP_3(ZMWGUIAAS,         "zmwguiaas",          MISC,lsp_zmwguiaas)          /* VD, VA, VB */
+BU_LSP_3(ZMWGUIANS,         "zmwguians",          MISC,lsp_zmwguians)          /* VD, VA, VB */
+
+BU_LSP_2(ZMWGSMF,           "zmwgsmf",            MISC,lsp_zmwgsmf)            /* VD, VA, VB */
+BU_LSP_2(ZMWGSMFR,          "zmwgsmfr",           MISC,lsp_zmwgsmfr)           /* VD, VA, VB */
+
+BU_LSP_3(ZMWGSMFAA,         "zmwgsmfaa",          MISC,lsp_zmwgsmfaa)          /* VD, VA, VB */
+BU_LSP_3(ZMWGSMFAN,         "zmwgsmfan",          MISC,lsp_zmwgsmfan)          /* VD, VA, VB */
+BU_LSP_3(ZMWGSMFRAA,        "zmwgsmfraa",         MISC,lsp_zmwgsmfraa)         /* VD, VA, VB */
+BU_LSP_3(ZMWGSMFRAN,        "zmwgsmfran",         MISC,lsp_zmwgsmfran)         /* VD, VA, VB */
+
+BU_LSP_2(ZMWLSIS,           "zmwlsis",            MISC,lsp_zmwlsis)            /* VD, VA, VB */
+BU_LSP_2(ZMWLSUIS,          "zmwlsuis",           MISC,lsp_zmwlsuis)           /* VD, VA, VB */
+BU_LSP_2(ZMWLUIS,           "zmwluis",            MISC,lsp_zmwluis)            /* VD, VA, VB */
+
+BU_LSP_3(ZMWLSIAA,          "zmwlsiaa",           MISC,lsp_zmwlsiaa)           /* VD, VA, VB */
+BU_LSP_3(ZMWLSUIAA,         "zmwlsuiaa",          MISC,lsp_zmwlsuiaa)          /* VD, VA, VB */
+BU_LSP_3(ZMWLUIAA,          "zmwluiaa",           MISC,lsp_zmwluiaa)           /* VD, VA, VB */
+BU_LSP_3(ZMWLSIAN,          "zmwlsian",           MISC,lsp_zmwlsian)           /* VD, VA, VB */
+BU_LSP_3(ZMWLSUIAN,         "zmwlsuian",          MISC,lsp_zmwlsuian)          /* VD, VA, VB */
+BU_LSP_3(ZMWLUIAN,          "zmwluian",           MISC,lsp_zmwluian)           /* VD, VA, VB */
+
+BU_LSP_3(ZMWLSIAAS,         "zmwlsiaas",          MISC,lsp_zmwlsiaas)          /* VD, VA, VB */
+BU_LSP_3(ZMWLSIANS,         "zmwlsians",          MISC,lsp_zmwlsians)          /* VD, VA, VB */
+BU_LSP_3(ZMWLSUIAAS,        "zmwlsuiaas",         MISC,lsp_zmwlsuiaas)         /* VD, VA, VB */
+BU_LSP_3(ZMWLSUIANS,        "zmwlsuians",         MISC,lsp_zmwlsuians)         /* VD, VA, VB */
+BU_LSP_3(ZMWLUIAAS,         "zmwluiaas",          MISC,lsp_zmwluiaas)          /* VD, VA, VB */
+BU_LSP_3(ZMWLUIANS,         "zmwluians",          MISC,lsp_zmwluians)          /* VD, VA, VB */
+
+BU_LSP_2(ZMWSF,             "zmwsf",              MISC,lsp_zmwsf)              /* VD, VA, VB */
+BU_LSP_2(ZMWSFR,            "zmwsfr",             MISC,lsp_zmwsfr)             /* VD, VA, VB */
+
+BU_LSP_3(ZMWSFAAS,          "zmwsfaas",           MISC,lsp_zmwsfaas)           /* VD, VA, VB */
+BU_LSP_3(ZMWSFANS,          "zmwsfans",           MISC,lsp_zmwsfans)           /* VD, VA, VB */
+BU_LSP_3(ZMWSFRAAS,         "zmwsfraas",          MISC,lsp_zmwsfraas)          /* VD, VA, VB */
+BU_LSP_3(ZMWSFRANS,         "zmwsfrans",          MISC,lsp_zmwsfrans)          /* VD, VA, VB */
+
+BU_LSP_2(ZVMHULGWSMF,       "zvmhulgwsmf",        MISC,lsp_zvmhulgwsmf)        /* VD, VA, VB */
+BU_LSP_2(ZVMHLLGWSMF,       "zvmhllgwsmf",        MISC,lsp_zvmhllgwsmf)        /* VD, VA, VB */
+BU_LSP_2(ZVMHUUGWSMF,       "zvmhuugwsmf",        MISC,lsp_zvmhuugwsmf)        /* VD, VA, VB */
+BU_LSP_2(ZVMHXLGWSMF,       "zvmhxlgwsmf",        MISC,lsp_zvmhxlgwsmf)        /* VD, VA, VB */
+BU_LSP_2(ZVMHULGWSMFR,      "zvmhulgwsmfr",       MISC,lsp_zvmhulgwsmfr)       /* VD, VA, VB */
+BU_LSP_2(ZVMHLLGWSMFR,      "zvmhllgwsmfr",       MISC,lsp_zvmhllgwsmfr)       /* VD, VA, VB */
+BU_LSP_2(ZVMHUUGWSMFR,      "zvmhuugwsmfr",       MISC,lsp_zvmhuugwsmfr)       /* VD, VA, VB */
+BU_LSP_2(ZVMHXLGWSMFR,      "zvmhxlgwsmfr",       MISC,lsp_zvmhxlgwsmfr)       /* VD, VA, VB */
+
+BU_LSP_3(ZVMHULGWSMFAA,     "zvmhulgwsmfaa",      MISC,lsp_zvmhulgwsmfaa)      /* VD, VA, VB */
+BU_LSP_3(ZVMHLLGWSMFAA,     "zvmhllgwsmfaa",      MISC,lsp_zvmhllgwsmfaa)      /* VD, VA, VB */
+BU_LSP_3(ZVMHUUGWSMFAA,     "zvmhuugwsmfaa",      MISC,lsp_zvmhuugwsmfaa)      /* VD, VA, VB */
+BU_LSP_3(ZVMHXLGWSMFAA,     "zvmhxlgwsmfaa",      MISC,lsp_zvmhxlgwsmfaa)      /* VD, VA, VB */
+BU_LSP_3(ZVMHULGWSMFRAA,    "zvmhulgwsmfraa",     MISC,lsp_zvmhulgwsmfraa)     /* VD, VA, VB */
+BU_LSP_3(ZVMHLLGWSMFRAA,    "zvmhllgwsmfraa",     MISC,lsp_zvmhllgwsmfraa)     /* VD, VA, VB */
+BU_LSP_3(ZVMHUUGWSMFRAA,    "zvmhuugwsmfraa",     MISC,lsp_zvmhuugwsmfraa)     /* VD, VA, VB */
+BU_LSP_3(ZVMHXLGWSMFRAA,    "zvmhxlgwsmfraa",     MISC,lsp_zvmhxlgwsmfraa)     /* VD, VA, VB */
+BU_LSP_3(ZVMHULGWSMFAN,     "zvmhulgwsmfan",      MISC,lsp_zvmhulgwsmfan)      /* VD, VA, VB */
+BU_LSP_3(ZVMHLLGWSMFAN,     "zvmhllgwsmfan",      MISC,lsp_zvmhllgwsmfan)      /* VD, VA, VB */
+BU_LSP_3(ZVMHUUGWSMFAN,     "zvmhuugwsmfan",      MISC,lsp_zvmhuugwsmfan)      /* VD, VA, VB */
+BU_LSP_3(ZVMHXLGWSMFAN,     "zvmhxlgwsmfan",      MISC,lsp_zvmhxlgwsmfan)      /* VD, VA, VB */
+BU_LSP_3(ZVMHULGWSMFRAN,    "zvmhulgwsmfran",     MISC,lsp_zvmhulgwsmfran)     /* VD, VA, VB */
+BU_LSP_3(ZVMHLLGWSMFRAN,    "zvmhllgwsmfran",     MISC,lsp_zvmhllgwsmfran)     /* VD, VA, VB */
+BU_LSP_3(ZVMHUUGWSMFRAN,    "zvmhuugwsmfran",     MISC,lsp_zvmhuugwsmfran)     /* VD, VA, VB */
+BU_LSP_3(ZVMHXLGWSMFRAN,    "zvmhxlgwsmfran",     MISC,lsp_zvmhxlgwsmfran)     /* VD, VA, VB */
+BU_LSP_3(ZVMHULGWSMFANP,    "zvmhulgwsmfanp",     MISC,lsp_zvmhulgwsmfanp)     /* VD, VA, VB */
+BU_LSP_3(ZVMHLLGWSMFANP,    "zvmhllgwsmfanp",     MISC,lsp_zvmhllgwsmfanp)     /* VD, VA, VB */
+BU_LSP_3(ZVMHUUGWSMFANP,    "zvmhuugwsmfanp",     MISC,lsp_zvmhuugwsmfanp)     /* VD, VA, VB */
+BU_LSP_3(ZVMHXLGWSMFANP,    "zvmhxlgwsmfanp",     MISC,lsp_zvmhxlgwsmfanp)     /* VD, VA, VB */
+BU_LSP_3(ZVMHULGWSMFRANP,   "zvmhulgwsmfranp",    MISC,lsp_zvmhulgwsmfranp)    /* VD, VA, VB */
+BU_LSP_3(ZVMHLLGWSMFRANP,   "zvmhllgwsmfranp",    MISC,lsp_zvmhllgwsmfranp)    /* VD, VA, VB */
+BU_LSP_3(ZVMHUUGWSMFRANP,   "zvmhuugwsmfranp",    MISC,lsp_zvmhuugwsmfranp)    /* VD, VA, VB */
+BU_LSP_3(ZVMHXLGWSMFRANP,   "zvmhxlgwsmfranp",    MISC,lsp_zvmhxlgwsmfranp)    /* VD, VA, VB */
+
+BU_LSP_2(ZVMHULSF,          "zvmhulsf",           MISC,lsp_zvmhulsf)           /* VD, VA, VB */
+BU_LSP_2(ZVMHLLSF,          "zvmhllsf",           MISC,lsp_zvmhllsf)           /* VD, VA, VB */
+BU_LSP_2(ZVMHUUSF,          "zvmhuusf",           MISC,lsp_zvmhuusf)           /* VD, VA, VB */
+BU_LSP_2(ZVMHXLSF,          "zvmhxlsf",           MISC,lsp_zvmhxlsf)           /* VD, VA, VB */
+BU_LSP_2(ZVMHULSFR,         "zvmhulsfr",          MISC,lsp_zvmhulsfr)          /* VD, VA, VB */
+BU_LSP_2(ZVMHLLSFR,         "zvmhllsfr",          MISC,lsp_zvmhllsfr)          /* VD, VA, VB */
+BU_LSP_2(ZVMHUUSFR,         "zvmhuusfr",          MISC,lsp_zvmhuusfr)          /* VD, VA, VB */
+BU_LSP_2(ZVMHXLSFR,         "zvmhxlsfr",          MISC,lsp_zvmhxlsfr)          /* VD, VA, VB */
+
+BU_LSP_3(ZVMHULSFAAS,       "zvmhulsfaas",        MISC,lsp_zvmhulsfaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSFAAS,       "zvmhllsfaas",        MISC,lsp_zvmhllsfaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSFAAS,       "zvmhuusfaas",        MISC,lsp_zvmhuusfaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSFAAS,       "zvmhxlsfaas",        MISC,lsp_zvmhxlsfaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHULSFANS,       "zvmhulsfans",        MISC,lsp_zvmhulsfans)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSFANS,       "zvmhllsfans",        MISC,lsp_zvmhllsfans)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSFANS,       "zvmhuusfans",        MISC,lsp_zvmhuusfans)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSFANS,       "zvmhxlsfans",        MISC,lsp_zvmhxlsfans)        /* VD, VA, VB */
+BU_LSP_3(ZVMHULSFANPS,      "zvmhulsfanps",       MISC,lsp_zvmhulsfanps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSFANPS,      "zvmhllsfanps",       MISC,lsp_zvmhllsfanps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSFANPS,      "zvmhuusfanps",       MISC,lsp_zvmhuusfanps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSFANPS,      "zvmhxlsfanps",       MISC,lsp_zvmhxlsfanps)       /* VD, VA, VB */
+
+BU_LSP_3(ZVMHULSFRAAS,      "zvmhulsfraas",       MISC,lsp_zvmhulsfraas)       /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSFRAAS,      "zvmhllsfraas",       MISC,lsp_zvmhllsfraas)       /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSFRAAS,      "zvmhuusfraas",       MISC,lsp_zvmhuusfraas)       /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSFRAAS,      "zvmhxlsfraas",       MISC,lsp_zvmhxlsfraas)       /* VD, VA, VB */
+BU_LSP_3(ZVMHULSFRANS,      "zvmhulsfrans",       MISC,lsp_zvmhulsfrans)       /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSFRANS,      "zvmhllsfrans",       MISC,lsp_zvmhllsfrans)       /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSFRANS,      "zvmhuusfrans",       MISC,lsp_zvmhuusfrans)       /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSFRANS,      "zvmhxlsfrans",       MISC,lsp_zvmhxlsfrans)       /* VD, VA, VB */
+BU_LSP_3(ZVMHULSFRANPS,     "zvmhulsfranps",      MISC,lsp_zvmhulsfranps)      /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSFRANPS,     "zvmhllsfranps",      MISC,lsp_zvmhllsfranps)      /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSFRANPS,     "zvmhuusfranps",      MISC,lsp_zvmhuusfranps)      /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSFRANPS,     "zvmhxlsfranps",      MISC,lsp_zvmhxlsfranps)      /* VD, VA, VB */
+
+BU_LSP_2(ZVMHULSI,          "zvmhulsi",           MISC,lsp_zvmhulsi)           /* VD, VA, VB */
+BU_LSP_2(ZVMHLLSI,          "zvmhllsi",           MISC,lsp_zvmhllsi)           /* VD, VA, VB */
+BU_LSP_2(ZVMHUUSI,          "zvmhuusi",           MISC,lsp_zvmhuusi)           /* VD, VA, VB */
+BU_LSP_2(ZVMHXLSI,          "zvmhxlsi",           MISC,lsp_zvmhxlsi)           /* VD, VA, VB */
+BU_LSP_2(ZVMHULSUI,         "zvmhulsui",          MISC,lsp_zvmhulsui)          /* VD, VA, VB */
+BU_LSP_2(ZVMHLLSUI,         "zvmhllsui",          MISC,lsp_zvmhllsui)          /* VD, VA, VB */
+BU_LSP_2(ZVMHUUSUI,         "zvmhuusui",          MISC,lsp_zvmhuusui)          /* VD, VA, VB */
+BU_LSP_2(ZVMHXLSUI,         "zvmhxlsui",          MISC,lsp_zvmhxlsui)          /* VD, VA, VB */
+BU_LSP_2(ZVMHULUI,          "zvmhului",           MISC,lsp_zvmhului)           /* VD, VA, VB */
+BU_LSP_2(ZVMHLLUI,          "zvmhllui",           MISC,lsp_zvmhllui)           /* VD, VA, VB */
+BU_LSP_2(ZVMHUUUI,          "zvmhuuui",           MISC,lsp_zvmhuuui)           /* VD, VA, VB */
+BU_LSP_2(ZVMHXLUI,          "zvmhxlui",           MISC,lsp_zvmhxlui)           /* VD, VA, VB */
+
+BU_LSP_3(ZVMHULSIAA,        "zvmhulsiaa",         MISC,lsp_zvmhulsiaa)         /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSIAA,        "zvmhllsiaa",         MISC,lsp_zvmhllsiaa)         /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSIAA,        "zvmhuusiaa",         MISC,lsp_zvmhuusiaa)         /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSIAA,        "zvmhxlsiaa",         MISC,lsp_zvmhxlsiaa)         /* VD, VA, VB */
+BU_LSP_3(ZVMHULSIAN,        "zvmhulsian",         MISC,lsp_zvmhulsian)         /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSIAN,        "zvmhllsian",         MISC,lsp_zvmhllsian)         /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSIAN,        "zvmhuusian",         MISC,lsp_zvmhuusian)         /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSIAN,        "zvmhxlsian",         MISC,lsp_zvmhxlsian)         /* VD, VA, VB */
+BU_LSP_3(ZVMHULSIANP,       "zvmhulsianp",        MISC,lsp_zvmhulsianp)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSIANP,       "zvmhllsianp",        MISC,lsp_zvmhllsianp)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSIANP,       "zvmhuusianp",        MISC,lsp_zvmhuusianp)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSIANP,       "zvmhxlsianp",        MISC,lsp_zvmhxlsianp)        /* VD, VA, VB */
+BU_LSP_3(ZVMHULSUIAA,       "zvmhulsuiaa",        MISC,lsp_zvmhulsuiaa)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSUIAA,       "zvmhllsuiaa",        MISC,lsp_zvmhllsuiaa)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSUIAA,       "zvmhuusuiaa",        MISC,lsp_zvmhuusuiaa)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSUIAA,       "zvmhxlsuiaa",        MISC,lsp_zvmhxlsuiaa)        /* VD, VA, VB */
+BU_LSP_3(ZVMHULSUIAN,       "zvmhulsuian",        MISC,lsp_zvmhulsuian)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSUIAN,       "zvmhllsuian",        MISC,lsp_zvmhllsuian)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSUIAN,       "zvmhuusuian",        MISC,lsp_zvmhuusuian)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSUIAN,       "zvmhxlsuian",        MISC,lsp_zvmhxlsuian)        /* VD, VA, VB */
+BU_LSP_3(ZVMHULSUIANP,      "zvmhulsuianp",       MISC,lsp_zvmhulsuianp)       /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSUIANP,      "zvmhllsuianp",       MISC,lsp_zvmhllsuianp)       /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSUIANP,      "zvmhuusuianp",       MISC,lsp_zvmhuusuianp)       /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSUIANP,      "zvmhxlsuianp",       MISC,lsp_zvmhxlsuianp)       /* VD, VA, VB */
+BU_LSP_3(ZVMHULUIAA,        "zvmhuluiaa",         MISC,lsp_zvmhuluiaa)         /* VD, VA, VB */
+BU_LSP_3(ZVMHLLUIAA,        "zvmhlluiaa",         MISC,lsp_zvmhlluiaa)         /* VD, VA, VB */
+BU_LSP_3(ZVMHUUUIAA,        "zvmhuuuiaa",         MISC,lsp_zvmhuuuiaa)         /* VD, VA, VB */
+BU_LSP_3(ZVMHXLUIAA,        "zvmhxluiaa",         MISC,lsp_zvmhxluiaa)         /* VD, VA, VB */
+BU_LSP_3(ZVMHULUIAN,        "zvmhuluian",         MISC,lsp_zvmhuluian)         /* VD, VA, VB */
+BU_LSP_3(ZVMHLLUIAN,        "zvmhlluian",         MISC,lsp_zvmhlluian)         /* VD, VA, VB */
+BU_LSP_3(ZVMHUUUIAN,        "zvmhuuuian",         MISC,lsp_zvmhuuuian)         /* VD, VA, VB */
+BU_LSP_3(ZVMHXLUIAN,        "zvmhxluian",         MISC,lsp_zvmhxluian)         /* VD, VA, VB */
+BU_LSP_3(ZVMHULUIANP,       "zvmhuluianp",        MISC,lsp_zvmhuluianp)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLUIANP,       "zvmhlluianp",        MISC,lsp_zvmhlluianp)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUUIANP,       "zvmhuuuianp",        MISC,lsp_zvmhuuuianp)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLUIANP,       "zvmhxluianp",        MISC,lsp_zvmhxluianp)        /* VD, VA, VB */
+
+BU_LSP_3(ZVMHULSIAAS,       "zvmhulsiaas",        MISC,lsp_zvmhulsiaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSIAAS,       "zvmhllsiaas",        MISC,lsp_zvmhllsiaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSIAAS,       "zvmhuusiaas",        MISC,lsp_zvmhuusiaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSIAAS,       "zvmhxlsiaas",        MISC,lsp_zvmhxlsiaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHULSIANS,       "zvmhulsians",        MISC,lsp_zvmhulsians)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSIANS,       "zvmhllsians",        MISC,lsp_zvmhllsians)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSIANS,       "zvmhuusians",        MISC,lsp_zvmhuusians)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSIANS,       "zvmhxlsians",        MISC,lsp_zvmhxlsians)        /* VD, VA, VB */
+BU_LSP_3(ZVMHULSIANPS,      "zvmhulsianps",       MISC,lsp_zvmhulsianps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSIANPS,      "zvmhllsianps",       MISC,lsp_zvmhllsianps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSIANPS,      "zvmhuusianps",       MISC,lsp_zvmhuusianps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSIANPS,      "zvmhxlsianps",       MISC,lsp_zvmhxlsianps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHULSUIAAS,      "zvmhulsuiaas",       MISC,lsp_zvmhulsuiaas)       /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSUIAAS,      "zvmhllsuiaas",       MISC,lsp_zvmhllsuiaas)       /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSUIAAS,      "zvmhuusuiaas",       MISC,lsp_zvmhuusuiaas)       /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSUIAAS,      "zvmhxlsuiaas",       MISC,lsp_zvmhxlsuiaas)       /* VD, VA, VB */
+BU_LSP_3(ZVMHULSUIANS,      "zvmhulsuians",       MISC,lsp_zvmhulsuians)       /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSUIANS,      "zvmhllsuians",       MISC,lsp_zvmhllsuians)       /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSUIANS,      "zvmhuusuians",       MISC,lsp_zvmhuusuians)       /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSUIANS,      "zvmhxlsuians",       MISC,lsp_zvmhxlsuians)       /* VD, VA, VB */
+BU_LSP_3(ZVMHULSUIANPS,     "zvmhulsuianps",      MISC,lsp_zvmhulsuianps)      /* VD, VA, VB */
+BU_LSP_3(ZVMHLLSUIANPS,     "zvmhllsuianps",      MISC,lsp_zvmhllsuianps)      /* VD, VA, VB */
+BU_LSP_3(ZVMHUUSUIANPS,     "zvmhuusuianps",      MISC,lsp_zvmhuusuianps)      /* VD, VA, VB */
+BU_LSP_3(ZVMHXLSUIANPS,     "zvmhxlsuianps",      MISC,lsp_zvmhxlsuianps)      /* VD, VA, VB */
+BU_LSP_3(ZVMHULUIAAS,       "zvmhuluiaas",        MISC,lsp_zvmhuluiaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLUIAAS,       "zvmhlluiaas",        MISC,lsp_zvmhlluiaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUUIAAS,       "zvmhuuuiaas",        MISC,lsp_zvmhuuuiaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLUIAAS,       "zvmhxluiaas",        MISC,lsp_zvmhxluiaas)        /* VD, VA, VB */
+BU_LSP_3(ZVMHULUIANS,       "zvmhuluians",        MISC,lsp_zvmhuluians)        /* VD, VA, VB */
+BU_LSP_3(ZVMHLLUIANS,       "zvmhlluians",        MISC,lsp_zvmhlluians)        /* VD, VA, VB */
+BU_LSP_3(ZVMHUUUIANS,       "zvmhuuuians",        MISC,lsp_zvmhuuuians)        /* VD, VA, VB */
+BU_LSP_3(ZVMHXLUIANS,       "zvmhxluians",        MISC,lsp_zvmhxluians)        /* VD, VA, VB */
+BU_LSP_3(ZVMHULUIANPS,      "zvmhuluianps",       MISC,lsp_zvmhuluianps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHLLUIANPS,      "zvmhlluianps",       MISC,lsp_zvmhlluianps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHUUUIANPS,      "zvmhuuuianps",       MISC,lsp_zvmhuuuianps)       /* VD, VA, VB */
+BU_LSP_3(ZVMHXLUIANPS,      "zvmhxluianps",       MISC,lsp_zvmhxluianps)       /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHGAUI,       "zvdotphgaui",        MISC,lsp_zvdotphgaui)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXGAUI,      "zvdotphxgaui",       MISC,lsp_zvdotphxgaui)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHGASI,       "zvdotphgasi",        MISC,lsp_zvdotphgasi)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXGASI,      "zvdotphxgasi",       MISC,lsp_zvdotphxgasi)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHGASUI,      "zvdotphgasui",       MISC,lsp_zvdotphgasui)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXGASUI,     "zvdotphxgasui",      MISC,lsp_zvdotphxgasui)      /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHGASMF,      "zvdotphgasmf",       MISC,lsp_zvdotphgasmf)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXGASMF,     "zvdotphxgasmf",      MISC,lsp_zvdotphxgasmf)      /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHGAUIAA,     "zvdotphgauiaa",      MISC,lsp_zvdotphgauiaa)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGAUIAA,    "zvdotphxgauiaa",     MISC,lsp_zvdotphxgauiaa)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGASIAA,     "zvdotphgasiaa",      MISC,lsp_zvdotphgasiaa)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGASIAA,    "zvdotphxgasiaa",     MISC,lsp_zvdotphxgasiaa)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGASUIAA,    "zvdotphgasuiaa",     MISC,lsp_zvdotphgasuiaa)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGASUIAA,   "zvdotphxgasuiaa",    MISC,lsp_zvdotphxgasuiaa)    /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGASMFAA,    "zvdotphgasmfaa",     MISC,lsp_zvdotphgasmfaa)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGASMFAA,   "zvdotphxgasmfaa",    MISC,lsp_zvdotphxgasmfaa)    /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGAUIAN,     "zvdotphgauian",      MISC,lsp_zvdotphgauian)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGAUIAN,    "zvdotphxgauian",     MISC,lsp_zvdotphxgauian)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGASIAN,     "zvdotphgasian",      MISC,lsp_zvdotphgasian)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGASIAN,    "zvdotphxgasian",     MISC,lsp_zvdotphxgasian)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGASUIAN,    "zvdotphgasuian",     MISC,lsp_zvdotphgasuian)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGASUIAN,   "zvdotphxgasuian",    MISC,lsp_zvdotphxgasuian)    /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGASMFAN,    "zvdotphgasmfan",     MISC,lsp_zvdotphgasmfan)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGASMFAN,   "zvdotphxgasmfan",    MISC,lsp_zvdotphxgasmfan)    /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHGSUI,       "zvdotphgsui",        MISC,lsp_zvdotphgsui)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHGSSI,       "zvdotphgssi",        MISC,lsp_zvdotphgssi)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHGSSUI,      "zvdotphgssui",       MISC,lsp_zvdotphgssui)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHGSSMF,      "zvdotphgssmf",       MISC,lsp_zvdotphgssmf)       /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHGSUIAA,     "zvdotphgsuiaa",      MISC,lsp_zvdotphgsuiaa)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGSSIAA,     "zvdotphgssiaa",      MISC,lsp_zvdotphgssiaa)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGSSUIAA,    "zvdotphgssuiaa",     MISC,lsp_zvdotphgssuiaa)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGSSMFAA,    "zvdotphgssmfaa",     MISC,lsp_zvdotphgssmfaa)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGSUIAN,     "zvdotphgsuian",      MISC,lsp_zvdotphgsuian)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGSSIAN,     "zvdotphgssian",      MISC,lsp_zvdotphgssian)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGSSUIAN,    "zvdotphgssuian",     MISC,lsp_zvdotphgssuian)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGSSMFAN,    "zvdotphgssmfan",     MISC,lsp_zvdotphgssmfan)     /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHASFS,       "zvdotphasfs",        MISC,lsp_zvdotphasfs)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXASFS,      "zvdotphxasfs",       MISC,lsp_zvdotphxasfs)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHASFRS,      "zvdotphasfrs",       MISC,lsp_zvdotphasfrs)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXASFRS,     "zvdotphxasfrs",      MISC,lsp_zvdotphxasfrs)      /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHASFAAS,     "zvdotphasfaas",      MISC,lsp_zvdotphasfaas)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASFAAS,    "zvdotphxasfaas",     MISC,lsp_zvdotphxasfaas)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASFANS,     "zvdotphasfans",      MISC,lsp_zvdotphasfans)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASFANS,    "zvdotphxasfans",     MISC,lsp_zvdotphxasfans)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASFRAAS,    "zvdotphasfraas",     MISC,lsp_zvdotphasfraas)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASFRAAS,   "zvdotphxasfraas",    MISC,lsp_zvdotphxasfraas)    /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASFRANS,    "zvdotphasfrans",     MISC,lsp_zvdotphasfrans)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASFRANS,   "zvdotphxasfrans",    MISC,lsp_zvdotphxasfrans)    /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHAUI,        "zvdotphaui",         MISC,lsp_zvdotphaui)         /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXAUI,       "zvdotphxaui",        MISC,lsp_zvdotphxaui)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHASI,        "zvdotphasi",         MISC,lsp_zvdotphasi)         /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXASI,       "zvdotphxasi",        MISC,lsp_zvdotphxasi)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHASUI,       "zvdotphasui",        MISC,lsp_zvdotphasui)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXASUI,      "zvdotphxasui",       MISC,lsp_zvdotphxasui)       /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHAUIAA,      "zvdotphauiaa",       MISC,lsp_zvdotphauiaa)       /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXAUIAA,     "zvdotphxauiaa",      MISC,lsp_zvdotphxauiaa)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASIAA,      "zvdotphasiaa",       MISC,lsp_zvdotphasiaa)       /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASIAA,     "zvdotphxasiaa",      MISC,lsp_zvdotphxasiaa)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASUIAA,     "zvdotphasuiaa",      MISC,lsp_zvdotphasuiaa)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASUIAA,    "zvdotphxasuiaa",     MISC,lsp_zvdotphxasuiaa)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHAUIAN,      "zvdotphauian",       MISC,lsp_zvdotphauian)       /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXAUIAN,     "zvdotphxauian",      MISC,lsp_zvdotphxauian)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASIAN,      "zvdotphasian",       MISC,lsp_zvdotphasian)       /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASIAN,     "zvdotphxasian",      MISC,lsp_zvdotphxasian)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASUIAN,     "zvdotphasuian",      MISC,lsp_zvdotphasuian)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASUIAN,    "zvdotphxasuian",     MISC,lsp_zvdotphxasuian)     /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHAUIS,       "zvdotphauis",        MISC,lsp_zvdotphauis)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXAUIS,      "zvdotphxauis",       MISC,lsp_zvdotphxauis)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHASIS,       "zvdotphasis",        MISC,lsp_zvdotphasis)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXASIS,      "zvdotphxasis",       MISC,lsp_zvdotphxasis)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHASUIS,      "zvdotphasuis",       MISC,lsp_zvdotphasuis)       /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXASUIS,     "zvdotphxasuis",      MISC,lsp_zvdotphxasuis)      /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHAUIAAS,     "zvdotphauiaas",      MISC,lsp_zvdotphauiaas)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXAUIAAS,    "zvdotphxauiaas",     MISC,lsp_zvdotphxauiaas)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASIAAS,     "zvdotphasiaas",      MISC,lsp_zvdotphasiaas)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASIAAS,    "zvdotphxasiaas",     MISC,lsp_zvdotphxasiaas)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASUIAAS,    "zvdotphasuiaas",     MISC,lsp_zvdotphasuiaas)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASUIAAS,   "zvdotphxasuiaas",    MISC,lsp_zvdotphxasuiaas)    /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHAUIANS,     "zvdotphauians",      MISC,lsp_zvdotphauians)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXAUIANS,    "zvdotphxauians",     MISC,lsp_zvdotphxauians)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASIANS,     "zvdotphasians",      MISC,lsp_zvdotphasians)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASIANS,    "zvdotphxasians",     MISC,lsp_zvdotphxasians)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHASUIANS,    "zvdotphasuians",     MISC,lsp_zvdotphasuians)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXASUIANS,   "zvdotphxasuians",    MISC,lsp_zvdotphxasuians)    /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHSSFS,       "zvdotphssfs",        MISC,lsp_zvdotphssfs)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHSSFRS,      "zvdotphssfrs",       MISC,lsp_zvdotphssfrs)       /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHSSFAAS,     "zvdotphssfaas",      MISC,lsp_zvdotphssfaas)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSFANS,     "zvdotphssfans",      MISC,lsp_zvdotphssfans)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSFRAAS,    "zvdotphssfraas",     MISC,lsp_zvdotphssfraas)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSFRANS,    "zvdotphssfrans",     MISC,lsp_zvdotphssfrans)     /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHSUI,        "zvdotphsui",         MISC,lsp_zvdotphsui)         /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHSSI,        "zvdotphssi",         MISC,lsp_zvdotphssi)         /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHSSUI,       "zvdotphssui",        MISC,lsp_zvdotphssui)        /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHSUIAA,      "zvdotphsuiaa",       MISC,lsp_zvdotphsuiaa)       /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSIAA,      "zvdotphssiaa",       MISC,lsp_zvdotphssiaa)       /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSUIAA,     "zvdotphssuiaa",      MISC,lsp_zvdotphssuiaa)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSUIAN,      "zvdotphsuian",       MISC,lsp_zvdotphsuian)       /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSIAN,      "zvdotphssian",       MISC,lsp_zvdotphssian)       /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSUIAN,     "zvdotphssuian",      MISC,lsp_zvdotphssuian)      /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHSUIS,       "zvdotphsuis",        MISC,lsp_zvdotphsuis)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHSSIS,       "zvdotphssis",        MISC,lsp_zvdotphssis)        /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHSSUIS,      "zvdotphssuis",       MISC,lsp_zvdotphssuis)       /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHSUIAAS,     "zvdotphsuiaas",      MISC,lsp_zvdotphsuiaas)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSIAAS,     "zvdotphssiaas",      MISC,lsp_zvdotphssiaas)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSUIAAS,    "zvdotphssuiaas",     MISC,lsp_zvdotphssuiaas)     /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSUIANS,     "zvdotphsuians",      MISC,lsp_zvdotphsuians)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSIANS,     "zvdotphssians",      MISC,lsp_zvdotphssians)      /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHSSUIANS,    "zvdotphssuians",     MISC,lsp_zvdotphssuians)     /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHGWASMF,     "zvdotphgwasmf",      MISC,lsp_zvdotphgwasmf)      /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXGWASMF,    "zvdotphxgwasmf",     MISC,lsp_zvdotphxgwasmf)     /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHGWASMFR,    "zvdotphgwasmfr",     MISC,lsp_zvdotphgwasmfr)     /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHXGWASMFR,   "zvdotphxgwasmfr",    MISC,lsp_zvdotphxgwasmfr)    /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHGWASMFAA,   "zvdotphgwasmfaa",    MISC,lsp_zvdotphgwasmfaa)    /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGWASMFAA,  "zvdotphxgwasmfaa",   MISC,lsp_zvdotphxgwasmfaa)   /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGWASMFAN,   "zvdotphgwasmfan",    MISC,lsp_zvdotphgwasmfan)    /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGWASMFAN,  "zvdotphxgwasmfan",   MISC,lsp_zvdotphxgwasmfan)   /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGWASMFRAA,  "zvdotphgwasmfraa",   MISC,lsp_zvdotphgwasmfraa)   /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGWASMFRAA, "zvdotphxgwasmfraa",  MISC,lsp_zvdotphxgwasmfraa)  /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGWASMFRAN,  "zvdotphgwasmfran",   MISC,lsp_zvdotphgwasmfran)   /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHXGWASMFRAN, "zvdotphxgwasmfran",  MISC,lsp_zvdotphxgwasmfran)  /* VD, VA, VB */
+
+BU_LSP_2(ZVDOTPHGWSSMF,     "zvdotphgwssmf",      MISC,lsp_zvdotphgwssmf)      /* VD, VA, VB */
+BU_LSP_2(ZVDOTPHGWSSMFR,    "zvdotphgwssmfr",     MISC,lsp_zvdotphgwssmfr)     /* VD, VA, VB */
+
+BU_LSP_3(ZVDOTPHGWSSMFAA,   "zvdotphgwssmfaa",    MISC,lsp_zvdotphgwssmfaa)    /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGWSSMFAN,   "zvdotphgwssmfan",    MISC,lsp_zvdotphgwssmfan)    /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGWSSMFRAA,  "zvdotphgwssmfraa",   MISC,lsp_zvdotphgwssmfraa)   /* VD, VA, VB */
+BU_LSP_3(ZVDOTPHGWSSMFRAN,  "zvdotphgwssmfran",   MISC,lsp_zvdotphgwssmfran)   /* VD, VA, VB */
+
+
diff --git a/gcc/config/rs6000/rs6000-c.c b/gcc/config/rs6000/rs6000-c.c
index ec195ba..9ffb55d 100644
--- a/gcc/config/rs6000/rs6000-c.c
+++ b/gcc/config/rs6000/rs6000-c.c
@@ -374,6 +374,101 @@ rs6000_target_modify_macros (bool define_p, HOST_WIDE_INT flags,
   /* options from the builtin masks.  */
   if ((bu_mask & RS6000_BTM_SPE) != 0)
     rs6000_define_or_undefine_macro (define_p, "__SPE__");
+  if ((bu_mask & RS6000_BTM_LSP) != 0) {
+    rs6000_define_or_undefine_macro (define_p, "__LSP_APU__");
+    /* Implement irregular LSP builtins as macros */
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlddu(u,i)=         ({uint64_t d; __asm (\"zlddu %1,%2*8(%0)\"        : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlddmx(m,x)=        ({uint64_t d; __asm (\"zlddmx %1,%0,%2\"          : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zldhu(u,i)=         ({uint64_t d; __asm (\"zldhu %1,%2*8(%0)\"        : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zldhmx(m,x)=        ({uint64_t d; __asm (\"zldhmx %1,%0,%2\"          : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zldwu(u,i)=         ({uint64_t d; __asm (\"zldwu %1,%2*8(%0)\"        : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zldwmx(m,x)=        ({uint64_t d; __asm (\"zldwmx %1,%0,%2\"          : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhgwsfu(u,i)=      ({uint64_t d; __asm (\"zlhgwsfu %1,%2*2(%0)\"     : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhgwsfmx(m,x)=     ({uint64_t d; __asm (\"zlhgwsfmx %1,%0,%2\"       : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhheu(u,i)=        ({uint64_t d; __asm (\"zlhheu %1,%2*2(%0)\"       : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhhemx(m,x)=       ({uint64_t d; __asm (\"zlhhemx %1,%0,%2\"         : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhhosu(u,i)=       ({uint64_t d; __asm (\"zlhhosu %1,%2*2(%0)\"      : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhhosmx(m,x)=      ({uint64_t d; __asm (\"zlhhosmx %1,%0,%2\"        : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhhouu(u,i)=       ({uint64_t d; __asm (\"zlhhouu %1,%2*2(%0)\"      : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhhoumx(m,x)=      ({uint64_t d; __asm (\"zlhhoumx %1,%0,%2\"        : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhhsplatu(u,i)=    ({uint64_t d; __asm (\"zlhhsplatu %1,%2*2(%0)\"   : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlhhsplatmx(m,x)=   ({uint64_t d; __asm (\"zlhhsplatmx %1,%0,%2\"     : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwgsfdu(u,i)=      ({uint64_t d; __asm (\"zlwgsfdu %1,%2*4(%0)\"     : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwgsfdmx(m,x)=     ({uint64_t d; __asm (\"zlwgsfdmx %1,%0,%2\"       : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhu(u,i)=         ({uint64_t d; __asm (\"zlwhu %1,%2*4(%0)\"        : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhmx(m,x)=        ({uint64_t d; __asm (\"zlwhmx %1,%0,%2\"          : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhedu(u,i)=       ({uint64_t d; __asm (\"zlwhedu %1,%2*4(%0)\"      : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhedmx(m,x)=      ({uint64_t d; __asm (\"zlwhedmx %1,%0,%2\"        : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhgwsfdu(u,i)=    ({uint64_t d; __asm (\"zlwhgwsfdu %1,%2*4(%0)\"   : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhgwsfdmx(m,x)=   ({uint64_t d; __asm (\"zlwhgwsfdmx %1,%0,%2\"     : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhosdu(u,i)=      ({uint64_t d; __asm (\"zlwhosdu %1,%2*4(%0)\"     : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhosdmx(m,x)=     ({uint64_t d; __asm (\"zlwhosdmx %1,%0,%2\"       : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhoudu(u,i)=      ({uint64_t d; __asm (\"zlwhoudu %1,%2*4(%0)\"     : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhoudmx(m,x)=     ({uint64_t d; __asm (\"zlwhoudmx %1,%0,%2\"       : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhsplatdu(u,i)=   ({uint64_t d; __asm (\"zlwhsplatdu %1,%2*4(%0)\"  : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhsplatdmx(m,x)=  ({uint64_t d; __asm (\"zlwhsplatdmx %1,%0,%2\"    : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhsplatwdu(u,i)=  ({uint64_t d; __asm (\"zlwhsplatwdu %1,%2*4(%0)\" : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwhsplatwdmx(m,x)= ({uint64_t d; __asm (\"zlwhsplatwdmx %1,%0,%2\"   : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwwu(u,i)=         ({uint64_t d; __asm (\"zlwwu %1,%2*4(%0)\"        : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwwmx(m,x)=        ({uint64_t d; __asm (\"zlwwmx %1,%0,%2\"          : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwwosdu(u,i)=      ({uint64_t d; __asm (\"zlwwosdu %1,%2*4(%0)\"     : \"+r\" (u), \"=r\" (d) : \"i\" (i)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zlwwosdmx(m,x)=     ({uint64_t d; __asm (\"zlwwosdmx %1,%0,%2\"       : \"+r\" (m), \"=r\" (d) : \"r\" (x)); d;})");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstddu(d,u,i)=                    __asm (\"zstddu %1,%2*8(%0)\"       : \"+r\" (u)             : \"r\" (d), \"i\" (i))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstddmx(d,m,x)=                   __asm (\"zstddmx %1,%0,%2\"         : \"+r\" (m)             : \"r\" (d), \"r\" (x))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstdhu(d,u,i)=                    __asm (\"zstdhu %1,%2*8(%0)\"       : \"+r\" (u)             : \"r\" (d), \"i\" (i))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstdhmx(d,m,x)=                   __asm (\"zstdhmx %1,%0,%2\"         : \"+r\" (m)             : \"r\" (d), \"r\" (x))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstdwu(d,u,i)=                    __asm (\"zstdwu %1,%2*8(%0)\"       : \"+r\" (u)             : \"r\" (d), \"i\" (i))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstdwmx(d,m,x)=                   __asm (\"zstdwmx %1,%0,%2\"         : \"+r\" (m)             : \"r\" (d), \"r\" (x))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstheu(d,u,i)=                    __asm (\"zstheu %1,%2*2(%0)\"       : \"+r\" (u)             : \"r\" (d), \"i\" (i))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zsthemx(d,m,x)=                   __asm (\"zsthemx %1,%0,%2\"         : \"+r\" (m)             : \"r\" (d), \"r\" (x))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zsthou(d,u,i)=                    __asm (\"zsthou %1,%2*2(%0)\"       : \"+r\" (u)             : \"r\" (d), \"i\" (i))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zsthomx(d,m,x)=                   __asm (\"zsthomx %1,%0,%2\"         : \"+r\" (m)             : \"r\" (d), \"r\" (x))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstwhu(d,u,i)=                    __asm (\"zstwhu %1,%2*4(%0)\"       : \"+r\" (u)             : \"r\" (d), \"i\" (i))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstwhmx(d,m,x)=                   __asm (\"zstwhmx %1,%0,%2\"         : \"+r\" (m)             : \"r\" (d), \"r\" (x))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstwhedu(d,u,i)=                  __asm (\"zstwhedu %1,%2*4(%0)\"     : \"+r\" (u)             : \"r\" (d), \"i\" (i))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstwhedmx(d,m,x)=                 __asm (\"zstwhedmx %1,%0,%2\"       : \"+r\" (m)             : \"r\" (d), \"r\" (x))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstwhodu(d,u,i)=                  __asm (\"zstwhodu %1,%2*4(%0)\"     : \"+r\" (u)             : \"r\" (d), \"i\" (i))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstwhodmx(d,m,x)=                 __asm (\"zstwhodmx %1,%0,%2\"       : \"+r\" (m)             : \"r\" (d), \"r\" (x))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstwwu(d,u,i)=                    __asm (\"zstwwu %1,%2*4(%0)\"       : \"+r\" (u)             : \"r\" (d), \"i\" (i))");
+    rs6000_define_or_undefine_macro (define_p, "__builtin_lsp_zstwwmx(d,m,x)=                   __asm (\"zstwwmx %1,%0,%2\"         : \"+r\" (m)             : \"r\" (d), \"r\" (x))");
+    
+    /* Predicates */
+    rs6000_define_or_undefine_macro (define_p, "__pred_all=0");
+    rs6000_define_or_undefine_macro (define_p, "__pred_any=1");
+    rs6000_define_or_undefine_macro (define_p, "__pred_upper=2");
+    rs6000_define_or_undefine_macro (define_p, "__pred_lower=3");
+
+    rs6000_define_or_undefine_macro (define_p, "__zv_select_eqh=	__builtin_lsp_zvselect_eqh");
+    rs6000_define_or_undefine_macro (define_p, "__zv_select_gths=	__builtin_lsp_zvselect_gths");
+    rs6000_define_or_undefine_macro (define_p, "__zv_select_gthu=	__builtin_lsp_zvselect_gthu");
+    rs6000_define_or_undefine_macro (define_p, "__zv_select_lths=	__builtin_lsp_zvselect_lths");
+    rs6000_define_or_undefine_macro (define_p, "__zv_select_lthu=	__builtin_lsp_zvselect_lthu");
+
+    rs6000_define_or_undefine_macro (define_p, "__zv_any_eqh(a, b)=	__builtin_lsp_zvcmpeqh (__pred_any, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_all_eqh(a, b)=	__builtin_lsp_zvcmpeqh (__pred_all, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_upper_eqh(a, b)=	__builtin_lsp_zvcmpeqh (__pred_upper, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_lower_eqh(a, b)=	__builtin_lsp_zvcmpeqh (__pred_lower, (a), (b))");
+
+    rs6000_define_or_undefine_macro (define_p, "__zv_any_gths(a, b)=	__builtin_lsp_zvcmpgths (__pred_any, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_all_gths(a, b)=	__builtin_lsp_zvcmpgths (__pred_all, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_upper_gths(a, b)=	__builtin_lsp_evcmpgths (__pred_upper, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_lower_gths(a, b)=	__builtin_lsp_evcmpgths (__pred_lower, (a), (b))");
+
+    rs6000_define_or_undefine_macro (define_p, "__zv_any_gthu(a, b)=	__builtin_lsp_zvcmpgthu (__pred_any, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_all_gthu(a, b)=	__builtin_lsp_zvcmpgthu (__pred_all, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_upper_gthu(a, b)=	__builtin_lsp_zvcmpgthu (__pred_upper, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_lower_gthu(a, b)=	__builtin_lsp_zvcmpgthu (__pred_lower, (a), (b))");
+
+    rs6000_define_or_undefine_macro (define_p, "__zv_any_lthu(a, b)=	__builtin_lsp_zvcmplthu (__pred_any, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_all_lthu(a, b)=	__builtin_lsp_zvcmplthu (__pred_all, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_upper_lthu(a, b)=	__builtin_lsp_zvcmplthu (__pred_upper, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_lower_lthu(a, b)=	__builtin_lsp_zvcmplthu (__pred_lower, (a), (b))");
+
+    rs6000_define_or_undefine_macro (define_p, "__zv_any_lths(a, b)=	__builtin_lsp_zevcmplths (__pred_any, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_all_lths(a, b)=	__builtin_lsp_zevcmplths (__pred_all, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_upper_lths(a, b)=	__builtin_lsp_zevcmplths (__pred_upper, (a), (b))");
+    rs6000_define_or_undefine_macro (define_p, "__zv_lower_lths(a, b)=	__builtin_lsp_zevcmplths (__pred_lower, (a), (b))");
+  }
   if ((bu_mask & RS6000_BTM_PAIRED) != 0)
     rs6000_define_or_undefine_macro (define_p, "__PAIRED__");
   if ((bu_mask & RS6000_BTM_CELL) != 0)
diff --git a/gcc/config/rs6000/rs6000.c b/gcc/config/rs6000/rs6000.c
index c217364..4a2bbe2 100644
--- a/gcc/config/rs6000/rs6000.c
+++ b/gcc/config/rs6000/rs6000.c
@@ -1020,10 +1020,12 @@ struct processor_costs ppca2_cost = {
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE) \
@@ -1044,6 +1046,9 @@ struct processor_costs ppca2_cost = {
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)  \
   { NAME, ICODE, MASK, ATTR },
 
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)  \
+  { NAME, ICODE, MASK, ATTR },
+
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)  \
   { NAME, ICODE, MASK, ATTR },
 
@@ -1056,6 +1061,9 @@ struct processor_costs ppca2_cost = {
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)  \
   { NAME, ICODE, MASK, ATTR },
 
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)  \
+  { NAME, ICODE, MASK, ATTR },
+
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)  \
   { NAME, ICODE, MASK, ATTR },
 
@@ -1077,10 +1085,12 @@ static const struct rs6000_builtin_info_type rs6000_builtin_info[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 /* Support for -mveclibabi=<xxx> to control which vector library to use.  */
@@ -1119,9 +1129,12 @@ static void rs6000_common_init_builtins (void);
 static void paired_init_builtins (void);
 static rtx paired_expand_predicate_builtin (enum insn_code, tree, rtx);
 static void spe_init_builtins (void);
+static void lsp_init_builtins (void);
 static void htm_init_builtins (void);
 static rtx spe_expand_predicate_builtin (enum insn_code, tree, rtx);
 static rtx spe_expand_evsel_builtin (enum insn_code, tree, rtx);
+static rtx lsp_expand_predicate_builtin (enum insn_code, tree, rtx);
+static rtx lsp_expand_evsel_builtin (enum insn_code, tree, rtx);
 static int rs6000_emit_int_cmove (rtx, rtx, rtx, rtx);
 static rs6000_stack_t *rs6000_stack_info (void);
 static void is_altivec_return_reg (rtx, void *);
@@ -1725,6 +1738,9 @@ rs6000_hard_regno_nregs_internal (int regno, enum machine_mode mode)
 		? UNITS_PER_VSX_WORD
 		: UNITS_PER_FP_WORD);
 
+  else if (TARGET_LSP)
+    reg_size = UNITS_PER_WORD;
+
   else if (SPE_SIMD_REGNO_P (regno) && TARGET_SPE && SPE_VECTOR_MODE (mode))
     reg_size = UNITS_PER_SPE_WORD;
 
@@ -1784,6 +1800,10 @@ rs6000_hard_regno_mode_ok (int regno, enum machine_mode mode)
 	}
     }
 
+  /* LSP takes 2 registers (even/odd) to hold 64bits */
+  if (TARGET_LSP && mode == DImode && (regno & 0x01) != 0)
+    return 0;
+
   /* The GPRs can hold any mode, but values bigger than one register
      cannot go past R31.  */
   if (INT_REGNO_P (regno))
@@ -3131,6 +3151,7 @@ rs6000_builtin_mask_calculate (void)
           | ((TARGET_ALTIVEC2)              ? RS6000_BTM_ALTIVEC2  : 0)
 	  | ((TARGET_VSX)		    ? RS6000_BTM_VSX	   : 0)
 	  | ((TARGET_SPE)		    ? RS6000_BTM_SPE	   : 0)
+	  | ((TARGET_LSP)		    ? RS6000_BTM_LSP	   : 0)
 	  | ((TARGET_PAIRED_FLOAT)	    ? RS6000_BTM_PAIRED	   : 0)
 	  | ((TARGET_FRE)		    ? RS6000_BTM_FRE	   : 0)
 	  | ((TARGET_FRES)		    ? RS6000_BTM_FRES	   : 0)
@@ -11635,10 +11656,12 @@ def_builtin (const char *name, tree type, enum rs6000_builtins code)
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
@@ -11649,10 +11672,12 @@ def_builtin (const char *name, tree type, enum rs6000_builtins code)
 #define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 static const struct builtin_description bdesc_3arg[] =
@@ -11668,10 +11693,12 @@ static const struct builtin_description bdesc_3arg[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
@@ -11682,10 +11709,12 @@ static const struct builtin_description bdesc_3arg[] =
   { MASK, ICODE, NAME, ENUM },
 
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 static const struct builtin_description bdesc_dst[] =
@@ -11701,10 +11730,12 @@ static const struct builtin_description bdesc_dst[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
@@ -11715,10 +11746,12 @@ static const struct builtin_description bdesc_dst[] =
 #define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 static const struct builtin_description bdesc_2arg[] =
@@ -11732,10 +11765,12 @@ static const struct builtin_description bdesc_2arg[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
@@ -11744,12 +11779,14 @@ static const struct builtin_description bdesc_2arg[] =
 #define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE) \
   { MASK, ICODE, NAME, ENUM },
 
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 /* AltiVec predicates.  */
@@ -11766,10 +11803,12 @@ static const struct builtin_description bdesc_altivec_preds[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
@@ -11778,12 +11817,14 @@ static const struct builtin_description bdesc_altivec_preds[] =
 #define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE) \
   { MASK, ICODE, NAME, ENUM },
 
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 static const struct builtin_description bdesc_spe_predicates[] =
@@ -11798,10 +11839,12 @@ static const struct builtin_description bdesc_spe_predicates[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
@@ -11812,10 +11855,12 @@ static const struct builtin_description bdesc_spe_predicates[] =
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE) \
   { MASK, ICODE, NAME, ENUM },
 
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 static const struct builtin_description bdesc_spe_evsel[] =
@@ -11830,10 +11875,12 @@ static const struct builtin_description bdesc_spe_evsel[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
@@ -11842,12 +11889,14 @@ static const struct builtin_description bdesc_spe_evsel[] =
 #define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE) \
   { MASK, ICODE, NAME, ENUM },
 
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 static const struct builtin_description bdesc_paired_preds[] =
@@ -11863,10 +11912,12 @@ static const struct builtin_description bdesc_paired_preds[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
@@ -11877,10 +11928,12 @@ static const struct builtin_description bdesc_paired_preds[] =
 
 #define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 static const struct builtin_description bdesc_abs[] =
@@ -11897,10 +11950,12 @@ static const struct builtin_description bdesc_abs[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE) \
@@ -11911,10 +11966,12 @@ static const struct builtin_description bdesc_abs[] =
 #define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 static const struct builtin_description bdesc_1arg[] =
@@ -11929,10 +11986,12 @@ static const struct builtin_description bdesc_1arg[] =
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
@@ -11941,12 +12000,14 @@ static const struct builtin_description bdesc_1arg[] =
 #define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE) \
   { MASK, ICODE, NAME, ENUM },
 
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
 
 static const struct builtin_description bdesc_htm[] =
@@ -11954,16 +12015,89 @@ static const struct builtin_description bdesc_htm[] =
 #include "rs6000-builtin.def"
 };
 
+/* LSP evsel predicates.  */
 #undef RS6000_BUILTIN_1
 #undef RS6000_BUILTIN_2
 #undef RS6000_BUILTIN_3
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
+#undef RS6000_BUILTIN_X
+
+#define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_2(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_3(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE) \
+  { MASK, ICODE, NAME, ENUM },
+
+#define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
+
+static const struct builtin_description bdesc_lsp_evsel[] =
+{
+#include "rs6000-builtin.def"
+};
+
+/* LSP predicates.  */
+#undef RS6000_BUILTIN_1
+#undef RS6000_BUILTIN_2
+#undef RS6000_BUILTIN_3
+#undef RS6000_BUILTIN_A
+#undef RS6000_BUILTIN_D
+#undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
+#undef RS6000_BUILTIN_H
+#undef RS6000_BUILTIN_P
+#undef RS6000_BUILTIN_Q
+#undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
+#undef RS6000_BUILTIN_X
+
+#define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_2(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_3(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE)
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE) \
+  { MASK, ICODE, NAME, ENUM },
+#define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE)
+
+static const struct builtin_description bdesc_lsp_predicates[] =
+{
+#include "rs6000-builtin.def"
+};
+
+#undef RS6000_BUILTIN_1
+#undef RS6000_BUILTIN_2
+#undef RS6000_BUILTIN_3
+#undef RS6000_BUILTIN_A
+#undef RS6000_BUILTIN_D
+#undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
+#undef RS6000_BUILTIN_H
+#undef RS6000_BUILTIN_P
+#undef RS6000_BUILTIN_Q
+#undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 
 /* Return true if a builtin function is overloaded.  */
 bool
@@ -12060,7 +12194,9 @@ rs6000_expand_unop_builtin (enum insn_code icode, tree exp, rtx target)
       || icode == CODE_FOR_altivec_vspltish
       || icode == CODE_FOR_altivec_vspltisw
       || icode == CODE_FOR_spe_evsplatfi
-      || icode == CODE_FOR_spe_evsplati)
+      || icode == CODE_FOR_spe_evsplati
+      || icode == CODE_FOR_lsp_zvsplatfih
+      || icode == CODE_FOR_lsp_zvsplatih)
     {
       /* Only allow 5-bit *signed* literals.  */
       if (GET_CODE (op0) != CONST_INT
@@ -12163,7 +12299,27 @@ rs6000_expand_binop_builtin (enum insn_code icode, tree exp, rtx target)
       || icode == CODE_FOR_spe_evslwi
       || icode == CODE_FOR_spe_evsrwis
       || icode == CODE_FOR_spe_evsubifw
-      || icode == CODE_FOR_spe_evsrwiu)
+      || icode == CODE_FOR_spe_evsrwiu
+      || icode == CODE_FOR_lsp_zvaddih
+      || icode == CODE_FOR_lsp_zvsubifh
+      || icode == CODE_FOR_lsp_zldd
+      || icode == CODE_FOR_lsp_zldh
+      || icode == CODE_FOR_lsp_zldw
+      || icode == CODE_FOR_lsp_zlwgsfd
+      || icode == CODE_FOR_lsp_zlwh
+      || icode == CODE_FOR_lsp_zlwhed
+      || icode == CODE_FOR_lsp_zlwhgwsfd
+      || icode == CODE_FOR_lsp_zlwhosd
+      || icode == CODE_FOR_lsp_zlwhoud
+      || icode == CODE_FOR_lsp_zlwhsplatd
+      || icode == CODE_FOR_lsp_zlwhsplatwd
+      || icode == CODE_FOR_lsp_zlww
+      || icode == CODE_FOR_lsp_zlwwosd
+      || icode == CODE_FOR_lsp_zlhgwsf
+      || icode == CODE_FOR_lsp_zlhhe
+      || icode == CODE_FOR_lsp_zlhhos
+      || icode == CODE_FOR_lsp_zlhhou
+      || icode == CODE_FOR_lsp_zlhhsplat)
     {
       /* Only allow 5-bit unsigned literals.  */
       STRIP_NOPS (arg1);
@@ -12175,6 +12331,25 @@ rs6000_expand_binop_builtin (enum insn_code icode, tree exp, rtx target)
 	}
     }
 
+  if (icode == CODE_FOR_lsp_zvrlhi
+      || icode == CODE_FOR_lsp_zvslhi
+      || icode == CODE_FOR_lsp_zvslhiss
+      || icode == CODE_FOR_lsp_zvslhius
+      || icode == CODE_FOR_lsp_zslwiss
+      || icode == CODE_FOR_lsp_zslwius
+      || icode == CODE_FOR_lsp_zvsrhis
+      || icode == CODE_FOR_lsp_zvsrhiu)
+    {
+      /* Only allow 4-bit unsigned literals.  */
+      STRIP_NOPS (arg1);
+      if (TREE_CODE (arg1) != INTEGER_CST
+	  || TREE_INT_CST_LOW (arg1) & ~0x0f)
+	{
+	  error ("argument 2 must be a 4-bit unsigned literal");
+	  return const0_rtx;
+	}
+    }
+
   if (target == 0
       || GET_MODE (target) != tmode
       || ! (*insn_data[icode].operand[0].predicate) (target, tmode))
@@ -12488,6 +12663,57 @@ spe_expand_stv_builtin (enum insn_code icode, tree exp)
 }
 
 static rtx
+lsp_expand_st_builtin (enum insn_code icode, tree exp)
+{
+  tree arg0 = CALL_EXPR_ARG (exp, 0);
+  tree arg1 = CALL_EXPR_ARG (exp, 1);
+  tree arg2 = CALL_EXPR_ARG (exp, 2);
+  rtx op0 = expand_normal (arg0);
+  rtx op1 = expand_normal (arg1);
+  rtx op2 = expand_normal (arg2);
+  rtx pat;
+  enum machine_mode mode0 = insn_data[icode].operand[0].mode;
+  enum machine_mode mode1 = insn_data[icode].operand[1].mode;
+  enum machine_mode mode2 = insn_data[icode].operand[2].mode;
+
+  if (icode == CODE_FOR_lsp_zstdd
+      || icode == CODE_FOR_lsp_zstdh
+      || icode == CODE_FOR_lsp_zstdw
+      || icode == CODE_FOR_lsp_zsthe
+      || icode == CODE_FOR_lsp_zstho
+      || icode == CODE_FOR_lsp_zstwh
+      || icode == CODE_FOR_lsp_zstwhed
+      || icode == CODE_FOR_lsp_zstwhod
+      || icode == CODE_FOR_lsp_zstww)
+    {
+      if (TREE_CODE (arg2) != INTEGER_CST
+	  || TREE_INT_CST_LOW (arg2) & ~0x1f)
+	{
+	  error ("argument 3 must be a 5-bit unsigned literal");
+	  return const0_rtx;
+	}
+    }
+  
+  /* Invalid arguments.  Bail before doing anything stoopid!  */
+  if (arg0 == error_mark_node
+      || arg1 == error_mark_node
+      || arg2 == error_mark_node)
+    return const0_rtx;
+
+  if (! (*insn_data[icode].operand[2].predicate) (op0, mode2))
+    op0 = copy_to_mode_reg (mode2, op0);
+  if (! (*insn_data[icode].operand[0].predicate) (op1, mode0))
+    op1 = copy_to_mode_reg (mode0, op1);
+  if (! (*insn_data[icode].operand[1].predicate) (op2, mode1))
+    op2 = copy_to_mode_reg (mode1, op2);
+
+  pat = GEN_FCN (icode) (op1, op2, op0);
+  if (pat)
+    emit_insn (pat);
+  return NULL_RTX;
+}
+
+static rtx
 paired_expand_stv_builtin (enum insn_code icode, tree exp)
 {
   tree arg0 = CALL_EXPR_ARG (exp, 0);
@@ -12950,6 +13176,18 @@ rs6000_expand_ternop_builtin (enum insn_code icode, tree exp, rtx target)
 	  return const0_rtx;
 	}
     }
+  else if (icode == CODE_FOR_lsp_zxtrw)
+    {
+      /* Only allow 2-bit unsigned literals.  */
+      STRIP_NOPS (arg2);
+      if (TREE_CODE (arg2) != INTEGER_CST
+	  || TREE_INT_CST_LOW (arg2) & ~0x03
+	  || TREE_INT_CST_LOW (arg2) == 0)
+	{
+	  error ("argument 3 must be in the range 1..3");
+	  return const0_rtx;
+	}
+    }
 
   if (target == 0
       || GET_MODE (target) != tmode
@@ -13816,18 +14054,68 @@ spe_expand_builtin (tree exp, rtx target, bool *expandedp)
 }
 
 static rtx
-lsp_expand_builtin (tree exp ATTRIBUTE_UNUSED, rtx target ATTRIBUTE_UNUSED, bool *expandedp)
+lsp_expand_builtin (tree exp, rtx target, bool *expandedp)
 {
-  //tree fndecl = TREE_OPERAND (CALL_EXPR_FN (exp), 0);
-  //tree arg1, arg0;
-  //enum rs6000_builtins fcode = (enum rs6000_builtins) DECL_FUNCTION_CODE (fndecl);
-  //enum insn_code icode;
-  //enum machine_mode tmode, mode0;
-  //rtx pat, op0;
-  //const struct builtin_description *d;
-  //size_t i;
+  tree fndecl = TREE_OPERAND (CALL_EXPR_FN (exp), 0);
+  enum rs6000_builtins fcode = (enum rs6000_builtins) DECL_FUNCTION_CODE (fndecl);
+  const struct builtin_description *d;
+  size_t i;
 
   *expandedp = true;
+
+  switch (fcode)
+    {
+    case LSP_BUILTIN_ZSTDD:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstdd, exp);
+    case LSP_BUILTIN_ZSTDDX:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstddx, exp);
+    case LSP_BUILTIN_ZSTDH:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstdh, exp);
+    case LSP_BUILTIN_ZSTDHX:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstdhx, exp);
+    case LSP_BUILTIN_ZSTDW:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstdw, exp);
+    case LSP_BUILTIN_ZSTDWX:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstdwx, exp);
+    case LSP_BUILTIN_ZSTHE:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zsthe, exp);
+    case LSP_BUILTIN_ZSTHEX:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zsthex, exp);
+    case LSP_BUILTIN_ZSTHO:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstho, exp);
+    case LSP_BUILTIN_ZSTHOX:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zsthox, exp);
+    case LSP_BUILTIN_ZSTWH:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstwh, exp);
+    case LSP_BUILTIN_ZSTWHX:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstwhx, exp);
+    case LSP_BUILTIN_ZSTWHED:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstwhed, exp);
+    case LSP_BUILTIN_ZSTWHEDX:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstwhedx, exp);
+    case LSP_BUILTIN_ZSTWHOD:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstwhod, exp);
+    case LSP_BUILTIN_ZSTWHODX:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstwhodx, exp);
+    case LSP_BUILTIN_ZSTWW:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstww, exp);
+    case LSP_BUILTIN_ZSTWWX:
+      return lsp_expand_st_builtin (CODE_FOR_lsp_zstwwx, exp);
+    default:
+      break;
+    }
+
+  d = bdesc_lsp_predicates;
+  for (i = 0; i < ARRAY_SIZE (bdesc_lsp_predicates); ++i, ++d)
+    if (d->code == fcode)
+      return lsp_expand_predicate_builtin (d->icode, exp, target);
+
+  d = bdesc_lsp_evsel;
+  for (i = 0; i < ARRAY_SIZE (bdesc_lsp_evsel); ++i, ++d)
+    if (d->code == fcode)
+      return lsp_expand_evsel_builtin (d->icode, exp, target);    
+
+  *expandedp = false;
   return NULL_RTX;
 }
 
@@ -14061,6 +14349,154 @@ spe_expand_evsel_builtin (enum insn_code icode, tree exp, rtx target)
   return target;
 }
 
+static rtx
+lsp_expand_predicate_builtin (enum insn_code icode, tree exp, rtx target)
+{
+  rtx pat, scratch, tmp;
+  tree form = CALL_EXPR_ARG (exp, 0);
+  tree arg0 = CALL_EXPR_ARG (exp, 1);
+  tree arg1 = CALL_EXPR_ARG (exp, 2);
+  rtx op0 = expand_normal (arg0);
+  rtx op1 = expand_normal (arg1);
+  enum machine_mode mode0 = insn_data[icode].operand[1].mode;
+  enum machine_mode mode1 = insn_data[icode].operand[2].mode;
+  int form_int;
+  enum rtx_code code;
+
+  if (TREE_CODE (form) != INTEGER_CST)
+    {
+      error ("argument 1 of __builtin_lsp_predicate must be a constant");
+      return const0_rtx;
+    }
+  else
+    form_int = TREE_INT_CST_LOW (form);
+
+  gcc_assert (mode0 == mode1);
+
+  if (arg0 == error_mark_node || arg1 == error_mark_node)
+    return const0_rtx;
+
+  if (target == 0
+      || GET_MODE (target) != SImode
+      || ! (*insn_data[icode].operand[0].predicate) (target, SImode))
+    target = gen_reg_rtx (SImode);
+
+  if (! (*insn_data[icode].operand[1].predicate) (op0, mode0))
+    op0 = copy_to_mode_reg (mode0, op0);
+  if (! (*insn_data[icode].operand[2].predicate) (op1, mode1))
+    op1 = copy_to_mode_reg (mode1, op1);
+
+  scratch = gen_reg_rtx (CCmode);
+
+  pat = GEN_FCN (icode) (scratch, op0, op1);
+  if (! pat)
+    return const0_rtx;
+  emit_insn (pat);
+
+  /* There are 4 variants for each predicate: _any_, _all_, _upper_,
+     _lower_.  We use one compare, but look in different bits of the
+     CR for each variant.
+
+     There are 2 elements in each LSP simd type (upper/lower).  The CR
+     bits are set as follows:
+
+     BIT0  | BIT 1  | BIT 2   | BIT 3
+     U     |   L    | (U | L) | (U & L)
+
+     So, for an "all" relationship, BIT 3 would be set.
+     For an "any" relationship, BIT 2 would be set.  Etc.
+
+     Following traditional nomenclature, these bits map to:
+
+     BIT0  | BIT 1  | BIT 2   | BIT 3
+     LT    | GT     | EQ      | OV
+
+     Later, we will generate rtl to look in the LT/EQ/EQ/OV bits.
+  */
+
+  switch (form_int)
+    {
+      /* All variant.  OV bit.  */
+    case 0:
+      /* We need to get to the OV bit, which is the ORDERED bit.  We
+         could generate (ordered:SI (reg:CC xx) (const_int 0)), but
+         that's ugly and will make validate_condition_mode die.
+         So let's just use another pattern.  */
+      emit_insn (gen_move_from_CR_ov_bit (target, scratch));
+      return target;
+      /* Any variant.  EQ bit.  */
+    case 1:
+      code = EQ;
+      break;
+      /* Upper variant.  LT bit.  */
+    case 2:
+      code = LT;
+      break;
+      /* Lower variant.  GT bit.  */
+    case 3:
+      code = GT;
+      break;
+    default:
+      error ("argument 1 of __builtin_lsp_predicate is out of range");
+      return const0_rtx;
+    }
+
+  tmp = gen_rtx_fmt_ee (code, SImode, scratch, const0_rtx);
+  emit_move_insn (target, tmp);
+
+  return target;
+}
+
+static rtx
+lsp_expand_evsel_builtin (enum insn_code icode, tree exp, rtx target)
+{
+  rtx pat, cr0;
+  tree arg0 = CALL_EXPR_ARG (exp, 0);
+  tree arg1 = CALL_EXPR_ARG (exp, 1);
+  tree arg2 = CALL_EXPR_ARG (exp, 2);
+  tree arg3 = CALL_EXPR_ARG (exp, 3);
+  rtx op0 = expand_normal (arg0);
+  rtx op1 = expand_normal (arg1);
+  rtx op2 = expand_normal (arg2);
+  rtx op3 = expand_normal (arg3);
+  enum machine_mode mode0 = insn_data[icode].operand[1].mode;
+  enum machine_mode mode1 = insn_data[icode].operand[2].mode;
+
+  gcc_assert (mode0 == mode1);
+
+  if (arg0 == error_mark_node || arg1 == error_mark_node
+      || arg2 == error_mark_node || arg3 == error_mark_node)
+    return const0_rtx;
+
+  if (target == 0
+      || GET_MODE (target) != mode0
+      || ! (*insn_data[icode].operand[0].predicate) (target, mode0))
+    target = gen_reg_rtx (mode0);
+
+  if (! (*insn_data[icode].operand[1].predicate) (op0, mode0))
+    op0 = copy_to_mode_reg (mode0, op0);
+  if (! (*insn_data[icode].operand[1].predicate) (op1, mode1))
+    op1 = copy_to_mode_reg (mode0, op1);
+  if (! (*insn_data[icode].operand[1].predicate) (op2, mode1))
+    op2 = copy_to_mode_reg (mode0, op2);
+  if (! (*insn_data[icode].operand[1].predicate) (op3, mode1))
+    op3 = copy_to_mode_reg (mode0, op3);
+
+  /* Generate the compare.  */
+  /* zvselh uses cr0 */
+  cr0 = gen_rtx_REG (CCmode, CR0_REGNO);
+  
+  pat = GEN_FCN (icode) (cr0, op0, op1);
+  if (! pat)
+    return const0_rtx;
+  emit_insn (pat);
+
+  /* zvselh uses cr0, RA must match */
+  emit_insn (gen_lsp_zvselh_dot (target, op2, op3, cr0));
+
+  return target;
+}
+
 /* Raise an error message for a builtin function that is called without the
    appropriate target options being set.  */
 
@@ -14577,7 +15013,7 @@ rs6000_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,
     }
   if (TARGET_LSP)
     {
-//      ret = lsp_expand_builtin (exp, target, &success);
+      ret = lsp_expand_builtin (exp, target, &success);
 
       if (success)
 	return ret;
@@ -14835,6 +15271,8 @@ rs6000_init_builtins (void)
     altivec_init_builtins ();
   if (TARGET_HTM)
     htm_init_builtins ();
+  if (TARGET_LSP)
+    lsp_init_builtins ();
 
   if (TARGET_EXTRA_BUILTINS || TARGET_LSP || TARGET_SPE || TARGET_PAIRED_FLOAT)
     rs6000_common_init_builtins ();
@@ -15097,6 +15535,99 @@ spe_init_builtins (void)
 }
 
 static void
+lsp_init_builtins (void)
+{
+  const struct builtin_description *d;
+  size_t i;
+  
+  tree void_ftype_d64_p32_int
+    = build_function_type_list (void_type_node,
+                                intDI_type_node,
+                                intSI_type_node,
+                                integer_type_node,
+                                NULL_TREE);
+  tree void_ftype_d32_p32_int
+    = build_function_type_list (void_type_node,
+                                intSI_type_node,
+                                intSI_type_node,
+                                integer_type_node,
+                                NULL_TREE);
+
+  tree int_ftype_int_si_si
+    = build_function_type_list (integer_type_node,
+                                integer_type_node,
+                                intSI_type_node,
+                                intSI_type_node,
+                                NULL_TREE);
+
+  tree si_ftype_4_si
+    = build_function_type_list (intSI_type_node,
+                                intSI_type_node,
+                                intSI_type_node,
+                                intSI_type_node,
+                                intSI_type_node,
+                                NULL_TREE);
+
+  /* Initialize irregular LSP builtins.  */
+
+  def_builtin ("__builtin_lsp_zstdd",     void_ftype_d64_p32_int, LSP_BUILTIN_ZSTDD);
+  def_builtin ("__builtin_lsp_zstddx",    void_ftype_d64_p32_int, LSP_BUILTIN_ZSTDDX);
+  def_builtin ("__builtin_lsp_zstdh",     void_ftype_d64_p32_int, LSP_BUILTIN_ZSTDH);
+  def_builtin ("__builtin_lsp_zstdhx",    void_ftype_d64_p32_int, LSP_BUILTIN_ZSTDHX);
+  def_builtin ("__builtin_lsp_zstdw",     void_ftype_d64_p32_int, LSP_BUILTIN_ZSTDW);
+  def_builtin ("__builtin_lsp_zstdwx",    void_ftype_d64_p32_int, LSP_BUILTIN_ZSTDWX);
+  def_builtin ("__builtin_lsp_zsthe",     void_ftype_d32_p32_int, LSP_BUILTIN_ZSTHE);
+  def_builtin ("__builtin_lsp_zsthex",    void_ftype_d32_p32_int, LSP_BUILTIN_ZSTHEX);
+  def_builtin ("__builtin_lsp_zstho",     void_ftype_d32_p32_int, LSP_BUILTIN_ZSTHO);
+  def_builtin ("__builtin_lsp_zsthox",    void_ftype_d32_p32_int, LSP_BUILTIN_ZSTHOX);
+  def_builtin ("__builtin_lsp_zstwh",     void_ftype_d32_p32_int, LSP_BUILTIN_ZSTWH);
+  def_builtin ("__builtin_lsp_zstwhx",    void_ftype_d32_p32_int, LSP_BUILTIN_ZSTWHX);
+  def_builtin ("__builtin_lsp_zstwhed",   void_ftype_d64_p32_int, LSP_BUILTIN_ZSTWHED);
+  def_builtin ("__builtin_lsp_zstwhedx",  void_ftype_d64_p32_int, LSP_BUILTIN_ZSTWHEDX);
+  def_builtin ("__builtin_lsp_zstwhod",   void_ftype_d64_p32_int, LSP_BUILTIN_ZSTWHOD);
+  def_builtin ("__builtin_lsp_zstwhodx",  void_ftype_d64_p32_int, LSP_BUILTIN_ZSTWHODX);
+  def_builtin ("__builtin_lsp_zstww",     void_ftype_d32_p32_int, LSP_BUILTIN_ZSTWW);
+  def_builtin ("__builtin_lsp_zstwwx",    void_ftype_d32_p32_int, LSP_BUILTIN_ZSTWWX);
+
+    /* Predicates.  */
+  d = bdesc_lsp_predicates;
+  for (i = 0; i < ARRAY_SIZE (bdesc_lsp_predicates); ++i, d++)
+    {
+      tree type;
+
+      switch (insn_data[d->icode].operand[1].mode)
+        {
+        case SImode:
+          type = int_ftype_int_si_si;
+          break;
+        default:
+          gcc_unreachable ();
+        }
+
+      def_builtin (d->name, type, d->code);
+    }
+
+  /* Evsel predicates.  */
+  d = bdesc_lsp_evsel;
+  for (i = 0; i < ARRAY_SIZE (bdesc_lsp_evsel); ++i, d++)
+    {
+      tree type;
+
+      switch (insn_data[d->icode].operand[1].mode)
+        {
+        case SImode:
+          type = si_ftype_4_si;
+          break;
+        default:
+          gcc_unreachable ();
+        }
+
+      def_builtin (d->name, type, d->code);
+    }
+
+}
+
+static void
 paired_init_builtins (void)
 {
   const struct builtin_description *d;
diff --git a/gcc/config/rs6000/rs6000.h b/gcc/config/rs6000/rs6000.h
index d16bee5..524efb1 100644
--- a/gcc/config/rs6000/rs6000.h
+++ b/gcc/config/rs6000/rs6000.h
@@ -591,6 +591,7 @@ extern int rs6000_vector_align[];
 #define MASK_STRICT_ALIGN		OPTION_MASK_STRICT_ALIGN
 #define MASK_STRING			OPTION_MASK_STRING
 #define MASK_UPDATE			OPTION_MASK_UPDATE
+#define MASK_LSP			OPTION_MASK_LSP
 #define MASK_VLE			OPTION_MASK_VLE
 #define MASK_VSX			OPTION_MASK_VSX
 #define MASK_VSX_TIMODE			OPTION_MASK_VSX_TIMODE
@@ -630,7 +631,7 @@ extern int rs6000_vector_align[];
    the compiler for those builtins, and those machines don't support altivec or
    VSX.  */
 
-#define TARGET_EXTRA_BUILTINS	(!TARGET_SPE && !TARGET_PAIRED_FLOAT	 \
+#define TARGET_EXTRA_BUILTINS	(!TARGET_LSP && !TARGET_SPE && !TARGET_PAIRED_FLOAT	 \
 				 && ((TARGET_POWERPC64			 \
 				      || TARGET_PPC_GPOPT /* 970/power4 */ \
 				      || TARGET_POPCNTB	  /* ISA 2.02 */ \
@@ -2650,6 +2651,7 @@ extern int vle_code;
 #define RS6000_BTC_ABS		0x00000005	/* Altivec/VSX ABS function.  */
 #define RS6000_BTC_EVSEL	0x00000006	/* SPE EVSEL function.  */
 #define RS6000_BTC_DST		0x00000007	/* Altivec DST function.  */
+#define RS6000_BTC_QUAD		0x00000008	/* LSP quad function.  */
 #define RS6000_BTC_TYPE_MASK	0x0000000f	/* Mask to isolate types */
 
 #define RS6000_BTC_MISC		0x00000000	/* No special attributes.  */
@@ -2691,6 +2693,7 @@ extern int vle_code;
 #define RS6000_BTM_HARD_FLOAT	MASK_SOFT_FLOAT	/* Hardware floating point.  */
 #define RS6000_BTM_LDBL128	MASK_MULTIPLE	/* 128-bit long double.  */
 #define RS6000_BTM_ISEL		MASK_ISEL	/* Target supports isel instruction */
+#define RS6000_BTM_LSP		MASK_LSP	/* Target supports lsp instruction */
 
 #define RS6000_BTM_COMMON	(RS6000_BTM_ALTIVEC			\
 				 | RS6000_BTM_ALTIVEC2			\
@@ -2717,10 +2720,12 @@ extern int vle_code;
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 #define RS6000_BUILTIN_1(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
@@ -2729,10 +2734,12 @@ extern int vle_code;
 #define RS6000_BUILTIN_A(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
 #define RS6000_BUILTIN_D(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
 #define RS6000_BUILTIN_E(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
+#define RS6000_BUILTIN_EL(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
 #define RS6000_BUILTIN_H(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
 #define RS6000_BUILTIN_P(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
 #define RS6000_BUILTIN_Q(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
 #define RS6000_BUILTIN_S(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
+#define RS6000_BUILTIN_SL(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
 #define RS6000_BUILTIN_X(ENUM, NAME, MASK, ATTR, ICODE) ENUM,
 
 enum rs6000_builtins
@@ -2748,10 +2755,12 @@ enum rs6000_builtins
 #undef RS6000_BUILTIN_A
 #undef RS6000_BUILTIN_D
 #undef RS6000_BUILTIN_E
+#undef RS6000_BUILTIN_EL
 #undef RS6000_BUILTIN_H
 #undef RS6000_BUILTIN_P
 #undef RS6000_BUILTIN_Q
 #undef RS6000_BUILTIN_S
+#undef RS6000_BUILTIN_SL
 #undef RS6000_BUILTIN_X
 
 enum rs6000_builtin_type_index
diff --git a/gcc/config/rs6000/rs6000.md b/gcc/config/rs6000/rs6000.md
index 470484c..2aa460c 100644
--- a/gcc/config/rs6000/rs6000.md
+++ b/gcc/config/rs6000/rs6000.md
@@ -244,6 +244,8 @@
 
 (include "darwin.md")
 
+(include "lsp.md")
+
 
 ;; Mode iterators
 
diff --git a/gcc/config/rs6000/rs6000.opt b/gcc/config/rs6000/rs6000.opt
index 90fb016..694f149 100644
--- a/gcc/config/rs6000/rs6000.opt
+++ b/gcc/config/rs6000/rs6000.opt
@@ -369,6 +369,10 @@ mspe
 Target Var(rs6000_spe) Save
 Generate SPE SIMD instructions on E500
 
+mlsp
+Target Report Mask(LSP) Var(rs6000_isa_flags)
+Generate LSP SIMD instructions on E200
+
 mslow-mfocr
 Target Report Var(TARGET_SLOW_MFOCR)
 Generate slow mfocr instructions
diff --git a/gcc/testsuite/gcc.target/powerpc/CMPE200GCC-47.c b/gcc/testsuite/gcc.target/powerpc/CMPE200GCC-47.c
new file mode 100644
index 0000000..8a39a84
--- /dev/null
+++ b/gcc/testsuite/gcc.target/powerpc/CMPE200GCC-47.c
@@ -0,0 +1,217 @@
+/* { dg-do compile { target { powerpc-*-*vle } } } */
+/* { dg-skip-if "not a VLE target" { !powerpc-*-*vle } { "*" } { "" } } */
+/* { dg-options "-O1 -mvle -mlsp" } */
+
+# 1 "CMPE200GCC-47.c"
+# 1 "<built-in>"
+# 1 "<command-line>"
+# 1 "CMPE200GCC-47.c"
+
+
+
+
+
+# 1 "lsp.h" 1
+# 28 "lsp.h"
+# 1 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/lib/gcc/powerpc-eabivle/4.9.4/include/stdint.h" 1 3 4
+# 9 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/lib/gcc/powerpc-eabivle/4.9.4/include/stdint.h" 3 4
+# 1 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 1 3 4
+# 12 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 3 4
+# 1 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 1 3 4
+
+
+
+
+
+
+
+# 1 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/sys/features.h" 1 3 4
+# 9 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 2 3 4
+# 27 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 3 4
+typedef signed char __int8_t;
+
+typedef unsigned char __uint8_t;
+# 41 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 3 4
+typedef short int __int16_t;
+
+typedef short unsigned int __uint16_t;
+# 63 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 3 4
+typedef long int __int32_t;
+
+typedef long unsigned int __uint32_t;
+# 89 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 3 4
+typedef long long int __int64_t;
+
+typedef long long unsigned int __uint64_t;
+# 120 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 3 4
+typedef signed char __int_least8_t;
+
+typedef unsigned char __uint_least8_t;
+# 146 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 3 4
+typedef short int __int_least16_t;
+
+typedef short unsigned int __uint_least16_t;
+# 168 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 3 4
+typedef long int __int_least32_t;
+
+typedef long unsigned int __uint_least32_t;
+# 186 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 3 4
+typedef long long int __int_least64_t;
+
+typedef long long unsigned int __uint_least64_t;
+# 200 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/machine/_default_types.h" 3 4
+typedef int __intptr_t;
+
+typedef unsigned int __uintptr_t;
+# 13 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 2 3 4
+# 1 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/sys/_intsup.h" 1 3 4
+# 14 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 2 3 4
+
+
+
+
+
+
+typedef __int8_t int8_t ;
+typedef __uint8_t uint8_t ;
+
+
+
+
+typedef __int_least8_t int_least8_t;
+typedef __uint_least8_t uint_least8_t;
+
+
+
+
+typedef __int16_t int16_t ;
+typedef __uint16_t uint16_t ;
+
+
+
+
+typedef __int_least16_t int_least16_t;
+typedef __uint_least16_t uint_least16_t;
+
+
+
+
+typedef __int32_t int32_t ;
+typedef __uint32_t uint32_t ;
+
+
+
+
+typedef __int_least32_t int_least32_t;
+typedef __uint_least32_t uint_least32_t;
+
+
+
+
+typedef __int64_t int64_t ;
+typedef __uint64_t uint64_t ;
+
+
+
+
+typedef __int_least64_t int_least64_t;
+typedef __uint_least64_t uint_least64_t;
+# 74 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 3 4
+  typedef int int_fast8_t;
+  typedef unsigned int uint_fast8_t;
+# 84 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 3 4
+  typedef int int_fast16_t;
+  typedef unsigned int uint_fast16_t;
+# 94 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 3 4
+  typedef int int_fast32_t;
+  typedef unsigned int uint_fast32_t;
+# 104 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 3 4
+  typedef long long int int_fast64_t;
+  typedef long long unsigned int uint_fast64_t;
+# 153 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 3 4
+  typedef long long int intmax_t;
+# 162 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/powerpc-eabivle/include/stdint.h" 3 4
+  typedef long long unsigned int uintmax_t;
+
+
+
+
+
+
+typedef __intptr_t intptr_t;
+typedef __uintptr_t uintptr_t;
+# 10 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/lib/gcc/powerpc-eabivle/4.9.4/include/stdint.h" 2 3 4
+# 29 "lsp.h" 2
+# 1 "/local/edmar/build_area/opt/freescale/gcc-4.9.4-Ee200-eabivle/i686-linux/lib/gcc/powerpc-eabivle/4.9.4/include/stdbool.h" 1 3 4
+# 30 "lsp.h" 2
+# 58 "lsp.h"
+typedef uint16_t __lsp16_16__;
+typedef uint32_t __lsp32_32__;
+typedef uint32_t __lsp32_16__;
+typedef uint64_t __lsp64_64__;
+typedef uint64_t __lsp64_32__;
+
+
+typedef __lsp16_16__ __lsp16_s16__;
+typedef __lsp32_32__ __lsp32_s32__;
+typedef __lsp32_16__ __lsp32_s16__;
+typedef __lsp64_64__ __lsp64_s64__;
+typedef __lsp64_32__ __lsp64_s32__;
+typedef __lsp16_16__ __lsp16_u16__;
+typedef __lsp32_32__ __lsp32_u32__;
+typedef __lsp32_16__ __lsp32_u16__;
+typedef __lsp64_64__ __lsp64_u64__;
+typedef __lsp64_32__ __lsp64_u32__;
+typedef __lsp16_16__ __lsp16_uf16__;
+typedef __lsp32_32__ __lsp32_uf32__;
+typedef __lsp32_16__ __lsp32_uf16__;
+typedef __lsp16_16__ __lsp16_sf16__;
+typedef __lsp32_32__ __lsp32_sf32__;
+typedef __lsp32_16__ __lsp32_sf16__;
+typedef __lsp32_32__ __lsp32_9_23__;
+typedef __lsp64_32__ __lsp64_9_23__;
+typedef __lsp64_64__ __lsp64_33_31__;
+typedef __lsp64_64__ __lsp64_17_47__;
+
+
+typedef uint8_t __lsp5_uimm__;
+typedef uint8_t __lsp4_uimm__;
+typedef int8_t __lsp5_simm__;
+typedef uint8_t __lsp2_offset__;
+
+
+typedef uint32_t __lsp4_crd__;
+
+
+
+
+typedef uint8_t __lsp3_cmpsel__;
+# 108 "lsp.h"
+typedef uint8_t __lsp2_selmode__;
+# 117 "lsp.h"
+static inline __lsp64_32__ __lsp_create_64_32(__lsp32_32__ upper, __lsp32_32__ lower)
+    { return ((((__lsp64_32__)upper) << 32) | (((__lsp64_32__)lower) & 0xFFFFFFFF)); }
+static inline __lsp32_16__ __lsp_create_32_16(__lsp16_16__ upper, __lsp16_16__ lower)
+    { return ((((__lsp32_16__)upper) << 16) | (((__lsp32_16__)lower) & 0x0000FFFF)); }
+
+
+static inline __lsp32_32__ __lsp_extract_upper_word(__lsp64_32__ x) { return (__lsp32_32__)(x >> 32); }
+static inline __lsp32_32__ __lsp_extract_lower_word(__lsp64_32__ x) { return (__lsp32_32__)(x); }
+static inline __lsp16_16__ __lsp_extract_upper_hword(__lsp32_16__ x) { return (__lsp16_16__)(x >> 16); }
+static inline __lsp16_16__ __lsp_extract_lower_hword(__lsp32_16__ x) { return (__lsp16_16__)(x); }
+# 144 "lsp.h"
+__lsp32_32__ __lsp_modify_circ(__lsp32_32__ a);
+# 7 "CMPE200GCC-47.c" 2
+
+void bug(short a, short b, short *c, short *d)
+{
+  register __lsp32_sf16__ lsp32Temp1;
+  register __lsp32_u16__ lsp32Temp2;
+
+  lsp32Temp2 = __builtin_lsp_zabsw(lsp32Temp2);
+  lsp32Temp1 = __lsp_create_32_16((__lsp16_16__)a, (__lsp16_16__)b);
+  lsp32Temp1 = __builtin_lsp_zvabsh(lsp32Temp1);
+
+  *c = (short)__lsp_extract_upper_hword(lsp32Temp1);
+  *d = (short)__lsp_extract_lower_hword(lsp32Temp1);
+}
diff --git a/gcc/testsuite/gcc.target/powerpc/lsp-builtin-errors.c b/gcc/testsuite/gcc.target/powerpc/lsp-builtin-errors.c
new file mode 100644
index 0000000..49507eb
--- /dev/null
+++ b/gcc/testsuite/gcc.target/powerpc/lsp-builtin-errors.c
@@ -0,0 +1,49 @@
+/* { dg-do compile { target { powerpc-*-*vle } } } */
+/* { dg-skip-if "not a VLE target" { !powerpc-*-*vle } { "*" } { "" } } */
+/* { dg-options "-O1 -mvle -mlsp" } */
+
+#include <stdint.h>
+
+void use_builtins (uint32_t ptr_a, uint32_t ptr_b)
+{
+  volatile uint32_t in32a, in32b, not_literal;
+  volatile uint64_t in64;
+  volatile uint32_t out32;
+  volatile uint64_t out64;
+
+  // Sorted by order in manual
+  out32 = __builtin_lsp_zvaddih   (in32a, not_literal);         /* { dg-error "must be a 5-bit" "" } */
+  out32 = __builtin_lsp_zvaddih   (in32a, 32);                  /* { dg-error "must be a 5-bit" "" } */
+
+  out32 = __builtin_lsp_zvrlhi    (in32a, not_literal);         /* { dg-error "must be a 4-bit" "" } */
+  out32 = __builtin_lsp_zvrlhi    (in32a, 16);                  /* { dg-error "must be a 4-bit" "" } */
+
+  out32 = __builtin_lsp_zvsplatih (not_literal);                /* { dg-error "must be a 5-bit" "" } */
+  out32 = __builtin_lsp_zvsplatih (32);                         /* { dg-error "must be a 5-bit" "" } */
+  out32 = __builtin_lsp_zvsplatih (-32);                        /* { dg-error "must be a 5-bit" "" } */
+
+  out32 = __builtin_lsp_zvsubifh  (in32a, not_literal);         /* { dg-error "must be a 5-bit" "" } */
+  out32 = __builtin_lsp_zvsubifh  (in32a, 32);                  /* { dg-error "must be a 5-bit" "" } */ 
+
+  out32 = __builtin_lsp_zxtrw     (in32a, in32b, not_literal);  /* { dg-error "must be in the range" "" } */
+  out32 = __builtin_lsp_zxtrw     (in32a, in32b, 0);            /* { dg-error "must be in the range" "" } */
+  out32 = __builtin_lsp_zxtrw     (in32a, in32b, 4);            /* { dg-error "must be in the range" "" } */
+
+  out64 = __builtin_lsp_zldd      (ptr_a, not_literal);         /* { dg-error "must be a 5-bit" "" } */
+  out64 = __builtin_lsp_zldd      (ptr_a, 32);                  /* { dg-error "must be a 5-bit" "" } */
+  out32 = __builtin_lsp_zlhhe     (ptr_a, not_literal);         /* { dg-error "must be a 5-bit" "" } */
+  out32 = __builtin_lsp_zlhhe     (ptr_a, 32);                  /* { dg-error "must be a 5-bit" "" } */
+  out64 = __builtin_lsp_zlwgsfd   (ptr_a, not_literal);         /* { dg-error "must be a 5-bit" "" } */
+  out64 = __builtin_lsp_zlwgsfd   (ptr_a, 32);                  /* { dg-error "must be a 5-bit" "" } */
+  out32 = __builtin_lsp_zlww      (ptr_a, not_literal);         /* { dg-error "must be a 5-bit" "" } */
+  out32 = __builtin_lsp_zlww      (ptr_a, 32);                  /* { dg-error "must be a 5-bit" "" } */
+
+          __builtin_lsp_zstdd     (in64,  ptr_b, not_literal);  /* { dg-error "must be a 5-bit" "" } */
+          __builtin_lsp_zstdd     (in64,  ptr_b, 32);           /* { dg-error "must be a 5-bit" "" } */
+          __builtin_lsp_zsthe     (in32a, ptr_b, not_literal);  /* { dg-error "must be a 5-bit" "" } */
+          __builtin_lsp_zsthe     (in32a, ptr_b, 32);           /* { dg-error "must be a 5-bit" "" } */
+          __builtin_lsp_zstwhed   (in64,  ptr_b, not_literal);  /* { dg-error "must be a 5-bit" "" } */
+          __builtin_lsp_zstwhed   (in64,  ptr_b, 32);           /* { dg-error "must be a 5-bit" "" } */
+          __builtin_lsp_zstww     (in32a, ptr_b, not_literal);  /* { dg-error "must be a 5-bit" "" } */
+          __builtin_lsp_zstww     (in32a, ptr_b, 32);           /* { dg-error "must be a 5-bit" "" } */
+}
diff --git a/gcc/testsuite/gcc.target/powerpc/lsp-builtin.c b/gcc/testsuite/gcc.target/powerpc/lsp-builtin.c
index a2b1d82..181c2e1 100644
--- a/gcc/testsuite/gcc.target/powerpc/lsp-builtin.c
+++ b/gcc/testsuite/gcc.target/powerpc/lsp-builtin.c
@@ -1,1409 +1,1469 @@
-/* { dg-xfail-if "LSP builtins aren't implemented yet CMPE200GCC-124" { *-*-* } } */
-/* { dg-do compile { xfail { powerpc-*-*vle } } } */
+/* { dg-do compile { target { powerpc-*-*vle } } } */
 /* { dg-skip-if "not a VLE target" { !powerpc-*-*vle } { "*" } { "" } } */
-/* { dg-options "-O0 -mvle -mlsp" } */
-/* { dg-final { xfail {scan-assembler "zvaddih" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubifh" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddh" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfh" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddsubfh" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfaddh" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddhx" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfhx" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddsubfhx" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfaddhx" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddhus" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfhus" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddhss" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfhss" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddsubfhss" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfaddhss" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddhxss" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfhxss" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddsubfhxss" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfaddhxss" } } } */
-/* { dg-final { xfail {scan-assembler "zvmergehih" } } } */
-/* { dg-final { xfail {scan-assembler "zvmergeloh" } } } */
-/* { dg-final { xfail {scan-assembler "zvmergehiloh" } } } */
-/* { dg-final { xfail {scan-assembler "zvmergelohih" } } } */
-/* { dg-final { xfail {scan-assembler "zvpkshgwshfrs" } } } */
-/* { dg-final { xfail {scan-assembler "zvpkswshfrs" } } } */
-/* { dg-final { xfail {scan-assembler "zvpkswuhs" } } } */
-/* { dg-final { xfail {scan-assembler "zvpkswshs" } } } */
-/* { dg-final { xfail {scan-assembler "zvpkuwuhs" } } } */
-/* { dg-final { xfail {scan-assembler "zvsplatih" } } } */
-/* { dg-final { xfail {scan-assembler "zvsplatfih" } } } */
-/* { dg-final { xfail {scan-assembler "zcntlsw" } } } */
-/* { dg-final { xfail {scan-assembler "zvcntlzh" } } } */
-/* { dg-final { xfail {scan-assembler "zvcntlsh" } } } */
-/* { dg-final { xfail {scan-assembler "znegws" } } } */
-/* { dg-final { xfail {scan-assembler "zvnegh" } } } */
-/* { dg-final { xfail {scan-assembler "zvneghs" } } } */
-/* { dg-final { xfail {scan-assembler "zvnegho" } } } */
-/* { dg-final { xfail {scan-assembler "zvneghos" } } } */
-/* { dg-final { xfail {scan-assembler "zrndwh" } } } */
-/* { dg-final { xfail {scan-assembler "zrndwhss" } } } */
-/* { dg-final { xfail {scan-assembler "zvabsh" } } } */
-/* { dg-final { xfail {scan-assembler "zvabshs" } } } */
-/* { dg-final { xfail {scan-assembler "zabsw" } } } */
-/* { dg-final { xfail {scan-assembler "zabsws" } } } */
-/* { dg-final { xfail {scan-assembler "zsatswuw" } } } */
-/* { dg-final { xfail {scan-assembler "zsatuwsw" } } } */
-/* { dg-final { xfail {scan-assembler "zsatswuh" } } } */
-/* { dg-final { xfail {scan-assembler "zsatswsh" } } } */
-/* { dg-final { xfail {scan-assembler "zvsatshuh" } } } */
-/* { dg-final { xfail {scan-assembler "zvsatuhsh" } } } */
-/* { dg-final { xfail {scan-assembler "zsatuwuh" } } } */
-/* { dg-final { xfail {scan-assembler "zsatuwsh" } } } */
-/* { dg-final { xfail {scan-assembler "zsatsduw" } } } */
-/* { dg-final { xfail {scan-assembler "zsatsdsw" } } } */
-/* { dg-final { xfail {scan-assembler "zsatuduw" } } } */
-/* { dg-final { xfail {scan-assembler "zdivwsf" } } } */
-/* { dg-final { xfail {scan-assembler "zvsrhu" } } } */
-/* { dg-final { xfail {scan-assembler "zvsrhs" } } } */
-/* { dg-final { xfail {scan-assembler "zvsrhiu" } } } */
-/* { dg-final { xfail {scan-assembler "zvsrhis" } } } */
-/* { dg-final { xfail {scan-assembler "zvslh" } } } */
-/* { dg-final { xfail {scan-assembler "zvrlh" } } } */
-/* { dg-final { xfail {scan-assembler "zvslhi" } } } */
-/* { dg-final { xfail {scan-assembler "zvrlhi" } } } */
-/* { dg-final { xfail {scan-assembler "zvslhus" } } } */
-/* { dg-final { xfail {scan-assembler "zvslhss" } } } */
-/* { dg-final { xfail {scan-assembler "zvslhius" } } } */
-/* { dg-final { xfail {scan-assembler "zvslhiss" } } } */
-/* { dg-final { xfail {scan-assembler "zslwus" } } } */
-/* { dg-final { xfail {scan-assembler "zslwss" } } } */
-/* { dg-final { xfail {scan-assembler "zslwius" } } } */
-/* { dg-final { xfail {scan-assembler "zslwiss" } } } */
-/* { dg-final { xfail {scan-assembler "zaddwgui" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfwgui" } } } */
-/* { dg-final { xfail {scan-assembler "zaddwgsi" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfwgsi" } } } */
-/* { dg-final { xfail {scan-assembler "zaddwgsf" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfwgsf" } } } */
-/* { dg-final { xfail {scan-assembler "zaddd" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfd" } } } */
-/* { dg-final { xfail {scan-assembler "zadddss" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfdss" } } } */
-/* { dg-final { xfail {scan-assembler "zadddus" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfdus" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddsubfw" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfaddw" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddw" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfw" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddsubfwss" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfaddwss" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddwss" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfwss" } } } */
-/* { dg-final { xfail {scan-assembler "zvaddwus" } } } */
-/* { dg-final { xfail {scan-assembler "zvsubfwus" } } } */
-/* { dg-final { xfail {scan-assembler "zvunpkhgwsf" } } } */
-/* { dg-final { xfail {scan-assembler "zvunpkhsf" } } } */
-/* { dg-final { xfail {scan-assembler "zvunpkhui" } } } */
-/* { dg-final { xfail {scan-assembler "zvunpkhsi" } } } */
-/* { dg-final { xfail {scan-assembler "zunpkwgsf" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwasmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwasmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgwasmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgwasmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwssmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwssmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwasmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwasmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwasmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwasmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgwasmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgwasmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgwasmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgwasmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwssmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwssmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwssmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgwssmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulgwsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulgwsmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllgwsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllgwsmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuugwsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuugwsmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlgwsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlgwsmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulgwsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulgwsmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulgwsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulgwsmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulgwsmfanp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulgwsmfranp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllgwsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllgwsmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllgwsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllgwsmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllgwsmfanp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllgwsmfranp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuugwsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuugwsmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuugwsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuugwsmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuugwsmfanp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuugwsmfranp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlgwsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlgwsmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlgwsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlgwsmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlgwsmfanp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlgwsmfranp" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogwsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogwsmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegwsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegwsmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogwsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogwsmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogwsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogwsmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogwsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogwsmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegwsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegwsmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegwsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegwsmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogwsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogwsmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogwsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogwsmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegui" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegsi" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegsui" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogui" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogsi" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogsui" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogui" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogsi" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogsui" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgaui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgasi" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgasui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgasmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgaui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgasi" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgasui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgasmf" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgsui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgssi" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgssui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgssmf" } } } */
-/* { dg-final { xfail {scan-assembler "zmheguiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgauiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheguian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgauian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegsiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgasiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegsian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgasian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegsuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgasuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegsuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgasuian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgasmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhegsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgasmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zmheoguiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgauiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheoguian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgauian" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogsiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgasiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogsian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgasian" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogsuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgasuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogsuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgasuian" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgasmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheogsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxgasmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zmhoguiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgsuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhoguian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgsuian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogsiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgssiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogsian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgssian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogsuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgssuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogsuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgssuian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgssmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhogsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphgssmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgui" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsi" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsui" } } } */
-/* { dg-final { xfail {scan-assembler "zmwguiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmwguian" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsian" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsuian" } } } */
-/* { dg-final { xfail {scan-assembler "zmwguiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmwguians" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsians" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsuians" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsmf" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsmfr" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsmfaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsmfraa" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsmfan" } } } */
-/* { dg-final { xfail {scan-assembler "zmwgsmfran" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsf" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsf" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusf" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsf" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsfr" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhului" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsi" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsui" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllui" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsi" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsui" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuuui" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusi" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusui" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsui" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsi" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlui" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuluiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuluiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuluian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuluians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuluianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuluianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsuians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsuianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsuianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsfans" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsfanps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhulsfranps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhlluiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhlluiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhlluian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhlluians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhlluianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhlluianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsuians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsuianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsuianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsfans" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsfanps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhllsfranps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuuuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuuuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuuuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuuuians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuuuianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuuuianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusuians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusuianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusuianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusfans" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusfanps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuusfranps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxluiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxluiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxluian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxluians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxluianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxluianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsuians" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsuianp" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsuianps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsfans" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsfanps" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhxlsfranps" } } } */
-/* { dg-final { xfail {scan-assembler "zmheui" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesi" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesui" } } } */
-/* { dg-final { xfail {scan-assembler "zmheoui" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosi" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosui" } } } */
-/* { dg-final { xfail {scan-assembler "zmhoui" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosi" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosui" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesf" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesfr" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosf" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosfr" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosf" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosfr" } } } */
-/* { dg-final { xfail {scan-assembler "zmheuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmheuian" } } } */
-/* { dg-final { xfail {scan-assembler "zmheuians" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesians" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesuian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesuians" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesfans" } } } */
-/* { dg-final { xfail {scan-assembler "zmhesfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zmheouiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheouiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmheouian" } } } */
-/* { dg-final { xfail {scan-assembler "zmheouians" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosian" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosians" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosuian" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosuians" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosfans" } } } */
-/* { dg-final { xfail {scan-assembler "zmheosfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zmhouiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhouiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmhouian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhouians" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosians" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosuian" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosuians" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosfans" } } } */
-/* { dg-final { xfail {scan-assembler "zmhosfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuih" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuih" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuih" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuihs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsihs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsuihs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuiaah" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuiaah" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuiaah" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuianh" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuianh" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuianh" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuiaahs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhuianhs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsiaahs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsianhs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsuiaahs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsuianhs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsfh" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsfrh" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsfaahs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsfraahs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsfanhs" } } } */
-/* { dg-final { xfail {scan-assembler "zvmhsfranhs" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphaui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphauis" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasi" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasis" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasuis" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphauiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphauiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphauian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphauians" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasians" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasuians" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasfs" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasfrs" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasfs" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasfrs" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasfans" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphasfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasfans" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxaui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxauis" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasi" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasis" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasuis" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxauiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxauiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxauian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxauians" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasians" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphxasuians" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphsui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssi" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssui" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphsuis" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssis" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssuis" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphsuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphsuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssuiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssuian" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphsuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphsuians" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssians" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssuians" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssfs" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssfrs" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssfans" } } } */
-/* { dg-final { xfail {scan-assembler "zvdotphssfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zmwluiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmwluiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmwluiaa" } } } */
-/* { dg-final { xfail {scan-assembler "zmwluian" } } } */
-/* { dg-final { xfail {scan-assembler "zmwluian" } } } */
-/* { dg-final { xfail {scan-assembler "zmwluian" } } } */
-/* { dg-final { xfail {scan-assembler "zmwluis" } } } */
-/* { dg-final { xfail {scan-assembler "zmwlsis" } } } */
-/* { dg-final { xfail {scan-assembler "zmwlsuis" } } } */
-/* { dg-final { xfail {scan-assembler "zmwlsiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmwlsians" } } } */
-/* { dg-final { xfail {scan-assembler "zmwlsuiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmwlsuians" } } } */
-/* { dg-final { xfail {scan-assembler "zmwluiaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmwluians" } } } */
-/* { dg-final { xfail {scan-assembler "zmwsf" } } } */
-/* { dg-final { xfail {scan-assembler "zmwsfr" } } } */
-/* { dg-final { xfail {scan-assembler "zmwsfaas" } } } */
-/* { dg-final { xfail {scan-assembler "zmwsfraas" } } } */
-/* { dg-final { xfail {scan-assembler "zmwsfans" } } } */
-/* { dg-final { xfail {scan-assembler "zmwsfrans" } } } */
-/* { dg-final { xfail {scan-assembler "zaddwus" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfwus" } } } */
-/* { dg-final { xfail {scan-assembler "zaddwss" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfwss" } } } */
-/* { dg-final { xfail {scan-assembler "zaddheuw" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfheuw" } } } */
-/* { dg-final { xfail {scan-assembler "zaddhesw" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfhesw" } } } */
-/* { dg-final { xfail {scan-assembler "zaddhouw" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfhouw" } } } */
-/* { dg-final { xfail {scan-assembler "zaddhosw" } } } */
-/* { dg-final { xfail {scan-assembler "zsubfhosw" } } } */
-/* { dg-final { xfail {scan-assembler "zpkswgshfrs" } } } */
-/* { dg-final { xfail {scan-assembler "zpkswgswfrs" } } } */
-/* { dg-final { xfail {scan-assembler "zvcmpgthu" } } } */
-/* { dg-final { xfail {scan-assembler "zvselh" } } } */
-/* { dg-final { xfail {scan-assembler "zxtrw" } } } */
-/* { dg-final { xfail {scan-assembler "zvcmpgthu" } } } */
-/* { dg-final { xfail {scan-assembler "zbrminc" } } } */
-/* { dg-final { xfail {scan-assembler "zcircinc" } } } */
-/* { dg-final { xfail {scan-assembler "zvcmpgthu" } } } */
-/* { dg-final { xfail {scan-assembler "zvcmpgthu" } } } */
-/* { dg-final { xfail {scan-assembler "zvcmplthu" } } } */
-/* { dg-final { xfail {scan-assembler "zvcmplthu" } } } */
-/* { dg-final { xfail {scan-assembler "zvcmpeqh" } } } */
-/* { dg-final { xfail {scan-assembler "zlddx" } } } */
-/* { dg-final { xfail {scan-assembler "zldd" } } } */
-/* { dg-final { xfail {scan-assembler "zldwx" } } } */
-/* { dg-final { xfail {scan-assembler "zldw" } } } */
-/* { dg-final { xfail {scan-assembler "zldhx" } } } */
-/* { dg-final { xfail {scan-assembler "zldh" } } } */
-/* { dg-final { xfail {scan-assembler "zlwgsfdx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwgsfd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwwosdx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwwosd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhsplatwdx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhsplatwd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhsplatdx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhsplatd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhgwsfdx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhgwsfd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhedx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhed" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhosdx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhosd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhoudx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhoud" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwh" } } } */
-/* { dg-final { xfail {scan-assembler "zlwwx" } } } */
-/* { dg-final { xfail {scan-assembler "zlww" } } } */
-/* { dg-final { xfail {scan-assembler "zlhgwsfx" } } } */
-/* { dg-final { xfail {scan-assembler "zlhgwsf" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhsplatx" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhsplat" } } } */
-/* { dg-final { xfail {scan-assembler "zstddx" } } } */
-/* { dg-final { xfail {scan-assembler "zstdd" } } } */
-/* { dg-final { xfail {scan-assembler "zstdwx" } } } */
-/* { dg-final { xfail {scan-assembler "zstdw" } } } */
-/* { dg-final { xfail {scan-assembler "zstdhx" } } } */
-/* { dg-final { xfail {scan-assembler "zstdh" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhedx" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhed" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhodx" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhod" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhex" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhe" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhosx" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhos" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhoux" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhou" } } } */
-/* { dg-final { xfail {scan-assembler "zsthex" } } } */
-/* { dg-final { xfail {scan-assembler "zsthe" } } } */
-/* { dg-final { xfail {scan-assembler "zsthox" } } } */
-/* { dg-final { xfail {scan-assembler "zstho" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhx" } } } */
-/* { dg-final { xfail {scan-assembler "zstwh" } } } */
-/* { dg-final { xfail {scan-assembler "zstwwx" } } } */
-/* { dg-final { xfail {scan-assembler "zstww" } } } */
-/* { dg-final { xfail {scan-assembler "zlddmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlddu" } } } */
-/* { dg-final { xfail {scan-assembler "zldwmx" } } } */
-/* { dg-final { xfail {scan-assembler "zldwu" } } } */
-/* { dg-final { xfail {scan-assembler "zldhmx" } } } */
-/* { dg-final { xfail {scan-assembler "zldhu" } } } */
-/* { dg-final { xfail {scan-assembler "zlwgsfdmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwgsfd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwwosdmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwwosd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhsplatwdmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhsplatwd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhsplatdmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhsplatd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhgwsfdmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhgwsfd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhedmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhed" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhosdmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhosd" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhoudmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhoud" } } } */
-/* { dg-final { xfail {scan-assembler "zlwhmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlwh" } } } */
-/* { dg-final { xfail {scan-assembler "zlwwmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlww" } } } */
-/* { dg-final { xfail {scan-assembler "zlhgwsfmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlhgwsf" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhsplatmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhsplat" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhemx" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhe" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhosmx" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhos" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhoumx" } } } */
-/* { dg-final { xfail {scan-assembler "zlhhou" } } } */
-/* { dg-final { xfail {scan-assembler "zstddmx" } } } */
-/* { dg-final { xfail {scan-assembler "zstddu" } } } */
-/* { dg-final { xfail {scan-assembler "zstdwmx" } } } */
-/* { dg-final { xfail {scan-assembler "zstdwu" } } } */
-/* { dg-final { xfail {scan-assembler "zstdhmx" } } } */
-/* { dg-final { xfail {scan-assembler "zstdhu" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhedmx" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhed" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhodmx" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhod" } } } */
-/* { dg-final { xfail {scan-assembler "zsthemx" } } } */
-/* { dg-final { xfail {scan-assembler "zsthe" } } } */
-/* { dg-final { xfail {scan-assembler "zsthomx" } } } */
-/* { dg-final { xfail {scan-assembler "zstho" } } } */
-/* { dg-final { xfail {scan-assembler "zstwhmx" } } } */
-/* { dg-final { xfail {scan-assembler "zstwh" } } } */
-/* { dg-final { xfail {scan-assembler "zstwwmx" } } } */
-/* { dg-final { xfail {scan-assembler "zstww" } } } */
+/* { dg-options "-O1 -mvle -mlsp" } */
 
+/* { dg-final { scan-assembler-not "__builtin_lsp" } } */
 
-#include <lsp.h>
+/* { dg-final { scan-assembler "zvaddih" } } */
+/* { dg-final { scan-assembler "zvsubifh" } } */
+/* { dg-final { scan-assembler "zvaddh" } } */
+/* { dg-final { scan-assembler "zvsubfh" } } */
+/* { dg-final { scan-assembler "zvaddsubfh" } } */
+/* { dg-final { scan-assembler "zvsubfaddh" } } */
+/* { dg-final { scan-assembler "zvaddhx" } } */
+/* { dg-final { scan-assembler "zvsubfhx" } } */
+/* { dg-final { scan-assembler "zvaddsubfhx" } } */
+/* { dg-final { scan-assembler "zvsubfaddhx" } } */
+/* { dg-final { scan-assembler "zvaddhus" } } */
+/* { dg-final { scan-assembler "zvsubfhus" } } */
+/* { dg-final { scan-assembler "zvaddhss" } } */
+/* { dg-final { scan-assembler "zvsubfhss" } } */
+/* { dg-final { scan-assembler "zvaddsubfhss" } } */
+/* { dg-final { scan-assembler "zvsubfaddhss" } } */
+/* { dg-final { scan-assembler "zvaddhxss" } } */
+/* { dg-final { scan-assembler "zvsubfhxss" } } */
+/* { dg-final { scan-assembler "zvaddsubfhxss" } } */
+/* { dg-final { scan-assembler "zvsubfaddhxss" } } */
+/* { dg-final { scan-assembler "zvmergehih" } } */
+/* { dg-final { scan-assembler "zvmergeloh" } } */
+/* { dg-final { scan-assembler "zvmergehiloh" } } */
+/* { dg-final { scan-assembler "zvmergelohih" } } */
+/* { dg-final { scan-assembler "zvpkshgwshfrs" } } */
+/* { dg-final { scan-assembler "zvpkswshfrs" } } */
+/* { dg-final { scan-assembler "zvpkswuhs" } } */
+/* { dg-final { scan-assembler "zvpkswshs" } } */
+/* { dg-final { scan-assembler "zvpkuwuhs" } } */
+/* { dg-final { scan-assembler "zvsplatih" } } */
+/* { dg-final { scan-assembler "zvsplatfih" } } */
+/* { dg-final { scan-assembler "zcntlsw" } } */
+/* { dg-final { scan-assembler "zvcntlzh" } } */
+/* { dg-final { scan-assembler "zvcntlsh" } } */
+/* { dg-final { scan-assembler "znegws" } } */
+/* { dg-final { scan-assembler "zvnegh" } } */
+/* { dg-final { scan-assembler "zvneghs" } } */
+/* { dg-final { scan-assembler "zvnegho" } } */
+/* { dg-final { scan-assembler "zvneghos" } } */
+/* { dg-final { scan-assembler "zrndwh" } } */
+/* { dg-final { scan-assembler "zrndwhss" } } */
+/* { dg-final { scan-assembler "zvabsh" } } */
+/* { dg-final { scan-assembler "zvabshs" } } */
+/* { dg-final { scan-assembler "zabsw" } } */
+/* { dg-final { scan-assembler "zabsws" } } */
+/* { dg-final { scan-assembler "zsatswuw" } } */
+/* { dg-final { scan-assembler "zsatuwsw" } } */
+/* { dg-final { scan-assembler "zsatswuh" } } */
+/* { dg-final { scan-assembler "zsatswsh" } } */
+/* { dg-final { scan-assembler "zvsatshuh" } } */
+/* { dg-final { scan-assembler "zvsatuhsh" } } */
+/* { dg-final { scan-assembler "zsatuwuh" } } */
+/* { dg-final { scan-assembler "zsatuwsh" } } */
+/* { dg-final { scan-assembler "zsatsduw" } } */
+/* { dg-final { scan-assembler "zsatsdsw" } } */
+/* { dg-final { scan-assembler "zsatuduw" } } */
+/* { dg-final { scan-assembler "zdivwsf" } } */
+/* { dg-final { scan-assembler "zvsrhu" } } */
+/* { dg-final { scan-assembler "zvsrhs" } } */
+/* { dg-final { scan-assembler "zvsrhiu" } } */
+/* { dg-final { scan-assembler "zvsrhis" } } */
+/* { dg-final { scan-assembler "zvslh" } } */
+/* { dg-final { scan-assembler "zvrlh" } } */
+/* { dg-final { scan-assembler "zvslhi" } } */
+/* { dg-final { scan-assembler "zvrlhi" } } */
+/* { dg-final { scan-assembler "zvslhus" } } */
+/* { dg-final { scan-assembler "zvslhss" } } */
+/* { dg-final { scan-assembler "zvslhius" } } */
+/* { dg-final { scan-assembler "zvslhiss" } } */
+/* { dg-final { scan-assembler "zslwus" } } */
+/* { dg-final { scan-assembler "zslwss" } } */
+/* { dg-final { scan-assembler "zslwius" } } */
+/* { dg-final { scan-assembler "zslwiss" } } */
+/* { dg-final { scan-assembler "zaddwgui" } } */
+/* { dg-final { scan-assembler "zsubfwgui" } } */
+/* { dg-final { scan-assembler "zaddwgsi" } } */
+/* { dg-final { scan-assembler "zsubfwgsi" } } */
+/* { dg-final { scan-assembler "zaddwgsf" } } */
+/* { dg-final { scan-assembler "zsubfwgsf" } } */
+/* { dg-final { scan-assembler "zaddd" } } */
+/* { dg-final { scan-assembler "zsubfd" } } */
+/* { dg-final { scan-assembler "zadddss" } } */
+/* { dg-final { scan-assembler "zsubfdss" } } */
+/* { dg-final { scan-assembler "zadddus" } } */
+/* { dg-final { scan-assembler "zsubfdus" } } */
+/* { dg-final { scan-assembler "zvaddsubfw" } } */
+/* { dg-final { scan-assembler "zvsubfaddw" } } */
+/* { dg-final { scan-assembler "zvaddw" } } */
+/* { dg-final { scan-assembler "zvsubfw" } } */
+/* { dg-final { scan-assembler "zvaddsubfwss" } } */
+/* { dg-final { scan-assembler "zvsubfaddwss" } } */
+/* { dg-final { scan-assembler "zvaddwss" } } */
+/* { dg-final { scan-assembler "zvsubfwss" } } */
+/* { dg-final { scan-assembler "zvaddwus" } } */
+/* { dg-final { scan-assembler "zvselh" } } */
+/* { dg-final { scan-assembler "zvcmpeqh" } } */
+/* { dg-final { scan-assembler "zvcmpgths" } } */
+/* { dg-final { scan-assembler "zvcmpgthu" } } */
+/* { dg-final { scan-assembler "zvcmplths" } } */
+/* { dg-final { scan-assembler "zvcmplthu" } } */
+/* { dg-final { scan-assembler "zvsubfwus" } } */
+/* { dg-final { scan-assembler "zvunpkhgwsf" } } */
+/* { dg-final { scan-assembler "zvunpkhsf" } } */
+/* { dg-final { scan-assembler "zvunpkhui" } } */
+/* { dg-final { scan-assembler "zvunpkhsi" } } */
+/* { dg-final { scan-assembler "zunpkwgsf" } } */
+/* { dg-final { scan-assembler "zvdotphgwasmf" } } */
+/* { dg-final { scan-assembler "zvdotphgwasmfr" } } */
+/* { dg-final { scan-assembler "zvdotphxgwasmf" } } */
+/* { dg-final { scan-assembler "zvdotphxgwasmfr" } } */
+/* { dg-final { scan-assembler "zvdotphgwssmf" } } */
+/* { dg-final { scan-assembler "zvdotphgwssmfr" } } */
+/* { dg-final { scan-assembler "zvdotphgwasmfaa" } } */
+/* { dg-final { scan-assembler "zvdotphgwasmfraa" } } */
+/* { dg-final { scan-assembler "zvdotphgwasmfan" } } */
+/* { dg-final { scan-assembler "zvdotphgwasmfran" } } */
+/* { dg-final { scan-assembler "zvdotphxgwasmfaa" } } */
+/* { dg-final { scan-assembler "zvdotphxgwasmfraa" } } */
+/* { dg-final { scan-assembler "zvdotphxgwasmfan" } } */
+/* { dg-final { scan-assembler "zvdotphxgwasmfran" } } */
+/* { dg-final { scan-assembler "zvdotphgwssmfaa" } } */
+/* { dg-final { scan-assembler "zvdotphgwssmfraa" } } */
+/* { dg-final { scan-assembler "zvdotphgwssmfan" } } */
+/* { dg-final { scan-assembler "zvdotphgwssmfran" } } */
+/* { dg-final { scan-assembler "zvmhulgwsmf" } } */
+/* { dg-final { scan-assembler "zvmhulgwsmfr" } } */
+/* { dg-final { scan-assembler "zvmhllgwsmf" } } */
+/* { dg-final { scan-assembler "zvmhllgwsmfr" } } */
+/* { dg-final { scan-assembler "zvmhuugwsmf" } } */
+/* { dg-final { scan-assembler "zvmhuugwsmfr" } } */
+/* { dg-final { scan-assembler "zvmhxlgwsmf" } } */
+/* { dg-final { scan-assembler "zvmhxlgwsmfr" } } */
+/* { dg-final { scan-assembler "zvmhulgwsmfaa" } } */
+/* { dg-final { scan-assembler "zvmhulgwsmfraa" } } */
+/* { dg-final { scan-assembler "zvmhulgwsmfan" } } */
+/* { dg-final { scan-assembler "zvmhulgwsmfran" } } */
+/* { dg-final { scan-assembler "zvmhulgwsmfanp" } } */
+/* { dg-final { scan-assembler "zvmhulgwsmfranp" } } */
+/* { dg-final { scan-assembler "zvmhllgwsmfaa" } } */
+/* { dg-final { scan-assembler "zvmhllgwsmfraa" } } */
+/* { dg-final { scan-assembler "zvmhllgwsmfan" } } */
+/* { dg-final { scan-assembler "zvmhllgwsmfran" } } */
+/* { dg-final { scan-assembler "zvmhllgwsmfanp" } } */
+/* { dg-final { scan-assembler "zvmhllgwsmfranp" } } */
+/* { dg-final { scan-assembler "zvmhuugwsmfaa" } } */
+/* { dg-final { scan-assembler "zvmhuugwsmfraa" } } */
+/* { dg-final { scan-assembler "zvmhuugwsmfan" } } */
+/* { dg-final { scan-assembler "zvmhuugwsmfran" } } */
+/* { dg-final { scan-assembler "zvmhuugwsmfanp" } } */
+/* { dg-final { scan-assembler "zvmhuugwsmfranp" } } */
+/* { dg-final { scan-assembler "zvmhxlgwsmfaa" } } */
+/* { dg-final { scan-assembler "zvmhxlgwsmfraa" } } */
+/* { dg-final { scan-assembler "zvmhxlgwsmfan" } } */
+/* { dg-final { scan-assembler "zvmhxlgwsmfran" } } */
+/* { dg-final { scan-assembler "zvmhxlgwsmfanp" } } */
+/* { dg-final { scan-assembler "zvmhxlgwsmfranp" } } */
+/* { dg-final { scan-assembler "zmheogwsmf" } } */
+/* { dg-final { scan-assembler "zmheogwsmfr" } } */
+/* { dg-final { scan-assembler "zmhegwsmf" } } */
+/* { dg-final { scan-assembler "zmhegwsmfr" } } */
+/* { dg-final { scan-assembler "zmhogwsmf" } } */
+/* { dg-final { scan-assembler "zmhogwsmfr" } } */
+/* { dg-final { scan-assembler "zmheogwsmfaa" } } */
+/* { dg-final { scan-assembler "zmheogwsmfraa" } } */
+/* { dg-final { scan-assembler "zmheogwsmfan" } } */
+/* { dg-final { scan-assembler "zmheogwsmfran" } } */
+/* { dg-final { scan-assembler "zmhegwsmfaa" } } */
+/* { dg-final { scan-assembler "zmhegwsmfraa" } } */
+/* { dg-final { scan-assembler "zmhegwsmfan" } } */
+/* { dg-final { scan-assembler "zmhegwsmfran" } } */
+/* { dg-final { scan-assembler "zmhogwsmfaa" } } */
+/* { dg-final { scan-assembler "zmhogwsmfraa" } } */
+/* { dg-final { scan-assembler "zmhogwsmfan" } } */
+/* { dg-final { scan-assembler "zmhogwsmfran" } } */
+/* { dg-final { scan-assembler "zmhegui" } } */
+/* { dg-final { scan-assembler "zmhegsi" } } */
+/* { dg-final { scan-assembler "zmhegsui" } } */
+/* { dg-final { scan-assembler "zmhegsmf" } } */
+/* { dg-final { scan-assembler "zmheogui" } } */
+/* { dg-final { scan-assembler "zmheogsi" } } */
+/* { dg-final { scan-assembler "zmheogsui" } } */
+/* { dg-final { scan-assembler "zmheogsmf" } } */
+/* { dg-final { scan-assembler "zmhogui" } } */
+/* { dg-final { scan-assembler "zmhogsi" } } */
+/* { dg-final { scan-assembler "zmhogsui" } } */
+/* { dg-final { scan-assembler "zmhogsmf" } } */
+/* { dg-final { scan-assembler "zvdotphgaui" } } */
+/* { dg-final { scan-assembler "zvdotphgasi" } } */
+/* { dg-final { scan-assembler "zvdotphgasui" } } */
+/* { dg-final { scan-assembler "zvdotphgasmf" } } */
+/* { dg-final { scan-assembler "zvdotphxgaui" } } */
+/* { dg-final { scan-assembler "zvdotphxgasi" } } */
+/* { dg-final { scan-assembler "zvdotphxgasui" } } */
+/* { dg-final { scan-assembler "zvdotphxgasmf" } } */
+/* { dg-final { scan-assembler "zvdotphgsui" } } */
+/* { dg-final { scan-assembler "zvdotphgssi" } } */
+/* { dg-final { scan-assembler "zvdotphgssui" } } */
+/* { dg-final { scan-assembler "zvdotphgssmf" } } */
+/* { dg-final { scan-assembler "zmheguiaa" } } */
+/* { dg-final { scan-assembler "zvdotphgauiaa" } } */
+/* { dg-final { scan-assembler "zmheguian" } } */
+/* { dg-final { scan-assembler "zvdotphgauian" } } */
+/* { dg-final { scan-assembler "zmhegsiaa" } } */
+/* { dg-final { scan-assembler "zvdotphgasiaa" } } */
+/* { dg-final { scan-assembler "zmhegsian" } } */
+/* { dg-final { scan-assembler "zvdotphgasian" } } */
+/* { dg-final { scan-assembler "zmhegsuiaa" } } */
+/* { dg-final { scan-assembler "zvdotphgasuiaa" } } */
+/* { dg-final { scan-assembler "zmhegsuian" } } */
+/* { dg-final { scan-assembler "zvdotphgasuian" } } */
+/* { dg-final { scan-assembler "zmhegsmfaa" } } */
+/* { dg-final { scan-assembler "zvdotphgasmfaa" } } */
+/* { dg-final { scan-assembler "zmhegsmfan" } } */
+/* { dg-final { scan-assembler "zvdotphgasmfan" } } */
+/* { dg-final { scan-assembler "zmheoguiaa" } } */
+/* { dg-final { scan-assembler "zvdotphxgauiaa" } } */
+/* { dg-final { scan-assembler "zmheoguian" } } */
+/* { dg-final { scan-assembler "zvdotphxgauian" } } */
+/* { dg-final { scan-assembler "zmheogsiaa" } } */
+/* { dg-final { scan-assembler "zvdotphxgasiaa" } } */
+/* { dg-final { scan-assembler "zmheogsian" } } */
+/* { dg-final { scan-assembler "zvdotphxgasian" } } */
+/* { dg-final { scan-assembler "zmheogsuiaa" } } */
+/* { dg-final { scan-assembler "zvdotphxgasuiaa" } } */
+/* { dg-final { scan-assembler "zmheogsuian" } } */
+/* { dg-final { scan-assembler "zvdotphxgasuian" } } */
+/* { dg-final { scan-assembler "zmheogsmfaa" } } */
+/* { dg-final { scan-assembler "zvdotphxgasmfaa" } } */
+/* { dg-final { scan-assembler "zmheogsmfan" } } */
+/* { dg-final { scan-assembler "zvdotphxgasmfan" } } */
+/* { dg-final { scan-assembler "zmhoguiaa" } } */
+/* { dg-final { scan-assembler "zvdotphgsuiaa" } } */
+/* { dg-final { scan-assembler "zmhoguian" } } */
+/* { dg-final { scan-assembler "zvdotphgsuian" } } */
+/* { dg-final { scan-assembler "zmhogsiaa" } } */
+/* { dg-final { scan-assembler "zvdotphgssiaa" } } */
+/* { dg-final { scan-assembler "zmhogsian" } } */
+/* { dg-final { scan-assembler "zvdotphgssian" } } */
+/* { dg-final { scan-assembler "zmhogsuiaa" } } */
+/* { dg-final { scan-assembler "zvdotphgssuiaa" } } */
+/* { dg-final { scan-assembler "zmhogsuian" } } */
+/* { dg-final { scan-assembler "zvdotphgssuian" } } */
+/* { dg-final { scan-assembler "zmhogsmfaa" } } */
+/* { dg-final { scan-assembler "zvdotphgssmfaa" } } */
+/* { dg-final { scan-assembler "zmhogsmfan" } } */
+/* { dg-final { scan-assembler "zvdotphgssmfan" } } */
+/* { dg-final { scan-assembler "zmwgui" } } */
+/* { dg-final { scan-assembler "zmwgsi" } } */
+/* { dg-final { scan-assembler "zmwgsui" } } */
+/* { dg-final { scan-assembler "zmwguiaa" } } */
+/* { dg-final { scan-assembler "zmwguian" } } */
+/* { dg-final { scan-assembler "zmwgsiaa" } } */
+/* { dg-final { scan-assembler "zmwgsian" } } */
+/* { dg-final { scan-assembler "zmwgsuiaa" } } */
+/* { dg-final { scan-assembler "zmwgsuian" } } */
+/* { dg-final { scan-assembler "zmwguiaas" } } */
+/* { dg-final { scan-assembler "zmwguians" } } */
+/* { dg-final { scan-assembler "zmwgsiaas" } } */
+/* { dg-final { scan-assembler "zmwgsians" } } */
+/* { dg-final { scan-assembler "zmwgsuiaas" } } */
+/* { dg-final { scan-assembler "zmwgsuians" } } */
+/* { dg-final { scan-assembler "zmwgsmf" } } */
+/* { dg-final { scan-assembler "zmwgsmfr" } } */
+/* { dg-final { scan-assembler "zmwgsmfaa" } } */
+/* { dg-final { scan-assembler "zmwgsmfraa" } } */
+/* { dg-final { scan-assembler "zmwgsmfan" } } */
+/* { dg-final { scan-assembler "zmwgsmfran" } } */
+/* { dg-final { scan-assembler "zvmhulsf" } } */
+/* { dg-final { scan-assembler "zvmhulsfr" } } */
+/* { dg-final { scan-assembler "zvmhllsf" } } */
+/* { dg-final { scan-assembler "zvmhllsfr" } } */
+/* { dg-final { scan-assembler "zvmhuusf" } } */
+/* { dg-final { scan-assembler "zvmhuusfr" } } */
+/* { dg-final { scan-assembler "zvmhxlsf" } } */
+/* { dg-final { scan-assembler "zvmhxlsfr" } } */
+/* { dg-final { scan-assembler "zvmhului" } } */
+/* { dg-final { scan-assembler "zvmhulsi" } } */
+/* { dg-final { scan-assembler "zvmhulsui" } } */
+/* { dg-final { scan-assembler "zvmhllui" } } */
+/* { dg-final { scan-assembler "zvmhllsi" } } */
+/* { dg-final { scan-assembler "zvmhllsui" } } */
+/* { dg-final { scan-assembler "zvmhuuui" } } */
+/* { dg-final { scan-assembler "zvmhuusi" } } */
+/* { dg-final { scan-assembler "zvmhuusui" } } */
+/* { dg-final { scan-assembler "zvmhxlsui" } } */
+/* { dg-final { scan-assembler "zvmhxlsi" } } */
+/* { dg-final { scan-assembler "zvmhxlui" } } */
+/* { dg-final { scan-assembler "zvmhuluiaa" } } */
+/* { dg-final { scan-assembler "zvmhuluiaas" } } */
+/* { dg-final { scan-assembler "zvmhuluian" } } */
+/* { dg-final { scan-assembler "zvmhuluians" } } */
+/* { dg-final { scan-assembler "zvmhuluianp" } } */
+/* { dg-final { scan-assembler "zvmhuluianps" } } */
+/* { dg-final { scan-assembler "zvmhulsiaa" } } */
+/* { dg-final { scan-assembler "zvmhulsiaas" } } */
+/* { dg-final { scan-assembler "zvmhulsian" } } */
+/* { dg-final { scan-assembler "zvmhulsians" } } */
+/* { dg-final { scan-assembler "zvmhulsianp" } } */
+/* { dg-final { scan-assembler "zvmhulsianps" } } */
+/* { dg-final { scan-assembler "zvmhulsuiaa" } } */
+/* { dg-final { scan-assembler "zvmhulsuiaas" } } */
+/* { dg-final { scan-assembler "zvmhulsuian" } } */
+/* { dg-final { scan-assembler "zvmhulsuians" } } */
+/* { dg-final { scan-assembler "zvmhulsuianp" } } */
+/* { dg-final { scan-assembler "zvmhulsuianps" } } */
+/* { dg-final { scan-assembler "zvmhulsfaas" } } */
+/* { dg-final { scan-assembler "zvmhulsfraas" } } */
+/* { dg-final { scan-assembler "zvmhulsfans" } } */
+/* { dg-final { scan-assembler "zvmhulsfrans" } } */
+/* { dg-final { scan-assembler "zvmhulsfanps" } } */
+/* { dg-final { scan-assembler "zvmhulsfranps" } } */
+/* { dg-final { scan-assembler "zvmhlluiaa" } } */
+/* { dg-final { scan-assembler "zvmhlluiaas" } } */
+/* { dg-final { scan-assembler "zvmhlluian" } } */
+/* { dg-final { scan-assembler "zvmhlluians" } } */
+/* { dg-final { scan-assembler "zvmhlluianp" } } */
+/* { dg-final { scan-assembler "zvmhlluianps" } } */
+/* { dg-final { scan-assembler "zvmhllsiaa" } } */
+/* { dg-final { scan-assembler "zvmhllsiaas" } } */
+/* { dg-final { scan-assembler "zvmhllsian" } } */
+/* { dg-final { scan-assembler "zvmhllsians" } } */
+/* { dg-final { scan-assembler "zvmhllsianp" } } */
+/* { dg-final { scan-assembler "zvmhllsianps" } } */
+/* { dg-final { scan-assembler "zvmhllsuiaa" } } */
+/* { dg-final { scan-assembler "zvmhllsuiaas" } } */
+/* { dg-final { scan-assembler "zvmhllsuian" } } */
+/* { dg-final { scan-assembler "zvmhllsuians" } } */
+/* { dg-final { scan-assembler "zvmhllsuianp" } } */
+/* { dg-final { scan-assembler "zvmhllsuianps" } } */
+/* { dg-final { scan-assembler "zvmhllsfaas" } } */
+/* { dg-final { scan-assembler "zvmhllsfraas" } } */
+/* { dg-final { scan-assembler "zvmhllsfans" } } */
+/* { dg-final { scan-assembler "zvmhllsfrans" } } */
+/* { dg-final { scan-assembler "zvmhllsfanps" } } */
+/* { dg-final { scan-assembler "zvmhllsfranps" } } */
+/* { dg-final { scan-assembler "zvmhuuuiaa" } } */
+/* { dg-final { scan-assembler "zvmhuuuiaas" } } */
+/* { dg-final { scan-assembler "zvmhuuuian" } } */
+/* { dg-final { scan-assembler "zvmhuuuians" } } */
+/* { dg-final { scan-assembler "zvmhuuuianp" } } */
+/* { dg-final { scan-assembler "zvmhuuuianps" } } */
+/* { dg-final { scan-assembler "zvmhuusiaa" } } */
+/* { dg-final { scan-assembler "zvmhuusiaas" } } */
+/* { dg-final { scan-assembler "zvmhuusian" } } */
+/* { dg-final { scan-assembler "zvmhuusians" } } */
+/* { dg-final { scan-assembler "zvmhuusianp" } } */
+/* { dg-final { scan-assembler "zvmhuusianps" } } */
+/* { dg-final { scan-assembler "zvmhuusuiaa" } } */
+/* { dg-final { scan-assembler "zvmhuusuiaas" } } */
+/* { dg-final { scan-assembler "zvmhuusuian" } } */
+/* { dg-final { scan-assembler "zvmhuusuians" } } */
+/* { dg-final { scan-assembler "zvmhuusuianp" } } */
+/* { dg-final { scan-assembler "zvmhuusuianps" } } */
+/* { dg-final { scan-assembler "zvmhuusfaas" } } */
+/* { dg-final { scan-assembler "zvmhuusfraas" } } */
+/* { dg-final { scan-assembler "zvmhuusfans" } } */
+/* { dg-final { scan-assembler "zvmhuusfrans" } } */
+/* { dg-final { scan-assembler "zvmhuusfanps" } } */
+/* { dg-final { scan-assembler "zvmhuusfranps" } } */
+/* { dg-final { scan-assembler "zvmhxluiaa" } } */
+/* { dg-final { scan-assembler "zvmhxluiaas" } } */
+/* { dg-final { scan-assembler "zvmhxluian" } } */
+/* { dg-final { scan-assembler "zvmhxluians" } } */
+/* { dg-final { scan-assembler "zvmhxluianp" } } */
+/* { dg-final { scan-assembler "zvmhxluianps" } } */
+/* { dg-final { scan-assembler "zvmhxlsiaa" } } */
+/* { dg-final { scan-assembler "zvmhxlsiaas" } } */
+/* { dg-final { scan-assembler "zvmhxlsian" } } */
+/* { dg-final { scan-assembler "zvmhxlsians" } } */
+/* { dg-final { scan-assembler "zvmhxlsianp" } } */
+/* { dg-final { scan-assembler "zvmhxlsianps" } } */
+/* { dg-final { scan-assembler "zvmhxlsuiaa" } } */
+/* { dg-final { scan-assembler "zvmhxlsuiaas" } } */
+/* { dg-final { scan-assembler "zvmhxlsuian" } } */
+/* { dg-final { scan-assembler "zvmhxlsuians" } } */
+/* { dg-final { scan-assembler "zvmhxlsuianp" } } */
+/* { dg-final { scan-assembler "zvmhxlsuianps" } } */
+/* { dg-final { scan-assembler "zvmhxlsfaas" } } */
+/* { dg-final { scan-assembler "zvmhxlsfraas" } } */
+/* { dg-final { scan-assembler "zvmhxlsfans" } } */
+/* { dg-final { scan-assembler "zvmhxlsfrans" } } */
+/* { dg-final { scan-assembler "zvmhxlsfanps" } } */
+/* { dg-final { scan-assembler "zvmhxlsfranps" } } */
+/* { dg-final { scan-assembler "zmheui" } } */
+/* { dg-final { scan-assembler "zmhesi" } } */
+/* { dg-final { scan-assembler "zmhesui" } } */
+/* { dg-final { scan-assembler "zmheoui" } } */
+/* { dg-final { scan-assembler "zmheosi" } } */
+/* { dg-final { scan-assembler "zmheosui" } } */
+/* { dg-final { scan-assembler "zmhoui" } } */
+/* { dg-final { scan-assembler "zmhosi" } } */
+/* { dg-final { scan-assembler "zmhosui" } } */
+/* { dg-final { scan-assembler "zmhesf" } } */
+/* { dg-final { scan-assembler "zmhesfr" } } */
+/* { dg-final { scan-assembler "zmheosf" } } */
+/* { dg-final { scan-assembler "zmheosfr" } } */
+/* { dg-final { scan-assembler "zmhosf" } } */
+/* { dg-final { scan-assembler "zmhosfr" } } */
+/* { dg-final { scan-assembler "zmheuiaa" } } */
+/* { dg-final { scan-assembler "zmheuiaas" } } */
+/* { dg-final { scan-assembler "zmheuian" } } */
+/* { dg-final { scan-assembler "zmheuians" } } */
+/* { dg-final { scan-assembler "zmhesiaa" } } */
+/* { dg-final { scan-assembler "zmhesiaas" } } */
+/* { dg-final { scan-assembler "zmhesian" } } */
+/* { dg-final { scan-assembler "zmhesians" } } */
+/* { dg-final { scan-assembler "zmhesuiaa" } } */
+/* { dg-final { scan-assembler "zmhesuiaas" } } */
+/* { dg-final { scan-assembler "zmhesuian" } } */
+/* { dg-final { scan-assembler "zmhesuians" } } */
+/* { dg-final { scan-assembler "zmhesfaas" } } */
+/* { dg-final { scan-assembler "zmhesfraas" } } */
+/* { dg-final { scan-assembler "zmhesfans" } } */
+/* { dg-final { scan-assembler "zmhesfrans" } } */
+/* { dg-final { scan-assembler "zmheouiaa" } } */
+/* { dg-final { scan-assembler "zmheouiaas" } } */
+/* { dg-final { scan-assembler "zmheouian" } } */
+/* { dg-final { scan-assembler "zmheouians" } } */
+/* { dg-final { scan-assembler "zmheosiaa" } } */
+/* { dg-final { scan-assembler "zmheosiaas" } } */
+/* { dg-final { scan-assembler "zmheosian" } } */
+/* { dg-final { scan-assembler "zmheosians" } } */
+/* { dg-final { scan-assembler "zmheosuiaa" } } */
+/* { dg-final { scan-assembler "zmheosuiaas" } } */
+/* { dg-final { scan-assembler "zmheosuian" } } */
+/* { dg-final { scan-assembler "zmheosuians" } } */
+/* { dg-final { scan-assembler "zmheosfaas" } } */
+/* { dg-final { scan-assembler "zmheosfraas" } } */
+/* { dg-final { scan-assembler "zmheosfans" } } */
+/* { dg-final { scan-assembler "zmheosfrans" } } */
+/* { dg-final { scan-assembler "zmhouiaa" } } */
+/* { dg-final { scan-assembler "zmhouiaas" } } */
+/* { dg-final { scan-assembler "zmhouian" } } */
+/* { dg-final { scan-assembler "zmhouians" } } */
+/* { dg-final { scan-assembler "zmhosiaa" } } */
+/* { dg-final { scan-assembler "zmhosiaas" } } */
+/* { dg-final { scan-assembler "zmhosian" } } */
+/* { dg-final { scan-assembler "zmhosians" } } */
+/* { dg-final { scan-assembler "zmhosuiaa" } } */
+/* { dg-final { scan-assembler "zmhosuiaas" } } */
+/* { dg-final { scan-assembler "zmhosuian" } } */
+/* { dg-final { scan-assembler "zmhosuians" } } */
+/* { dg-final { scan-assembler "zmhosfaas" } } */
+/* { dg-final { scan-assembler "zmhosfraas" } } */
+/* { dg-final { scan-assembler "zmhosfans" } } */
+/* { dg-final { scan-assembler "zmhosfrans" } } */
+/* { dg-final { scan-assembler "zvmhuih" } } */
+/* { dg-final { scan-assembler "zvmhuih" } } */
+/* { dg-final { scan-assembler "zvmhuih" } } */
+/* { dg-final { scan-assembler "zvmhuihs" } } */
+/* { dg-final { scan-assembler "zvmhsihs" } } */
+/* { dg-final { scan-assembler "zvmhsuihs" } } */
+/* { dg-final { scan-assembler "zvmhuiaah" } } */
+/* { dg-final { scan-assembler "zvmhuiaah" } } */
+/* { dg-final { scan-assembler "zvmhuiaah" } } */
+/* { dg-final { scan-assembler "zvmhuianh" } } */
+/* { dg-final { scan-assembler "zvmhuianh" } } */
+/* { dg-final { scan-assembler "zvmhuianh" } } */
+/* { dg-final { scan-assembler "zvmhuiaahs" } } */
+/* { dg-final { scan-assembler "zvmhuianhs" } } */
+/* { dg-final { scan-assembler "zvmhsiaahs" } } */
+/* { dg-final { scan-assembler "zvmhsianhs" } } */
+/* { dg-final { scan-assembler "zvmhsuiaahs" } } */
+/* { dg-final { scan-assembler "zvmhsuianhs" } } */
+/* { dg-final { scan-assembler "zvmhsfh" } } */
+/* { dg-final { scan-assembler "zvmhsfrh" } } */
+/* { dg-final { scan-assembler "zvmhsfaahs" } } */
+/* { dg-final { scan-assembler "zvmhsfraahs" } } */
+/* { dg-final { scan-assembler "zvmhsfanhs" } } */
+/* { dg-final { scan-assembler "zvmhsfranhs" } } */
+/* { dg-final { scan-assembler "zvdotphaui" } } */
+/* { dg-final { scan-assembler "zvdotphauis" } } */
+/* { dg-final { scan-assembler "zvdotphasi" } } */
+/* { dg-final { scan-assembler "zvdotphasis" } } */
+/* { dg-final { scan-assembler "zvdotphasui" } } */
+/* { dg-final { scan-assembler "zvdotphasuis" } } */
+/* { dg-final { scan-assembler "zvdotphauiaa" } } */
+/* { dg-final { scan-assembler "zvdotphauiaas" } } */
+/* { dg-final { scan-assembler "zvdotphauian" } } */
+/* { dg-final { scan-assembler "zvdotphauians" } } */
+/* { dg-final { scan-assembler "zvdotphasiaa" } } */
+/* { dg-final { scan-assembler "zvdotphasiaas" } } */
+/* { dg-final { scan-assembler "zvdotphasian" } } */
+/* { dg-final { scan-assembler "zvdotphasians" } } */
+/* { dg-final { scan-assembler "zvdotphasuiaa" } } */
+/* { dg-final { scan-assembler "zvdotphasuiaas" } } */
+/* { dg-final { scan-assembler "zvdotphasuian" } } */
+/* { dg-final { scan-assembler "zvdotphasuians" } } */
+/* { dg-final { scan-assembler "zvdotphasfs" } } */
+/* { dg-final { scan-assembler "zvdotphasfrs" } } */
+/* { dg-final { scan-assembler "zvdotphxasfs" } } */
+/* { dg-final { scan-assembler "zvdotphxasfrs" } } */
+/* { dg-final { scan-assembler "zvdotphasfaas" } } */
+/* { dg-final { scan-assembler "zvdotphasfraas" } } */
+/* { dg-final { scan-assembler "zvdotphasfans" } } */
+/* { dg-final { scan-assembler "zvdotphasfrans" } } */
+/* { dg-final { scan-assembler "zvdotphxasfaas" } } */
+/* { dg-final { scan-assembler "zvdotphxasfraas" } } */
+/* { dg-final { scan-assembler "zvdotphxasfans" } } */
+/* { dg-final { scan-assembler "zvdotphxasfrans" } } */
+/* { dg-final { scan-assembler "zvdotphxaui" } } */
+/* { dg-final { scan-assembler "zvdotphxauis" } } */
+/* { dg-final { scan-assembler "zvdotphxasi" } } */
+/* { dg-final { scan-assembler "zvdotphxasis" } } */
+/* { dg-final { scan-assembler "zvdotphxasui" } } */
+/* { dg-final { scan-assembler "zvdotphxasuis" } } */
+/* { dg-final { scan-assembler "zvdotphxauiaa" } } */
+/* { dg-final { scan-assembler "zvdotphxauiaas" } } */
+/* { dg-final { scan-assembler "zvdotphxauian" } } */
+/* { dg-final { scan-assembler "zvdotphxauians" } } */
+/* { dg-final { scan-assembler "zvdotphxasiaa" } } */
+/* { dg-final { scan-assembler "zvdotphxasiaas" } } */
+/* { dg-final { scan-assembler "zvdotphxasian" } } */
+/* { dg-final { scan-assembler "zvdotphxasians" } } */
+/* { dg-final { scan-assembler "zvdotphxasuiaa" } } */
+/* { dg-final { scan-assembler "zvdotphxasuiaas" } } */
+/* { dg-final { scan-assembler "zvdotphxasuian" } } */
+/* { dg-final { scan-assembler "zvdotphxasuians" } } */
+/* { dg-final { scan-assembler "zvdotphsui" } } */
+/* { dg-final { scan-assembler "zvdotphssi" } } */
+/* { dg-final { scan-assembler "zvdotphssui" } } */
+/* { dg-final { scan-assembler "zvdotphsuis" } } */
+/* { dg-final { scan-assembler "zvdotphssis" } } */
+/* { dg-final { scan-assembler "zvdotphssuis" } } */
+/* { dg-final { scan-assembler "zvdotphsuiaa" } } */
+/* { dg-final { scan-assembler "zvdotphsuian" } } */
+/* { dg-final { scan-assembler "zvdotphssiaa" } } */
+/* { dg-final { scan-assembler "zvdotphssian" } } */
+/* { dg-final { scan-assembler "zvdotphssuiaa" } } */
+/* { dg-final { scan-assembler "zvdotphssuian" } } */
+/* { dg-final { scan-assembler "zvdotphsuiaas" } } */
+/* { dg-final { scan-assembler "zvdotphsuians" } } */
+/* { dg-final { scan-assembler "zvdotphssiaas" } } */
+/* { dg-final { scan-assembler "zvdotphssians" } } */
+/* { dg-final { scan-assembler "zvdotphssuiaas" } } */
+/* { dg-final { scan-assembler "zvdotphssuians" } } */
+/* { dg-final { scan-assembler "zvdotphssfs" } } */
+/* { dg-final { scan-assembler "zvdotphssfrs" } } */
+/* { dg-final { scan-assembler "zvdotphssfaas" } } */
+/* { dg-final { scan-assembler "zvdotphssfraas" } } */
+/* { dg-final { scan-assembler "zvdotphssfans" } } */
+/* { dg-final { scan-assembler "zvdotphssfrans" } } */
+/* { dg-final { scan-assembler "zmwluiaa" } } */
+/* { dg-final { scan-assembler "zmwluiaa" } } */
+/* { dg-final { scan-assembler "zmwluiaa" } } */
+/* { dg-final { scan-assembler "zmwluian" } } */
+/* { dg-final { scan-assembler "zmwluian" } } */
+/* { dg-final { scan-assembler "zmwluian" } } */
+/* { dg-final { scan-assembler "zmwluis" } } */
+/* { dg-final { scan-assembler "zmwlsis" } } */
+/* { dg-final { scan-assembler "zmwlsuis" } } */
+/* { dg-final { scan-assembler "zmwlsiaas" } } */
+/* { dg-final { scan-assembler "zmwlsians" } } */
+/* { dg-final { scan-assembler "zmwlsuiaas" } } */
+/* { dg-final { scan-assembler "zmwlsuians" } } */
+/* { dg-final { scan-assembler "zmwluiaas" } } */
+/* { dg-final { scan-assembler "zmwluians" } } */
+/* { dg-final { scan-assembler "zmwsf" } } */
+/* { dg-final { scan-assembler "zmwsfr" } } */
+/* { dg-final { scan-assembler "zmwsfaas" } } */
+/* { dg-final { scan-assembler "zmwsfraas" } } */
+/* { dg-final { scan-assembler "zmwsfans" } } */
+/* { dg-final { scan-assembler "zmwsfrans" } } */
+/* { dg-final { scan-assembler "zaddwus" } } */
+/* { dg-final { scan-assembler "zsubfwus" } } */
+/* { dg-final { scan-assembler "zaddwss" } } */
+/* { dg-final { scan-assembler "zsubfwss" } } */
+/* { dg-final { scan-assembler "zaddheuw" } } */
+/* { dg-final { scan-assembler "zsubfheuw" } } */
+/* { dg-final { scan-assembler "zaddhesw" } } */
+/* { dg-final { scan-assembler "zsubfhesw" } } */
+/* { dg-final { scan-assembler "zaddhouw" } } */
+/* { dg-final { scan-assembler "zsubfhouw" } } */
+/* { dg-final { scan-assembler "zaddhosw" } } */
+/* { dg-final { scan-assembler "zsubfhosw" } } */
+/* { dg-final { scan-assembler "zpkswgshfrs" } } */
+/* { dg-final { scan-assembler "zpkswgswfrs" } } */
+/* { dg-final { scan-assembler "zvselh" } } */
+/* { dg-final { scan-assembler "zxtrw" } } */
+/* { dg-final { scan-assembler "zbrminc" } } */
+/* { dg-final { scan-assembler "zcircinc" } } */
+/* { dg-final { scan-assembler "zlddx" } } */
+/* { dg-final { scan-assembler "zldd" } } */
+/* { dg-final { scan-assembler "zldwx" } } */
+/* { dg-final { scan-assembler "zldw" } } */
+/* { dg-final { scan-assembler "zldhx" } } */
+/* { dg-final { scan-assembler "zldh" } } */
+/* { dg-final { scan-assembler "zlwgsfdx" } } */
+/* { dg-final { scan-assembler "zlwgsfd" } } */
+/* { dg-final { scan-assembler "zlwwosdx" } } */
+/* { dg-final { scan-assembler "zlwwosd" } } */
+/* { dg-final { scan-assembler "zlwhsplatwdx" } } */
+/* { dg-final { scan-assembler "zlwhsplatwd" } } */
+/* { dg-final { scan-assembler "zlwhsplatdx" } } */
+/* { dg-final { scan-assembler "zlwhsplatd" } } */
+/* { dg-final { scan-assembler "zlwhgwsfdx" } } */
+/* { dg-final { scan-assembler "zlwhgwsfd" } } */
+/* { dg-final { scan-assembler "zlwhedx" } } */
+/* { dg-final { scan-assembler "zlwhed" } } */
+/* { dg-final { scan-assembler "zlwhosdx" } } */
+/* { dg-final { scan-assembler "zlwhosd" } } */
+/* { dg-final { scan-assembler "zlwhoudx" } } */
+/* { dg-final { scan-assembler "zlwhoud" } } */
+/* { dg-final { scan-assembler "zlwhx" } } */
+/* { dg-final { scan-assembler "zlwh" } } */
+/* { dg-final { scan-assembler "zlwwx" } } */
+/* { dg-final { scan-assembler "zlww" } } */
+/* { dg-final { scan-assembler "zlhgwsfx" } } */
+/* { dg-final { scan-assembler "zlhgwsf" } } */
+/* { dg-final { scan-assembler "zlhhsplatx" } } */
+/* { dg-final { scan-assembler "zlhhsplat" } } */
+/* { dg-final { scan-assembler "zstddx" } } */
+/* { dg-final { scan-assembler "zstdd" } } */
+/* { dg-final { scan-assembler "zstdwx" } } */
+/* { dg-final { scan-assembler "zstdw" } } */
+/* { dg-final { scan-assembler "zstdhx" } } */
+/* { dg-final { scan-assembler "zstdh" } } */
+/* { dg-final { scan-assembler "zstwhedx" } } */
+/* { dg-final { scan-assembler "zstwhed" } } */
+/* { dg-final { scan-assembler "zstwhodx" } } */
+/* { dg-final { scan-assembler "zstwhod" } } */
+/* { dg-final { scan-assembler "zlhhex" } } */
+/* { dg-final { scan-assembler "zlhhe" } } */
+/* { dg-final { scan-assembler "zlhhosx" } } */
+/* { dg-final { scan-assembler "zlhhos" } } */
+/* { dg-final { scan-assembler "zlhhoux" } } */
+/* { dg-final { scan-assembler "zlhhou" } } */
+/* { dg-final { scan-assembler "zsthex" } } */
+/* { dg-final { scan-assembler "zsthe" } } */
+/* { dg-final { scan-assembler "zsthox" } } */
+/* { dg-final { scan-assembler "zstho" } } */
+/* { dg-final { scan-assembler "zstwhx" } } */
+/* { dg-final { scan-assembler "zstwh" } } */
+/* { dg-final { scan-assembler "zstwwx" } } */
+/* { dg-final { scan-assembler "zstww" } } */
+/* { dg-final { scan-assembler "zlddmx" } } */
+/* { dg-final { scan-assembler "zlddu" } } */
+/* { dg-final { scan-assembler "zldwmx" } } */
+/* { dg-final { scan-assembler "zldwu" } } */
+/* { dg-final { scan-assembler "zldhmx" } } */
+/* { dg-final { scan-assembler "zldhu" } } */
+/* { dg-final { scan-assembler "zlwgsfdmx" } } */
+/* { dg-final { scan-assembler "zlwgsfd" } } */
+/* { dg-final { scan-assembler "zlwwosdmx" } } */
+/* { dg-final { scan-assembler "zlwwosd" } } */
+/* { dg-final { scan-assembler "zlwhsplatwdmx" } } */
+/* { dg-final { scan-assembler "zlwhsplatwd" } } */
+/* { dg-final { scan-assembler "zlwhsplatdmx" } } */
+/* { dg-final { scan-assembler "zlwhsplatd" } } */
+/* { dg-final { scan-assembler "zlwhgwsfdmx" } } */
+/* { dg-final { scan-assembler "zlwhgwsfd" } } */
+/* { dg-final { scan-assembler "zlwhedmx" } } */
+/* { dg-final { scan-assembler "zlwhed" } } */
+/* { dg-final { scan-assembler "zlwhosdmx" } } */
+/* { dg-final { scan-assembler "zlwhosd" } } */
+/* { dg-final { scan-assembler "zlwhoudmx" } } */
+/* { dg-final { scan-assembler "zlwhoud" } } */
+/* { dg-final { scan-assembler "zlwhmx" } } */
+/* { dg-final { scan-assembler "zlwh" } } */
+/* { dg-final { scan-assembler "zlwwmx" } } */
+/* { dg-final { scan-assembler "zlww" } } */
+/* { dg-final { scan-assembler "zlhgwsfmx" } } */
+/* { dg-final { scan-assembler "zlhgwsf" } } */
+/* { dg-final { scan-assembler "zlhhsplatmx" } } */
+/* { dg-final { scan-assembler "zlhhsplat" } } */
+/* { dg-final { scan-assembler "zlhhemx" } } */
+/* { dg-final { scan-assembler "zlhhe" } } */
+/* { dg-final { scan-assembler "zlhhosmx" } } */
+/* { dg-final { scan-assembler "zlhhos" } } */
+/* { dg-final { scan-assembler "zlhhoumx" } } */
+/* { dg-final { scan-assembler "zlhhou" } } */
+/* { dg-final { scan-assembler "zstddmx" } } */
+/* { dg-final { scan-assembler "zstddu" } } */
+/* { dg-final { scan-assembler "zstdwmx" } } */
+/* { dg-final { scan-assembler "zstdwu" } } */
+/* { dg-final { scan-assembler "zstdhmx" } } */
+/* { dg-final { scan-assembler "zstdhu" } } */
+/* { dg-final { scan-assembler "zstwhedmx" } } */
+/* { dg-final { scan-assembler "zstwhed" } } */
+/* { dg-final { scan-assembler "zstwhodmx" } } */
+/* { dg-final { scan-assembler "zstwhod" } } */
+/* { dg-final { scan-assembler "zsthemx" } } */
+/* { dg-final { scan-assembler "zsthe" } } */
+/* { dg-final { scan-assembler "zsthomx" } } */
+/* { dg-final { scan-assembler "zstho" } } */
+/* { dg-final { scan-assembler "zstwhmx" } } */
+/* { dg-final { scan-assembler "zstwh" } } */
+/* { dg-final { scan-assembler "zstwwmx" } } */
+/* { dg-final { scan-assembler "zstww" } } */
 
-void use_builtins (void * ptr_a, void * ptr_b, void * ptr_c)
+#include <stdint.h>
+
+void use_builtins (uint32_t ptr_a, uint32_t ptr_b, uint32_t ptr_c)
 {
-/* input variables */
-volatile __lsp32_16__  in32_16_a, in32_16_b, in32_16_c;
-volatile __lsp32_32__  in32_32_a, in32_32_b, in32_32_c;
-volatile __lsp5_simm__ in5_simm = -1;
-volatile __lsp5_uimm__ in5_uimm = 31;
-volatile __lsp4_uimm__ in4_uimm = 15;
-volatile __lsp64_64__  in64_64;
-volatile __lsp64_32__  in64_32;
-volatile __lsp2_selmode__ in2_selmode;
-volatile __lsp3_cmpsel__ in3_cmpsel;
-volatile __lsp2_offset__ in2_offset;
+  /* input variables */
+  volatile uint32_t in32_16_a, in32_16_b, in32_16_c, in32_16_d;
+  volatile uint32_t in32_32_a, in32_32_b, in32_32_c;
+  volatile uint64_t in64_64;
+  volatile uint64_t in64_32;
+#define in5_simm     -1
+#define in5_uimm     31
+#define in4_uimm     15
+#define in2_oft       3
+
+  /* out variables */
+  volatile uint32_t out32_16;
+  volatile uint32_t out32_32;
+  volatile uint64_t out64_32;
+  volatile uint64_t out64_64;
+  volatile int      o_int;
+
+  // Sorted by order in manual
+  out32_32 = __builtin_lsp_zbrminc           ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zcircinc          ( in32_32_a, in32_32_b );
+  out32_16 = __builtin_lsp_zvabsh            ( in32_16_a );
+  out32_16 = __builtin_lsp_zvabshs           ( in32_16_a );
+  out32_32 = __builtin_lsp_zabsw             ( in32_32_a );
+  out32_32 = __builtin_lsp_zabsws            ( in32_32_a );
+  out64_64 = __builtin_lsp_zaddd             ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zadddss           ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zadddus           ( in64_64, in32_32_b, in32_32_c );
+  out32_16 = __builtin_lsp_zvaddh            ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvaddhss          ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvaddhus          ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvaddhx           ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvaddhxss         ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvaddih           ( in32_16_a, in5_uimm );
+  out32_16 = __builtin_lsp_zvaddsubfh        ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvaddsubfhss      ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvaddsubfhx       ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvaddsubfhxss     ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zaddhesw          ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zaddheuw          ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zaddhosw          ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zaddhouw          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvaddw            ( in64_32, in32_32_b, in32_32_c );
+  out64_32 = __builtin_lsp_zvaddsubfw        ( in64_32, in32_32_b, in32_32_c );
+  out64_32 = __builtin_lsp_zvaddsubfwss      ( in64_32, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zaddwgsf          ( in32_32_a, in32_32_b );
+  out64_64 = __builtin_lsp_zaddwgsi          ( in32_32_a, in32_32_b );
+  out64_64 = __builtin_lsp_zaddwgui          ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zaddwss           ( in32_32_a, in32_32_b );
+  out64_32 = __builtin_lsp_zvaddwss          ( in64_32, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zaddwus           ( in32_32_a, in32_32_b );
+  out64_32 = __builtin_lsp_zvaddwus          ( in64_32, in32_32_b, in32_32_c );
+
+  out32_16 = __builtin_lsp_zvselect_eqh      (in32_16_a, in32_16_b, in32_16_c, in32_16_d);
+  out32_16 = __builtin_lsp_zvselect_gths     (in32_16_a, in32_16_b, in32_16_c, in32_16_d);
+  out32_16 = __builtin_lsp_zvselect_gthu     (in32_16_a, in32_16_b, in32_16_c, in32_16_d);
+  out32_16 = __builtin_lsp_zvselect_lths     (in32_16_a, in32_16_b, in32_16_c, in32_16_d);
+  out32_16 = __builtin_lsp_zvselect_lthu     (in32_16_a, in32_16_b, in32_16_c, in32_16_d);
+
+  o_int = __builtin_lsp_zvcmpeqh          (__pred_any,   in32_16_a, in32_16_b);
+  o_int = __builtin_lsp_zvcmpgths         (__pred_any,   in32_16_a, in32_16_b);
+  o_int = __builtin_lsp_zvcmpgthu         (__pred_all,   in32_16_a, in32_16_b); 
+  o_int = __builtin_lsp_zvcmplths         (__pred_upper, in32_16_a, in32_16_b);
+  o_int = __builtin_lsp_zvcmplthu         (__pred_lower, in32_16_a, in32_16_b); 
+
+  out32_16 = __builtin_lsp_zvcntlsh          ( in32_16_a );
+  out32_32 = __builtin_lsp_zcntlsw           ( in32_32_a );
+  out32_16 = __builtin_lsp_zvcntlzh          ( in32_16_a );
+  out32_32 = __builtin_lsp_zdivwsf           ( in32_32_a, in32_32_b );
+  out32_16 = __builtin_lsp_zvmergehih        ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvmergehiloh      ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvmergeloh        ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvmergelohih      ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvnegh            ( in32_16_a );
+  out32_16 = __builtin_lsp_zvnegho           ( in32_16_a );
+  out32_16 = __builtin_lsp_zvneghos          ( in32_16_a );
+  out32_16 = __builtin_lsp_zvneghs           ( in32_16_a );
+  out32_32 = __builtin_lsp_znegws            ( in32_32_a );
+  out32_16 = __builtin_lsp_zvpkshgwshfrs     ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zpkswgshfrs       ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zpkswgswfrs       ( in32_32_a, in32_32_b );
+  out32_16 = __builtin_lsp_zvpkswshfrs       ( in32_32_a, in32_32_b );
+  out32_16 = __builtin_lsp_zvpkswshs         ( in32_32_a, in32_32_b );
+  out32_16 = __builtin_lsp_zvpkswuhs         ( in32_32_a, in32_32_b );
+  out32_16 = __builtin_lsp_zvpkuwuhs         ( in32_32_a, in32_32_b );
+  out32_16 = __builtin_lsp_zvrlh             ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvrlhi            ( in32_16_a, in4_uimm );
+  out32_32 = __builtin_lsp_zrndwh            ( in32_32_a );
+  out32_32 = __builtin_lsp_zrndwhss          ( in32_32_a );
+  out32_32 = __builtin_lsp_zsatsdsw          ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zsatsduw          ( in32_32_a, in32_32_b );
+  out32_16 = __builtin_lsp_zvsatshuh         ( in32_16_a );
+  out32_32 = __builtin_lsp_zsatswsh          ( in32_32_a );
+  out32_32 = __builtin_lsp_zsatswuh          ( in32_32_a );
+  out32_32 = __builtin_lsp_zsatswuw          ( in32_32_a );
+  out32_32 = __builtin_lsp_zsatuduw          ( in32_32_a, in32_32_b );
+  out32_16 = __builtin_lsp_zvsatuhsh         ( in32_16_a );
+  out32_32 = __builtin_lsp_zsatuwsw          ( in32_32_a );
+  out32_32 = __builtin_lsp_zsatuwsh          ( in32_32_a );
+  out32_32 = __builtin_lsp_zsatuwuh          ( in32_32_a );
+  out32_16 = __builtin_lsp_zvselh            ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvslh             ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvslhi            ( in32_16_a, in4_uimm );
+  out32_16 = __builtin_lsp_zvslhss           ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvslhiss          ( in32_16_a, in4_uimm );
+  out32_16 = __builtin_lsp_zvslhus           ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvslhius          ( in32_16_a, in4_uimm );
+  out32_32 = __builtin_lsp_zslwss            ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zslwiss           ( in32_32_a, in4_uimm );
+  out32_32 = __builtin_lsp_zslwus            ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zslwius           ( in32_32_a, in4_uimm );
+  out32_16 = __builtin_lsp_zvsplatfih        ( in5_simm );
+  out32_16 = __builtin_lsp_zvsplatih         ( in5_simm );
+  out32_16 = __builtin_lsp_zvsrhis           ( in32_16_a, in4_uimm );
+  out32_16 = __builtin_lsp_zvsrhiu           ( in32_16_a, in4_uimm );
+  out32_16 = __builtin_lsp_zvsrhs            ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvsrhu            ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvsubfaddh        ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvsubfaddhss      ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvsubfaddhx       ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvsubfaddhxss     ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zsubfd            ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zsubfdss          ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zsubfdus          ( in64_64, in32_32_b, in32_32_c );
+  out32_16 = __builtin_lsp_zvsubfh           ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zsubfhesw         ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zsubfheuw         ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zsubfhosw         ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zsubfhouw         ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvsubfhss         ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvsubfhus         ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvsubfhx          ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvsubfhxss        ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvsubfw           ( in64_32, in32_32_b, in32_32_c );
+  out64_32 = __builtin_lsp_zvsubfaddw        ( in64_32, in32_32_b, in32_32_c );
+  out64_32 = __builtin_lsp_zvsubfaddwss      ( in64_32, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zsubfwgsf         ( in32_32_a, in32_32_b );
+  out64_64 = __builtin_lsp_zsubfwgsi         ( in32_32_a, in32_32_b );
+  out64_64 = __builtin_lsp_zsubfwgui         ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zsubfwss          ( in32_32_a, in32_32_b );
+  out64_32 = __builtin_lsp_zvsubfwss         ( in64_32, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zsubfwus          ( in32_32_a, in32_32_b );
+  out64_32 = __builtin_lsp_zvsubfwus         ( in64_32, in32_32_b, in32_32_c );
+  out32_16 = __builtin_lsp_zvsubifh          ( in32_16_a, in5_uimm );
+  out64_32 = __builtin_lsp_zvunpkhgwsf       ( in32_16_a );
+  out64_32 = __builtin_lsp_zvunpkhsf         ( in32_16_a );
+  out64_32 = __builtin_lsp_zvunpkhsi         ( in32_16_a );
+  out64_32 = __builtin_lsp_zvunpkhui         ( in32_16_a );
+  out64_64 = __builtin_lsp_zunpkwgsf         ( in32_32_a );
+  out32_32 = __builtin_lsp_zxtrw             ( in32_32_a, in32_32_b, in2_oft );
+
+  out64_64 = __builtin_lsp_zldd              ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlddu             ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlddx             ( ptr_a, in32_32_b );
+  out64_64 = __builtin_lsp_zlddmx            ( in32_32_a, ptr_b );
+  out64_64 = __builtin_lsp_zldh              ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zldhu             ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zldhx             ( ptr_a, in32_32_b );
+  out64_64 = __builtin_lsp_zldhmx            ( in32_32_a, ptr_b );
+  out64_32 = __builtin_lsp_zldw              ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zldwu             ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zldwx             ( ptr_a, in32_32_b );
+  out64_32 = __builtin_lsp_zldwmx            ( in32_32_a, ptr_b );
+  out32_32 = __builtin_lsp_zlhgwsf           ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlhgwsfu          ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlhgwsfx          ( ptr_a, in32_32_b );
+  out32_32 = __builtin_lsp_zlhgwsfmx         ( in32_32_a, ptr_b );
+  out32_32 = __builtin_lsp_zlhhe             ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlhheu            ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlhhex            ( ptr_a, in32_32_b );
+  out32_32 = __builtin_lsp_zlhhemx           ( in32_32_a, ptr_b );
+  out32_32 = __builtin_lsp_zlhhos            ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlhhosu           ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlhhosx           ( ptr_a, in32_32_b );
+  out32_32 = __builtin_lsp_zlhhosmx          ( in32_32_a, ptr_b );
+  out32_32 = __builtin_lsp_zlhhou            ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlhhouu           ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlhhoux           ( ptr_a, in32_32_b );
+  out32_32 = __builtin_lsp_zlhhoumx          ( in32_32_a, ptr_b );
+  out32_16 = __builtin_lsp_zlhhsplat         ( ptr_a, in5_uimm );
+  out32_16 = __builtin_lsp_zlhhsplatu        ( ptr_a, in5_uimm );
+  out32_16 = __builtin_lsp_zlhhsplatx        ( ptr_a, in32_32_b );
+  out32_16 = __builtin_lsp_zlhhsplatmx       ( in32_32_a, ptr_b );
+  out64_64 = __builtin_lsp_zlwgsfd           ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlwgsfdu          ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlwgsfdx          ( ptr_a, in32_32_b );
+  out64_64 = __builtin_lsp_zlwgsfdmx         ( in32_32_a, ptr_b );
+  out32_32 = __builtin_lsp_zlwh              ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlwhu             ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlwhx             ( ptr_a, in32_32_b );
+  out32_32 = __builtin_lsp_zlwhmx            ( in32_32_a, ptr_b );
+  out64_32 = __builtin_lsp_zlwhed            ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zlwhedu           ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zlwhedx           ( ptr_a, in32_32_b );
+  out64_32 = __builtin_lsp_zlwhedmx          ( in32_32_a, ptr_b );
+  out64_32 = __builtin_lsp_zlwhgwsfd         ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zlwhgwsfdu        ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zlwhgwsfdx        ( ptr_a, in32_32_b );
+  out64_32 = __builtin_lsp_zlwhgwsfdmx       ( in32_32_a, ptr_b );
+  out64_32 = __builtin_lsp_zlwhosd           ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zlwhosdu          ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zlwhosdx          ( ptr_a, in32_32_b );
+  out64_32 = __builtin_lsp_zlwhosdmx         ( in32_32_a, ptr_b );
+  out64_32 = __builtin_lsp_zlwhoud           ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zlwhoudu          ( ptr_a, in5_uimm );
+  out64_32 = __builtin_lsp_zlwhoudx          ( ptr_a, in32_32_b );
+  out64_32 = __builtin_lsp_zlwhoudmx         ( in32_32_a, ptr_b );
+  out64_64 = __builtin_lsp_zlwhsplatd        ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlwhsplatdu       ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlwhsplatdx       ( ptr_a, in32_32_b );
+  out64_64 = __builtin_lsp_zlwhsplatdmx      ( in32_32_a, ptr_b );
+  out64_64 = __builtin_lsp_zlwhsplatwd       ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlwhsplatwdu      ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlwhsplatwdx      ( ptr_a, in32_32_b );
+  out64_64 = __builtin_lsp_zlwhsplatwdmx     ( in32_32_a, ptr_b );
+  out32_32 = __builtin_lsp_zlww              ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlwwu             ( ptr_a, in5_uimm );
+  out32_32 = __builtin_lsp_zlwwx             ( ptr_a, in32_32_b );
+  out32_32 = __builtin_lsp_zlwwmx            ( in32_32_a, ptr_b );
+  out64_64 = __builtin_lsp_zlwwosd           ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlwwosdu          ( ptr_a, in5_uimm );
+  out64_64 = __builtin_lsp_zlwwosdx          ( ptr_a, in32_32_b );
+  out64_64 = __builtin_lsp_zlwwosdmx         ( in32_32_a, ptr_b );
+
+             __builtin_lsp_zstdd             ( in64_64, ptr_b, in5_uimm );
+             __builtin_lsp_zstddu            ( in64_64, ptr_b, in5_uimm );
+             __builtin_lsp_zstddx            ( in64_64, ptr_b, in32_32_c );
+             __builtin_lsp_zstddmx           ( in64_64, in32_32_b, ptr_c );
+             __builtin_lsp_zstdh             ( in64_64, ptr_b, in5_uimm );
+             __builtin_lsp_zstdhu            ( in64_64, ptr_b, in5_uimm );
+             __builtin_lsp_zstdhx            ( in64_64, ptr_b, in32_32_c );
+             __builtin_lsp_zstdhmx           ( in64_64, in32_32_b, ptr_c );
+             __builtin_lsp_zstdw             ( in64_64, ptr_b, in5_uimm );
+             __builtin_lsp_zstdwu            ( in64_64, ptr_b, in5_uimm );
+             __builtin_lsp_zstdwx            ( in64_64, ptr_b, in32_32_c );
+             __builtin_lsp_zstdwmx           ( in64_64, in32_32_b, ptr_c );
+             __builtin_lsp_zsthe             ( in32_16_a, ptr_b, in5_uimm );
+             __builtin_lsp_zstheu            ( in32_16_a, ptr_b, in5_uimm );
+             __builtin_lsp_zsthex            ( in32_16_a, ptr_b, in32_32_c );
+             __builtin_lsp_zsthemx           ( in32_16_a, in32_32_b, ptr_c );
+             __builtin_lsp_zstho             ( in32_16_a, ptr_b, in5_uimm );
+             __builtin_lsp_zsthou            ( in32_16_a, ptr_b, in5_uimm );
+             __builtin_lsp_zsthox            ( in32_16_a, ptr_b, in32_32_c );
+             __builtin_lsp_zsthomx           ( in32_16_a, in32_32_b, ptr_c );
+             __builtin_lsp_zstwh             ( in32_16_a, ptr_b, in5_uimm );
+             __builtin_lsp_zstwhu            ( in32_16_a, ptr_b, in5_uimm );
+             __builtin_lsp_zstwhx            ( in32_16_a, ptr_b, in32_32_c );
+             __builtin_lsp_zstwhmx           ( in32_16_a, in32_32_b, ptr_c );
+             __builtin_lsp_zstwhed           ( in64_32, ptr_b, in5_uimm );
+             __builtin_lsp_zstwhedu          ( in64_32, ptr_b, in5_uimm );
+             __builtin_lsp_zstwhedx          ( in64_32, ptr_b, in32_32_c );
+             __builtin_lsp_zstwhedmx         ( in64_32, in32_32_b, ptr_c );
+             __builtin_lsp_zstwhod           ( in64_32, ptr_b, in5_uimm );
+             __builtin_lsp_zstwhodu          ( in64_32, ptr_b, in5_uimm );
+             __builtin_lsp_zstwhodx          ( in64_32, ptr_b, in32_32_c );
+             __builtin_lsp_zstwhodmx         ( in64_32, in32_32_b, ptr_c );
+             __builtin_lsp_zstww             ( in32_32_a, ptr_b, in5_uimm );
+             __builtin_lsp_zstwwu            ( in32_32_a, ptr_b, in5_uimm );
+             __builtin_lsp_zstwwx            ( in32_32_a, ptr_b, in32_32_c );
+             __builtin_lsp_zstwwmx           ( in32_32_a, in32_32_b, ptr_c );
+
+  out64_64 = __builtin_lsp_zmhegsi           ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmhegsmf          ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmhegsui          ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmhegui           ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmheogsi          ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmheogsmf         ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmheogsui         ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmheogui          ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmhogsi           ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmhogsmf          ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmhogsui          ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zmhogui           ( in32_16_a, in32_16_b );
+
+  out64_64 = __builtin_lsp_zmhegsiaa         ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhegsmfaa        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhegsuiaa        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheguiaa         ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheogsiaa        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheogsmfaa       ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheogsuiaa       ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheoguiaa        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhogsiaa         ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhogsmfaa        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhogsuiaa        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhoguiaa         ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhegsian         ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhegsmfan        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhegsuian        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheguian         ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheogsian        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheogsmfan       ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheogsuian       ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmheoguian        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhogsian         ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhogsmfan        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhogsuian        ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zmhoguian         ( in64_64, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zmhegwsmf         ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmheogwsmf        ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhogwsmf         ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhegwsmfr        ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmheogwsmfr       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhogwsmfr        ( in32_16_a, in32_16_b );
+
+  out32_32 = __builtin_lsp_zmhegwsmfaa       ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheogwsmfaa      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhogwsmfaa       ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhegwsmfan       ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheogwsmfan      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhogwsmfan       ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhegwsmfraa      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheogwsmfraa     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhogwsmfraa      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhegwsmfran      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheogwsmfran     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhogwsmfran      ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zmhesf            ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmheosf           ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhosf            ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhesfr           ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmheosfr          ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhosfr           ( in32_16_a, in32_16_b );
+
+  out32_32 = __builtin_lsp_zmhesfaas         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosfaas        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosfaas         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhesfans         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosfans        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosfans         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhesfraas        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosfraas       ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosfraas        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhesfrans        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosfrans       ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosfrans        ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zmhesi            ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmheosi           ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhosi            ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhesui           ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmheosui          ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhosui           ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmheui            ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmheoui           ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zmhoui            ( in32_16_a, in32_16_b );
+
+  out32_32 = __builtin_lsp_zmhesiaa          ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosiaa         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosiaa          ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhesian          ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosian         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosian          ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhesuiaa         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosuiaa        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosuiaa         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhesuian         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosuian        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosuian         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheuiaa          ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheouiaa         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhouiaa          ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheuian          ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheouian         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhouian          ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zmhesiaas         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosiaas        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosiaas         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhesians         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosians        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosians         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhesuiaas        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosuiaas       ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosuiaas        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhesuians        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheosuians       ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhosuians        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheuiaas         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheouiaas        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhouiaas         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheuians         ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmheouians        ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zmhouians         ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_16 = __builtin_lsp_zvmhsfh           ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvmhsfrh          ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvmhsfaahs        ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhsfanhs        ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhsfraahs       ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhsfranhs       ( in32_16_a, in32_16_b, in32_16_c );
+
+  out32_16 = __builtin_lsp_zvmhsih           ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvmhsuih          ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvmhuih           ( in32_16_a, in32_16_b );
+
+  out32_16 = __builtin_lsp_zvmhsihs          ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvmhsuihs         ( in32_16_a, in32_16_b );
+  out32_16 = __builtin_lsp_zvmhuihs          ( in32_16_a, in32_16_b );
+
+  out32_16 = __builtin_lsp_zvmhsiaah         ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhsuiaah        ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhuiaah         ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhsianh         ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhsuianh        ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhuianh         ( in32_16_a, in32_16_b, in32_16_c );
+
+  out32_16 = __builtin_lsp_zvmhsiaahs        ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhsuiaahs       ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhuiaahs        ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhsianhs        ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhsuianhs       ( in32_16_a, in32_16_b, in32_16_c );
+  out32_16 = __builtin_lsp_zvmhuianhs        ( in32_16_a, in32_16_b, in32_16_c );
+
+  out64_64 = __builtin_lsp_zmwgsi            ( in32_32_a, in32_32_b );
+  out64_64 = __builtin_lsp_zmwgsui           ( in32_32_a, in32_32_b );
+  out64_64 = __builtin_lsp_zmwgui            ( in32_32_a, in32_32_b );
+
+  out64_64 = __builtin_lsp_zmwgsiaa          ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwgsian          ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwgsuiaa         ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwgsuian         ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwguiaa          ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwguian          ( in64_64, in32_32_b, in32_32_c );
+
+  out64_64 = __builtin_lsp_zmwgsiaas         ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwgsians         ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwgsuiaas        ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwgsuians        ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwguiaas         ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwguians         ( in64_64, in32_32_b, in32_32_c );
+
+  out64_64 = __builtin_lsp_zmwgsmf           ( in32_32_a, in32_32_b );
+  out64_64 = __builtin_lsp_zmwgsmfr          ( in32_32_a, in32_32_b );
+
+  out64_64 = __builtin_lsp_zmwgsmfaa         ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwgsmfan         ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwgsmfraa        ( in64_64, in32_32_b, in32_32_c );
+  out64_64 = __builtin_lsp_zmwgsmfran        ( in64_64, in32_32_b, in32_32_c );
+
+  out32_32 = __builtin_lsp_zmwlsis           ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zmwlsuis          ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zmwluis           ( in32_32_a, in32_32_b );
+
+  out32_32 = __builtin_lsp_zmwlsiaa          ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwlsuiaa         ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwluiaa          ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwlsian          ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwlsuian         ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwluian          ( in32_32_a, in32_32_b, in32_32_c );
+
+  out32_32 = __builtin_lsp_zmwlsiaas         ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwlsians         ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwlsuiaas        ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwlsuians        ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwluiaas         ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwluians         ( in32_32_a, in32_32_b, in32_32_c );
+
+  out32_32 = __builtin_lsp_zmwsf             ( in32_32_a, in32_32_b );
+  out32_32 = __builtin_lsp_zmwsfr            ( in32_32_a, in32_32_b );
+
+  out32_32 = __builtin_lsp_zmwsfaas          ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwsfans          ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwsfraas         ( in32_32_a, in32_32_b, in32_32_c );
+  out32_32 = __builtin_lsp_zmwsfrans         ( in32_32_a, in32_32_b, in32_32_c );
+
+  out64_32 = __builtin_lsp_zvmhulgwsmf       ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhllgwsmf       ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhuugwsmf       ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhxlgwsmf       ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhulgwsmfr      ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhllgwsmfr      ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhuugwsmfr      ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhxlgwsmfr      ( in32_16_a, in32_16_b );
+
+  out64_32 = __builtin_lsp_zvmhulgwsmfaa     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllgwsmfaa     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuugwsmfaa     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlgwsmfaa     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulgwsmfraa    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllgwsmfraa    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuugwsmfraa    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlgwsmfraa    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulgwsmfan     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllgwsmfan     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuugwsmfan     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlgwsmfan     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulgwsmfran    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllgwsmfran    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuugwsmfran    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlgwsmfran    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulgwsmfanp    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllgwsmfanp    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuugwsmfanp    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlgwsmfanp    ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulgwsmfranp   ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllgwsmfranp   ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuugwsmfranp   ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlgwsmfranp   ( in64_32, in32_16_b, in32_16_c );
+
+  out64_32 = __builtin_lsp_zvmhulsf          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhllsf          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhuusf          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhxlsf          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhulsfr         ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhllsfr         ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhuusfr         ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhxlsfr         ( in32_16_a, in32_16_b );
+
+  out64_32 = __builtin_lsp_zvmhulsfaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsfaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusfaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsfaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsfans       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsfans       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusfans       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsfans       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsfanps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsfanps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusfanps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsfanps      ( in64_32, in32_16_b, in32_16_c );
+
+  out64_32 = __builtin_lsp_zvmhulsfraas      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsfraas      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusfraas      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsfraas      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsfrans      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsfrans      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusfrans      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsfrans      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsfranps     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsfranps     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusfranps     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsfranps     ( in64_32, in32_16_b, in32_16_c );
+
+  out64_32 = __builtin_lsp_zvmhulsi          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhllsi          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhuusi          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhxlsi          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhulsui         ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhllsui         ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhuusui         ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhxlsui         ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhului          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhllui          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhuuui          ( in32_16_a, in32_16_b );
+  out64_32 = __builtin_lsp_zvmhxlui          ( in32_16_a, in32_16_b );
+
+  out64_32 = __builtin_lsp_zvmhulsiaa        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsiaa        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusiaa        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsiaa        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsian        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsian        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusian        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsian        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsianp       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsianp       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusianp       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsianp       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsuiaa       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsuiaa       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusuiaa       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsuiaa       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsuian       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsuian       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusuian       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsuian       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsuianp      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsuianp      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusuianp      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsuianp      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuluiaa        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhlluiaa        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuuuiaa        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxluiaa        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuluian        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhlluian        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuuuian        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxluian        ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuluianp       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhlluianp       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuuuianp       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxluianp       ( in64_32, in32_16_b, in32_16_c );
+
+  out64_32 = __builtin_lsp_zvmhulsiaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsiaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusiaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsiaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsians       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsians       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusians       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsians       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsianps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsianps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusianps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsianps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsuiaas      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsuiaas      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusuiaas      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsuiaas      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsuians      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsuians      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusuians      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsuians      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhulsuianps     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhllsuianps     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuusuianps     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxlsuianps     ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuluiaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhlluiaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuuuiaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxluiaas       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuluians       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhlluians       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuuuians       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxluians       ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuluianps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhlluianps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhuuuianps      ( in64_32, in32_16_b, in32_16_c );
+  out64_32 = __builtin_lsp_zvmhxluianps      ( in64_32, in32_16_b, in32_16_c );
+
+  out64_64 = __builtin_lsp_zvdotphgaui       ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphxgaui      ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphgasi       ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphxgasi      ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphgasui      ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphxgasui     ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphgasmf      ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphxgasmf     ( in32_16_a, in32_16_b );
+
+  out64_64 = __builtin_lsp_zvdotphgauiaa     ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphxgauiaa    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgasiaa     ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphxgasiaa    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgasuiaa    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphxgasuiaa   ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgasmfaa    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphxgasmfaa   ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgauian     ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphxgauian    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgasian     ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphxgasian    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgasuian    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphxgasuian   ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgasmfan    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphxgasmfan   ( in64_64, in32_16_b, in32_16_c );
+
+  out64_64 = __builtin_lsp_zvdotphgsui       ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphgssi       ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphgssui      ( in32_16_a, in32_16_b );
+  out64_64 = __builtin_lsp_zvdotphgssmf      ( in32_16_a, in32_16_b );
+
+  out64_64 = __builtin_lsp_zvdotphgsuiaa     ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgssiaa     ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgssuiaa    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgssmfaa    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgsuian     ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgssian     ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgssuian    ( in64_64, in32_16_b, in32_16_c );
+  out64_64 = __builtin_lsp_zvdotphgssmfan    ( in64_64, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zvdotphasfs       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxasfs      ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphasfrs      ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxasfrs     ( in32_16_a, in32_16_b );
+
+  out32_32 = __builtin_lsp_zvdotphasfaas     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasfaas    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasfans     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasfans    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasfraas    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasfraas   ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasfrans    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasfrans   ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zvdotphaui        ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxaui       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphasi        ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxasi       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphasui       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxasui      ( in32_16_a, in32_16_b );
+
+  out32_32 = __builtin_lsp_zvdotphauiaa      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxauiaa     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasiaa      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasiaa     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasuiaa     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasuiaa    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphauian      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxauian     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasian      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasian     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasuian     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasuian    ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zvdotphauis       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxauis      ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphasis       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxasis      ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphasuis      ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxasuis     ( in32_16_a, in32_16_b );
+
+  out32_32 = __builtin_lsp_zvdotphauiaas     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxauiaas    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasiaas     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasiaas    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasuiaas    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasuiaas   ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphauians     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxauians    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasians     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasians    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphasuians    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxasuians   ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zvdotphssfs       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphssfrs      ( in32_16_a, in32_16_b );
+
+  out32_32 = __builtin_lsp_zvdotphssfaas     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssfans     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssfraas    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssfrans    ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zvdotphsui        ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphssi        ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphssui       ( in32_16_a, in32_16_b );
+
+  out32_32 = __builtin_lsp_zvdotphsuiaa      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssiaa      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssuiaa     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphsuian      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssian      ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssuian     ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zvdotphsuis       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphssis       ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphssuis      ( in32_16_a, in32_16_b );
+
+  out32_32 = __builtin_lsp_zvdotphsuiaas     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssiaas     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssuiaas    ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphsuians     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssians     ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphssuians    ( in32_32_a, in32_16_b, in32_16_c );
+
+  out32_32 = __builtin_lsp_zvdotphgwasmf     ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxgwasmf    ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphgwasmfr    ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphxgwasmfr   ( in32_16_a, in32_16_b );
 
-/* out variables */
-volatile __lsp32_16__ out32_16;
-volatile __lsp32_32__ out32_32;
-volatile __lsp64_64__ out64_32;
-volatile __lsp64_64__ out64_64;
-volatile __lsp4_crd__ out4_crd;
+  out32_32 = __builtin_lsp_zvdotphgwasmfaa   ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxgwasmfaa  ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphgwasmfan   ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxgwasmfan  ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphgwasmfraa  ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxgwasmfraa ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphgwasmfran  ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphxgwasmfran ( in32_32_a, in32_16_b, in32_16_c );
 
+  out32_32 = __builtin_lsp_zvdotphgwssmf     ( in32_16_a, in32_16_b );
+  out32_32 = __builtin_lsp_zvdotphgwssmfr    ( in32_16_a, in32_16_b );
 
-out32_16 = __builtin_lsp_zvaddih           ( in32_16_a, in5_uimm );
-out32_16 = __builtin_lsp_zvsubifh          ( in32_16_a, in5_uimm );
-out32_16 = __builtin_lsp_zvaddh            ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsubfh           ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvaddsubfh        ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsubfaddh        ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvaddhx           ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsubfhx          ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvaddsubfhx       ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsubfaddhx       ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvaddhus          ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsubfhus         ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvaddhss          ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsubfhss         ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvaddsubfhss      ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsubfaddhss      ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvaddhxss         ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsubfhxss        ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvaddsubfhxss     ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsubfaddhxss     ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmergehih        ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmergeloh        ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmergehiloh      ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmergelohih      ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvpkshgwshfrs     ( in32_32_a, in32_32_b );
-out32_16 = __builtin_lsp_zvpkswshfrs       ( in32_32_a, in32_32_b );
-out32_16 = __builtin_lsp_zvpkswuhs         ( in32_32_a, in32_32_b );
-out32_16 = __builtin_lsp_zvpkswshs         ( in32_32_a, in32_32_b );
-out32_16 = __builtin_lsp_zvpkuwuhs         ( in32_32_a, in32_32_b );
-out32_16 = __builtin_lsp_zvsplatih         ( in5_simm );
-out32_16 = __builtin_lsp_zvsplatfih        ( in5_simm );
-out32_32 = __builtin_lsp_zcntlsw           ( in32_32_a );
-out32_16 = __builtin_lsp_zvcntlzh          ( in32_16_a );
-out32_16 = __builtin_lsp_zvcntlsh          ( in32_16_a );
-out32_32 = __builtin_lsp_znegws            ( in32_32_a );
-out32_16 = __builtin_lsp_zvnegh            ( in32_16_a );
-out32_16 = __builtin_lsp_zvneghs           ( in32_16_a );
-out32_16 = __builtin_lsp_zvnegho           ( in32_16_a );
-out32_16 = __builtin_lsp_zvneghos          ( in32_16_a );
-out32_16 = __builtin_lsp_zrndwh            ( in32_32_a );
-out32_16 = __builtin_lsp_zrndwhss          ( in32_32_a );
-out32_16 = __builtin_lsp_zvabsh            ( in32_16_a );
-out32_16 = __builtin_lsp_zvabshs           ( in32_16_a );
-out32_32 = __builtin_lsp_zabsw             ( in32_32_a );
-out32_32 = __builtin_lsp_zabsws            ( in32_32_a );
-out32_32 = __builtin_lsp_zsatswuw          ( in32_32_a );
-out32_32 = __builtin_lsp_zsatuwsw          ( in32_32_a );
-out32_16 = __builtin_lsp_zsatswuh          ( in32_32_a );
-out32_16 = __builtin_lsp_zsatswsh          ( in32_32_a );
-out32_16 = __builtin_lsp_zvsatshuh         ( in32_16_a );
-out32_16 = __builtin_lsp_zvsatuhsh         ( in32_16_a );
-out32_16 = __builtin_lsp_zsatuwuh          ( in32_32_a );
-out32_16 = __builtin_lsp_zsatuwsh          ( in32_32_a );
-out32_32 = __builtin_lsp_zsatsduw          ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zsatsdsw          ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zsatuduw          ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zdivwsf           ( in32_32_a, in32_32_b );
-out32_16 = __builtin_lsp_zvsrhu            ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsrhs            ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvsrhiu           ( in32_16_a, in4_uimm );
-out32_16 = __builtin_lsp_zvsrhis           ( in32_16_a, in4_uimm );
-out32_16 = __builtin_lsp_zvslh             ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvrlh             ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvslhi            ( in32_16_a, in4_uimm );
-out32_16 = __builtin_lsp_zvrlhi            ( in32_16_a, in4_uimm );
-out32_16 = __builtin_lsp_zvslhus           ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvslhss           ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvslhius          ( in32_16_a, in4_uimm );
-out32_16 = __builtin_lsp_zvslhiss          ( in32_16_a, in4_uimm );
-out32_32 = __builtin_lsp_zslwus            ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zslwss            ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zslwius           ( in32_32_a, in4_uimm );
-out32_32 = __builtin_lsp_zslwiss           ( in32_32_a, in4_uimm );
-out64_64 = __builtin_lsp_zaddwgui          ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zsubfwgui         ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zaddwgsi          ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zsubfwgsi         ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zaddwgsf          ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zsubfwgsf         ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zaddd             ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zsubfd            ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zadddss           ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zsubfdss          ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zadddus           ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zsubfdus          ( in64_64, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvaddsubfw        ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvsubfaddw        ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvaddw            ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvsubfw           ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvaddsubfwss      ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvsubfaddwss      ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvaddwss          ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvsubfwss         ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvaddwus          ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvsubfwus         ( in64_32, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvunpkhgwsf       ( in32_16_a );
-out64_32 = __builtin_lsp_zvunpkhsf         ( in32_16_a );
-out64_32 = __builtin_lsp_zvunpkhui         ( in32_16_a );
-out64_32 = __builtin_lsp_zvunpkhsi         ( in32_16_a );
-out64_32 = __builtin_lsp_zunpkwgsf         ( in32_32_a );
-out32_32 = __builtin_lsp_zvdotphgwasmf     ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphgwasmfr    ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxgwasmf    ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxgwasmfr   ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphgwssmf     ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphgwssmfr    ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphgwasmfaa   ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphgwasmfraa  ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphgwasmfan   ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphgwasmfran  ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxgwasmfaa  ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxgwasmfraa ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxgwasmfan  ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxgwasmfran ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphgwssmfaa   ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphgwssmfraa  ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphgwssmfan   ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphgwssmfran  ( in32_32_a, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulgwsmf       ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhulgwsmfr      ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhllgwsmf       ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhllgwsmfr      ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhuugwsmf       ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhuugwsmfr      ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhxlgwsmf       ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhxlgwsmfr      ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhulgwsmfaa     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulgwsmfraa    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulgwsmfan     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulgwsmfran    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulgwsmfanp    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulgwsmfranp   ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllgwsmfaa     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllgwsmfraa    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllgwsmfan     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllgwsmfran    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllgwsmfanp    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllgwsmfranp   ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuugwsmfaa     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuugwsmfraa    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuugwsmfan     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuugwsmfran    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuugwsmfanp    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuugwsmfranp   ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlgwsmfaa     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlgwsmfraa    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlgwsmfan     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlgwsmfran    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlgwsmfanp    ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlgwsmfranp   ( in64_32, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheogwsmf        ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmheogwsmfr       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhegwsmf         ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhegwsmfr        ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhogwsmf         ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhogwsmfr        ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmheogwsmfaa      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheogwsmfraa     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheogwsmfan      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheogwsmfran     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhegwsmfaa       ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhegwsmfraa      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhegwsmfan       ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhegwsmfran      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhogwsmfaa       ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhogwsmfraa      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhogwsmfan       ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhogwsmfran      ( in32_32_a, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhegui           ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmhegsi           ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmhegsui          ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmhegsmf          ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmheogui          ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmheogsi          ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmheogsui         ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmheogsmf         ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmhogui           ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmhogsi           ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmhogsui          ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmhogsmf          ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphgaui       ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphgasi       ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphgasui      ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphgasmf      ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphxgaui      ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphxgasi      ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphxgasui     ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphxgasmf     ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphgsui       ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphgssi       ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphgssui      ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zvdotphgssmf      ( in32_16_a, in32_16_b );
-out64_64 = __builtin_lsp_zmheguiaa         ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgauiaa     ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmheguian         ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgauian     ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhegsiaa         ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgasiaa     ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhegsian         ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgasian     ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhegsuiaa        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgasuiaa    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhegsuian        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgasuian    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhegsmfaa        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgasmfaa    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhegsmfan        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgasmfan    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmheoguiaa        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphxgauiaa    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmheoguian        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphxgauian    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmheogsiaa        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphxgasiaa    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmheogsian        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphxgasian    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmheogsuiaa       ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphxgasuiaa   ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmheogsuian       ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphxgasuian   ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmheogsmfaa       ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphxgasmfaa   ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmheogsmfan       ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphxgasmfan   ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhoguiaa         ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgsuiaa     ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhoguian         ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgsuian     ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhogsiaa         ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgssiaa     ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhogsian         ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgssian     ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhogsuiaa        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgssuiaa    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhogsuian        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgssuian    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhogsmfaa        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgssmfaa    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmhogsmfan        ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zvdotphgssmfan    ( in64_64, in32_16_b, in32_16_c );
-out64_64 = __builtin_lsp_zmwgui            ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zmwgsi            ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zmwgsui           ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zmwguiaa          ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwguian          ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsiaa          ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsian          ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsuiaa         ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsuian         ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwguiaas         ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwguians         ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsiaas         ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsians         ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsuiaas        ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsuians        ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsmf           ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zmwgsmfr          ( in32_32_a, in32_32_b );
-out64_64 = __builtin_lsp_zmwgsmfaa         ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsmfraa        ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsmfan         ( in64_64, in32_32_b, in32_32_c );
-out64_64 = __builtin_lsp_zmwgsmfran        ( in64_64, in32_32_b, in32_32_c );
-out64_32 = __builtin_lsp_zvmhulsf          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhulsfr         ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhllsf          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhllsfr         ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhuusf          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhuusfr         ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhxlsf          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhxlsfr         ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhului          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhulsi          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhulsui         ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhllui          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhllsi          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhllsui         ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhuuui          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhuusi          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhuusui         ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhxlsui         ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhxlsi          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhxlui          ( in32_16_a, in32_16_b );
-out64_32 = __builtin_lsp_zvmhuluiaa        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuluiaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuluian        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuluians       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuluianp       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuluianps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsiaa        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsiaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsian        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsians       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsianp       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsianps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsuiaa       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsuiaas      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsuian       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsuians      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsuianp      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsuianps     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsfaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsfraas      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsfans       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsfrans      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsfanps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhulsfranps     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhlluiaa        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhlluiaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhlluian        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhlluians       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhlluianp       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhlluianps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsiaa        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsiaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsian        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsians       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsianp       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsianps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsuiaa       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsuiaas      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsuian       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsuians      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsuianp      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsuianps     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsfaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsfraas      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsfans       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsfrans      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsfanps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhllsfranps     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuuuiaa        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuuuiaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuuuian        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuuuians       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuuuianp       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuuuianps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusiaa        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusiaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusian        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusians       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusianp       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusianps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusuiaa       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusuiaas      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusuian       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusuians      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusuianp      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusuianps     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusfaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusfraas      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusfans       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusfrans      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusfanps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhuusfranps     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxluiaa        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxluiaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxluian        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxluians       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxluianp       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxluianps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsiaa        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsiaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsian        ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsians       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsianp       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsianps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsuiaa       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsuiaas      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsuian       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsuians      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsuianp      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsuianps     ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsfaas       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsfraas      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsfans       ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsfrans      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsfanps      ( in64_32, in32_16_b, in32_16_c );
-out64_32 = __builtin_lsp_zvmhxlsfranps     ( in64_32, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheui            ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhesi            ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhesui           ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmheoui           ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmheosi           ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmheosui          ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhoui            ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhosi            ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhosui           ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhesf            ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhesfr           ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmheosf           ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmheosfr          ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhosf            ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmhosfr           ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zmheuiaa          ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheuiaas         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheuian          ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheuians         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesiaa          ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesiaas         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesian          ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesians         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesuiaa         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesuiaas        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesuian         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesuians        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesfaas         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesfraas        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesfans         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhesfrans        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheouiaa         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheouiaas        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheouian         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheouians        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosiaa         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosiaas        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosian         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosians        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosuiaa        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosuiaas       ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosuian        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosuians       ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosfaas        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosfraas       ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosfans        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmheosfrans       ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhouiaa          ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhouiaas         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhouian          ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhouians         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosiaa          ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosiaas         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosian          ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosians         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosuiaa         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosuiaas        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosuian         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosuians        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosfaas         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosfraas        ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosfans         ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmhosfrans        ( in32_32_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsih           ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmhsuih          ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmhuih           ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmhuihs          ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmhsihs          ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmhsuihs         ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmhsiaah         ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsuiaah        ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhuiaah         ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsianh         ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsuianh        ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhuianh         ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhuiaahs        ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhuianhs        ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsiaahs        ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsianhs        ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsuiaahs       ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsuianhs       ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsfh           ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmhsfrh          ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zvmhsfaahs        ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsfraahs       ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsfanhs        ( in32_16_a, in32_16_b, in32_16_c );
-out32_16 = __builtin_lsp_zvmhsfranhs       ( in32_16_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphaui        ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphauis       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphasi        ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphasis       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphasui       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphasuis      ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphauiaa      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphauiaas     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphauian      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphauians     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasiaa      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasiaas     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasian      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasians     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasuiaa     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasuiaas    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasuian     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasuians    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasfs       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphasfrs      ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxasfs      ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxasfrs     ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphasfaas     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasfraas    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasfans     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphasfrans    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasfaas    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasfraas   ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasfans    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasfrans   ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxaui       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxauis      ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxasi       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxasis      ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxasui      ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxasuis     ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphxauiaa     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxauiaas    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxauian     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxauians    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasiaa     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasiaas    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasian     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasians    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasuiaa    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasuiaas   ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasuian    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphxasuians   ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphsui        ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphssi        ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphssui       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphsuis       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphssis       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphssuis      ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphsuiaa      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphsuian      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssiaa      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssian      ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssuiaa     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssuian     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphsuiaas     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphsuians     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssiaas     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssians     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssuiaas    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssuians    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssfs       ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphssfrs      ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zvdotphssfaas     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssfraas    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssfans     ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zvdotphssfrans    ( in32_32_a, in32_16_b, in32_16_c );
-out32_32 = __builtin_lsp_zmwlsiaa          ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwlsuiaa         ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwluiaa          ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwlsian          ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwlsuian         ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwluian          ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwluis           ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zmwlsis           ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zmwlsuis          ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zmwlsiaas         ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwlsians         ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwlsuiaas        ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwlsuians        ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwluiaas         ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwluians         ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwsf             ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zmwsfr            ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zmwsfaas          ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwsfraas         ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwsfans          ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zmwsfrans         ( in32_32_a, in32_32_b, in32_32_c );
-out32_32 = __builtin_lsp_zaddwus           ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zsubfwus          ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zaddwss           ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zsubfwss          ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zaddheuw          ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zsubfheuw         ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zaddhesw          ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zsubfhesw         ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zaddhouw          ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zsubfhouw         ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zaddhosw          ( in32_16_a, in32_16_b );
-out32_32 = __builtin_lsp_zsubfhosw         ( in32_16_a, in32_16_b );
-out32_16 = __builtin_lsp_zpkswgshfrs       ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zpkswgswfrs       ( in32_32_a, in32_32_b );
-out32_16 = __builtin_lsp_zvselh            ( in32_16_a, in32_16_b, in2_selmode );
-out32_32 = __builtin_lsp_zxtrw             ( in32_32_a, in32_32_b, in2_offset );
-out32_32 = __builtin_lsp_zbrminc           ( in32_32_a, in32_32_b );
-out32_32 = __builtin_lsp_zcircinc          ( in32_32_a, in32_32_b );
-out4_crd = __builtin_lsp_zvcmpgthu         ( in32_16_a, in32_16_b, in3_cmpsel );
-out4_crd = __builtin_lsp_zvcmpgths         ( in32_16_a, in32_16_b, in3_cmpsel );
-out4_crd = __builtin_lsp_zvcmplthu         ( in32_16_a, in32_16_b, in3_cmpsel );
-out4_crd = __builtin_lsp_zvcmplths         ( in32_16_a, in32_16_b, in3_cmpsel );
-out4_crd = __builtin_lsp_zvcmpeqh          ( in32_16_a, in32_16_b, in3_cmpsel );
-out64_64 = __builtin_lsp_zlddx             ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zldd              ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zldwx             ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zldw              ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zldhx             ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zldh              ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwgsfdx          ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zlwgsfd           ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwwosdx          ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zlwwosd           ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhsplatwdx      ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zlwhsplatwd       ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhsplatdx       ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zlwhsplatd        ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhgwsfdx        ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zlwhgwsfd         ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhedx           ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zlwhed            ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhosdx          ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zlwhosd           ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhoudx          ( ptr_a, in32_32_b );
-out64_64 = __builtin_lsp_zlwhoud           ( ptr_a, in5_uimm );
-out32_16 = __builtin_lsp_zlwhx             ( ptr_a, in32_32_b );
-out32_16 = __builtin_lsp_zlwh              ( ptr_a, in5_uimm );
-out32_32 = __builtin_lsp_zlwwx             ( ptr_a, in32_32_b );
-out32_32 = __builtin_lsp_zlww              ( ptr_a, in5_uimm );
-out32_32 = __builtin_lsp_zlhgwsfx          ( ptr_a, in32_32_b );
-out32_32 = __builtin_lsp_zlhgwsf           ( ptr_a, in5_uimm );
-out32_16 = __builtin_lsp_zlhhsplatx        ( ptr_a, in32_32_b );
-out32_16 = __builtin_lsp_zlhhsplat         ( ptr_a, in5_uimm );
-           __builtin_lsp_zstddx            ( in64_64, ptr_b, in32_32_c );
-           __builtin_lsp_zstdd             ( in64_64, ptr_b, in5_uimm );
-           __builtin_lsp_zstdwx            ( in64_64, ptr_b, in32_32_c );
-           __builtin_lsp_zstdw             ( in64_64, ptr_b, in5_uimm );
-           __builtin_lsp_zstdhx            ( in64_64, ptr_b, in32_32_c );
-           __builtin_lsp_zstdh             ( in64_64, ptr_b, in5_uimm );
-           __builtin_lsp_zstwhedx          ( in64_64, ptr_b, in32_32_c );
-           __builtin_lsp_zstwhed           ( in64_64, ptr_b, in5_uimm );
-           __builtin_lsp_zstwhodx          ( in64_64, ptr_b, in32_32_c );
-           __builtin_lsp_zstwhod           ( in64_64, ptr_b, in5_uimm );
-out32_16 = __builtin_lsp_zlhhex            ( ptr_a, in32_32_b );
-out32_16 = __builtin_lsp_zlhhe             ( ptr_a, in5_uimm );
-out32_16 = __builtin_lsp_zlhhosx           ( ptr_a, in32_32_b );
-out32_16 = __builtin_lsp_zlhhos            ( ptr_a, in5_uimm );
-out32_16 = __builtin_lsp_zlhhoux           ( ptr_a, in32_32_b );
-out32_16 = __builtin_lsp_zlhhou            ( ptr_a, in5_uimm );
-           __builtin_lsp_zsthex            ( in32_16_a, ptr_b, in32_32_c );
-           __builtin_lsp_zsthe             ( in32_16_a, ptr_b, in5_uimm );
-           __builtin_lsp_zsthox            ( in32_16_a, ptr_b, in32_32_c );
-           __builtin_lsp_zstho             ( in32_16_a, ptr_b, in5_uimm );
-           __builtin_lsp_zstwhx            ( in32_16_a, ptr_b, in32_32_c );
-           __builtin_lsp_zstwh             ( in32_16_a, ptr_b, in5_uimm );
-           __builtin_lsp_zstwwx            ( in32_32_a, ptr_b, in32_32_c );
-           __builtin_lsp_zstww             ( in32_32_a, ptr_b, in5_uimm );
-out64_64 = __builtin_lsp_zlddmx            ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zlddu             ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zldwmx            ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zldwu             ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zldhmx            ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zldhu             ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwgsfdmx         ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zlwgsfdu          ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwwosdmx         ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zlwwosdu          ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhsplatwdmx     ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zlwhsplatwdu      ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhsplatdmx      ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zlwhsplatdu       ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhgwsfdmx       ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zlwhgwsfdu        ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhedmx          ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zlwhedu           ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhosdmx         ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zlwhosdu          ( ptr_a, in5_uimm );
-out64_64 = __builtin_lsp_zlwhoudmx         ( in32_32_a, ptr_b );
-out64_64 = __builtin_lsp_zlwhoudu          ( ptr_a, in5_uimm );
-out32_16 = __builtin_lsp_zlwhmx            ( in32_32_a, ptr_b );
-out32_16 = __builtin_lsp_zlwhu             ( ptr_a, in5_uimm );
-out32_32 = __builtin_lsp_zlwwmx            ( in32_32_a, ptr_b );
-out32_32 = __builtin_lsp_zlwwu             ( ptr_a, in5_uimm );
-out32_32 = __builtin_lsp_zlhgwsfmx         ( in32_32_a, ptr_b );
-out32_32 = __builtin_lsp_zlhgwsfu          ( ptr_a, in5_uimm );
-out32_16 = __builtin_lsp_zlhhsplatmx       ( in32_32_a, ptr_b );
-out32_16 = __builtin_lsp_zlhhsplatu        ( ptr_a, in5_uimm );
-out32_16 = __builtin_lsp_zlhhemx           ( in32_32_a, ptr_b );
-out32_16 = __builtin_lsp_zlhheu            ( ptr_a, in5_uimm );
-out32_16 = __builtin_lsp_zlhhosmx          ( in32_32_a, ptr_b );
-out32_16 = __builtin_lsp_zlhhosu           ( ptr_a, in5_uimm );
-out32_16 = __builtin_lsp_zlhhoumx          ( in32_32_a, ptr_b );
-out32_16 = __builtin_lsp_zlhhouu           ( ptr_a, in5_uimm );
-           __builtin_lsp_zstddmx           ( in64_64, in32_32_b, ptr_c );
-           __builtin_lsp_zstddu            ( in64_64, ptr_b, in5_uimm );
-           __builtin_lsp_zstdwmx           ( in64_64, in32_32_b, ptr_c );
-           __builtin_lsp_zstdwu            ( in64_64, ptr_b, in5_uimm );
-           __builtin_lsp_zstdhmx           ( in64_64, in32_32_b, ptr_c );
-           __builtin_lsp_zstdhu            ( in64_64, ptr_b, in5_uimm );
-           __builtin_lsp_zstwhedmx         ( in64_64, in32_32_b, ptr_c );
-           __builtin_lsp_zstwhedu          ( in64_64, ptr_b, in5_uimm );
-           __builtin_lsp_zstwhodmx         ( in64_64, in32_32_b, ptr_c );
-           __builtin_lsp_zstwhodu          ( in64_64, ptr_b, in5_uimm );
-           __builtin_lsp_zsthemx           ( in32_16_a, in32_32_b, ptr_c );
-           __builtin_lsp_zstheu            ( in32_16_a, ptr_b, in5_uimm );
-           __builtin_lsp_zsthomx           ( in32_16_a, in32_32_b, ptr_c );
-           __builtin_lsp_zsthou            ( in32_16_a, ptr_b, in5_uimm );
-           __builtin_lsp_zstwhmx           ( in32_16_a, in32_32_b, ptr_c );
-           __builtin_lsp_zstwhu            ( in32_16_a, ptr_b, in5_uimm );
-           __builtin_lsp_zstwwmx           ( in32_32_a, in32_32_b, ptr_c );
-           __builtin_lsp_zstwwu            ( in32_32_a, ptr_b, in5_uimm );
+  out32_32 = __builtin_lsp_zvdotphgwssmfaa   ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphgwssmfan   ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphgwssmfraa  ( in32_32_a, in32_16_b, in32_16_c );
+  out32_32 = __builtin_lsp_zvdotphgwssmfran  ( in32_32_a, in32_16_b, in32_16_c );
 }
