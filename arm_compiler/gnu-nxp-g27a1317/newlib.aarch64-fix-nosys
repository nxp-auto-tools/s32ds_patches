diff --git a/libgloss/aarch64/Makefile.in b/libgloss/aarch64/Makefile.in
index 3c8a9fd..ab0ff6c 100644
--- a/libgloss/aarch64/Makefile.in
+++ b/libgloss/aarch64/Makefile.in
@@ -112,6 +112,7 @@ test:
 
 #
 crt0.o: crt0.S
+	$(CC) $(CFLAGS_FOR_TARGET) $(CFLAGS) $(INCLUDES) -o $@ -c $<
 
 rdimon-crt0.o: crt0.S
 	$(CC) $(CFLAGS_FOR_TARGET) $(CFLAGS) $(INCLUDES) -DARM_RDI_MONITOR -o $@ -c $<
diff --git a/libgloss/aarch64/crt0.S b/libgloss/aarch64/crt0.S
index ae6264d..f670e03 100644
--- a/libgloss/aarch64/crt0.S
+++ b/libgloss/aarch64/crt0.S
@@ -83,7 +83,7 @@
 	FUNC_START	_start
 
 /* Start by setting up a stack */
-
+#ifdef ARM_RDI_MONITOR
 	/*  Issue Angel SVC to read memory info.
 
 	    ptr to ptr to 4 words to receive data.  */
@@ -101,6 +101,7 @@
 	   exposed here in the HeapInfo Angel call.  */
 	ldr	x0, .LC0		/* point at returned values */
 	ldr	x1, [x0, #8]		/* get heap_limit */
+
 #ifdef __ILP32__
 	/* Sanity check on the heap base.  */
 	ldr	x0, [x0]		/* get heap_base */
@@ -124,6 +125,10 @@
 	tst	x1, #0xffffffff00000000
 	csinv	w1, w1, wzr, eq
 #endif
+#else
+	/* Set up the stack pointer to a fixed value.  */
+	ldr     x1, .Lstack
+#endif
 
 	/* Ensure quad-word stack alignment.  */
 	and	x0, x1, #~15
@@ -144,8 +149,10 @@
 	sub	x2, x2, x0		/* Third arg: length of block */
 	bl	FUNCTION (memset)
 
+#ifdef ARM_RDI_MONITOR
 	/* Need to set up standard file handles */
 	bl	FUNCTION (initialise_monitor_handles)
+#endif
 
 	/* .init and .fini sections are used to create constructors
 	   and destructors.  Here we call the _init function and arrange
@@ -155,11 +162,13 @@
 
 	bl	FUNCTION (_init)
 
+#ifdef ARM_RDI_MONITOR
 	/* Fetch and parse the command line.  */
-	adr	x1, .Lcmdline		/* Command line descriptor.  */
+	ldr	x1, .Lcmdline		/* Command line descriptor.  */
 	mov	w0, #AngelSVC_Reason_GetCmdLine
 	AngelSVCAsm AngelSVC
 	ldr	x8, .Lcmdline
+	ldr	x8, [x8]
 
 	mov	x0, #0		/* argc */
 	mov	x1, sp		/* argv */
@@ -216,6 +225,11 @@
 	and	x4, x1, ~15
 	mov	sp, x4
 
+#else
+	mov	x0, #0	/* argc = 0 */
+	mov	x1, #0	/* argv = NULL */
+#endif
+
 	bl	FUNCTION (main)
 
 	b	FUNCTION (exit)		/* Cannot return.  */
@@ -228,20 +242,26 @@ FUNCTION (_cpu_init_hook):
 	ret
 
 	.align 3
+#ifdef ARM_RDI_MONITOR
 .LC0:
 	GEN_DWORD HeapBase
+#else
+.Lstack:
+	GEN_DWORD __stack
+
+	.weak __stack
+#endif
 .LC1:
 	GEN_DWORD __bss_start__
 .LC2:
 	GEN_DWORD __bss_end__
 .Lfini:
 	GEN_DWORD FUNCTION(_fini)
+#ifdef ARM_RDI_MONITOR
 .Lenvp:
 	GEN_DWORD env
 .Lcmdline:
-	GEN_DWORD CommandLine
-	.dword	255
-
+	GEN_DWORD AngelSVCArgs
 /*  Workspace for Angel calls.  */
 	.data
 	.align 3
@@ -258,3 +278,7 @@ StackBase:	.dword	0
 StackLimit:	.dword	0
 env:		.dword	0	/* Dummy environment array */
 CommandLine:	.space	256,0	/*  Maximum length of 255 chars handled.  */
+AngelSVCArgs:
+	GEN_DWORD CommandLine
+	.dword	255
+#endif
\ No newline at end of file
diff --git a/libgloss/aarch64/elf-aem-validation.specs b/libgloss/aarch64/elf-aem-validation.specs
index ca0c92d..9778e8c 100644
--- a/libgloss/aarch64/elf-aem-validation.specs
+++ b/libgloss/aarch64/elf-aem-validation.specs
@@ -10,3 +10,6 @@
 
 *lib:
 cpu-init/rdimon-aem-el3.o%s --start-group %(libc) %(libgloss) --end-group
+
+*startfile:
+crti%O%s crtbegin%O%s %{!pg:rdimon-crt0%O%s} %{pg:rdimon-crt0%O%s}
\ No newline at end of file
diff --git a/libgloss/aarch64/elf-aem-ve.specs b/libgloss/aarch64/elf-aem-ve.specs
index 671d3c1..6ff30d3 100644
--- a/libgloss/aarch64/elf-aem-ve.specs
+++ b/libgloss/aarch64/elf-aem-ve.specs
@@ -17,3 +17,6 @@
 
 *lib:
 cpu-init/rdimon-aem-el3.o%s --start-group %(libc) %(libgloss) --end-group
+
+*startfile:
+crti%O%s crtbegin%O%s %{!pg:rdimon-crt0%O%s} %{pg:rdimon-crt0%O%s}
\ No newline at end of file
diff --git a/libgloss/aarch64/elf-rdimon.specs b/libgloss/aarch64/elf-rdimon.specs
index cb964db..9729621 100644
--- a/libgloss/aarch64/elf-rdimon.specs
+++ b/libgloss/aarch64/elf-rdimon.specs
@@ -1,3 +1,7 @@
+# rdimon.specs
+#
+# Spec file for AArch64 baremetal newlib with AngelAPI semi-hosting.
+
 %rename lib libc
 
 *libgloss:
@@ -5,3 +9,6 @@
 
 *lib:
 --start-group %(libc) %(libgloss) --end-group
+
+*startfile:
+crti%O%s crtbegin%O%s %{!pg:rdimon-crt0%O%s} %{pg:rdimon-crt0%O%s}
\ No newline at end of file
diff --git a/libgloss/libnosys/configure b/libgloss/libnosys/configure
index fbe7db7..d127ce2 100755
--- a/libgloss/libnosys/configure
+++ b/libgloss/libnosys/configure
@@ -2009,6 +2009,8 @@ case "${target}" in
 	;;
   a29k-amd-udi)
 	;;
+  aarch64*-*-*)
+	;;
   arc-*-*)
 	;;
   arm*-*-*)
@@ -2054,6 +2056,9 @@ case "${target}" in
 esac
 
 case "${target}" in
+  aarch64*-*-*)
+        #suppress "warning: _close etc is not implemented and will always fail"
+        ;;
   *-*-elf)
         $as_echo "#define HAVE_ELF 1" >>confdefs.h
 
diff --git a/libgloss/libnosys/configure.in b/libgloss/libnosys/configure.in
index 1d4846b..ae9a343 100644
--- a/libgloss/libnosys/configure.in
+++ b/libgloss/libnosys/configure.in
@@ -43,6 +43,8 @@ case "${target}" in
 	;;
   a29k-amd-udi)
 	;;
+  aarch64*-*-*)
+	;;
   arc-*-*)
 	;;
   arm*-*-*)
@@ -88,6 +90,9 @@ esac
 
 dnl Make sure we know if elf format used
 case "${target}" in
+  aarch64*-*-*)
+        #suppress "warning: _close etc is not implemented and will always fail"
+        ;;
   *-*-elf)
         AC_DEFINE(HAVE_ELF)
 
